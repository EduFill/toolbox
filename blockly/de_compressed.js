// Do not edit this file; automatically generated by build.py.
"use strict";

Blockly.MSG_DUPLICATE_BLOCK="Kopieren";Blockly.MSG_REMOVE_COMMENT="Kommentar entfernen";Blockly.MSG_ADD_COMMENT="Kommentar hinzuf\u00fcgen";Blockly.MSG_EXTERNAL_INPUTS="externe Eing\u00e4nge";Blockly.MSG_INLINE_INPUTS="interne Eing\u00e4nge";Blockly.MSG_DELETE_BLOCK="Block l\u00f6schen";Blockly.MSG_DELETE_X_BLOCKS="Block %1 l\u00f6schen";Blockly.MSG_COLLAPSE_BLOCK="Block zusammenfalten";Blockly.MSG_EXPAND_BLOCK="Block entfalten";Blockly.MSG_DISABLE_BLOCK="Block deaktivieren";
Blockly.MSG_ENABLE_BLOCK="Block aktivieren";Blockly.MSG_HELP="Hilfe";Blockly.MSG_COLLAPSE_ALL="Collapse Blocks";Blockly.MSG_EXPAND_ALL="Expand Blocks";Blockly.MSG_CHANGE_VALUE_TITLE="Wert \u00e4ndern:";Blockly.MSG_NEW_VARIABLE="Neue Variable...";Blockly.MSG_NEW_VARIABLE_TITLE="Name der neuen Variable:";Blockly.MSG_RENAME_VARIABLE="Variable umbenennen...";Blockly.MSG_RENAME_VARIABLE_TITLE='Alle "%1" Variablen umbenennen in:';Blockly.LANG_COLOUR_PICKER_HELPURL="http://de.wikipedia.org/wiki/Farbe";
Blockly.LANG_COLOUR_PICKER_TOOLTIP="W\u00e4hlen eine Farbe von der Palette.";Blockly.LANG_COLOUR_RANDOM_HELPURL="http://randomcolour.com";Blockly.LANG_COLOUR_RANDOM_TITLE="random colour";Blockly.LANG_COLOUR_RANDOM_TOOLTIP="Choose a colour at random.";Blockly.LANG_COLOUR_RGB_HELPURL="http://de.wikipedia.org/wiki/RGB-Farbraum";Blockly.LANG_COLOUR_RGB_TITLE="Farbe mit";Blockly.LANG_COLOUR_RGB_RED="rot";Blockly.LANG_COLOUR_RGB_GREEN="gr\u00fcn";Blockly.LANG_COLOUR_RGB_BLUE="blau";
Blockly.LANG_COLOUR_RGB_TOOLTIP="Kreiere eine Farbe mit selbst definierten rot, gr\u00fcn\nund blau Werten. Alle Werte m\u00fcssen zwischen 0 und 100 liegen.";Blockly.LANG_COLOUR_BLEND_HELPURL="http://meyerweb.com/eric/tools/color-blend/";Blockly.LANG_COLOUR_BLEND_TITLE="mische";Blockly.LANG_COLOUR_BLEND_COLOUR1="Farbe 1";Blockly.LANG_COLOUR_BLEND_COLOUR2="mit Farbe 2";Blockly.LANG_COLOUR_BLEND_RATIO="im Verh\u00e4ltniss";Blockly.LANG_COLOUR_BLEND_TOOLTIP="Vermische 2 Farbe mit konfigurierbaren Farbverh\u00e4ltniss (0.0 - 1.0).";
Blockly.LANG_CONTROLS_IF_HELPURL="http://code.google.com/p/blockly/wiki/If_Then";Blockly.LANG_CONTROLS_IF_TOOLTIP_1="Wenn eine Bedingung wahr (true) ist, dann f\u00fchre eine Anweisung aus.";Blockly.LANG_CONTROLS_IF_TOOLTIP_2="Wenn eine Bedingung wahr (true) ist, dann f\u00fchre die erste Anweisung aus.\nAnsonsten f\u00fchre die zweite Anweisung aus.";Blockly.LANG_CONTROLS_IF_TOOLTIP_3="Wenn der erste Bedingung wahr (true) ist, dann f\u00fchre die erste Anweisung aus.\nOder wenn die zweite Bedingung wahr (true) ist, dann f\u00fchre die zweite Anweisung aus.";
Blockly.LANG_CONTROLS_IF_TOOLTIP_4="Wenn der erste Bedingung wahr (true) ist, dann f\u00fchre die erste Anweisung aus.\nOder wenn die zweite Bedingung wahr (true) ist, dann f\u00fchre die zweite Anweisung aus.\nFalls keine der beiden Bedingungen wahr (true) ist, dann f\u00fchre die dritte Anweisung aus.";Blockly.LANG_CONTROLS_IF_MSG_IF="wenn";Blockly.LANG_CONTROLS_IF_MSG_ELSEIF="oder wenn";Blockly.LANG_CONTROLS_IF_MSG_ELSE="oder";Blockly.LANG_CONTROLS_IF_MSG_THEN="mache";
Blockly.LANG_CONTROLS_IF_IF_TITLE_IF="wenn";Blockly.LANG_CONTROLS_IF_IF_TOOLTIP="Hinzuf\u00fcgen, entfernen oder sortieren von Sektionen";Blockly.LANG_CONTROLS_IF_ELSEIF_TITLE_ELSEIF="oder wenn";Blockly.LANG_CONTROLS_IF_ELSEIF_TOOLTIP="Eine weitere Bedingung hinzuf\u00fcgen.";Blockly.LANG_CONTROLS_IF_ELSE_TITLE_ELSE="oder";Blockly.LANG_CONTROLS_IF_ELSE_TOOLTIP="Eine oder Bedingung hinzuf\u00fcgen, f\u00fchrt eine Anweisung aus falls keine Bedingung zutrifft.";
Blockly.LANG_CONTROLS_REPEAT_HELPURL="http://de.wikipedia.org/wiki/For-Schleife";Blockly.LANG_CONTROLS_REPEAT_TITLE_REPEAT="wiederhole";Blockly.LANG_CONTROLS_REPEAT_TITLE_TIMES="mal";Blockly.LANG_CONTROLS_REPEAT_INPUT_DO="mache";Blockly.LANG_CONTROLS_REPEAT_TOOLTIP="Eine Anweisung mehrfach ausf\u00fchren.";Blockly.LANG_CONTROLS_WHILEUNTIL_HELPURL="http://de.wikipedia.org/wiki/Schleife_%28Programmierung%29";Blockly.LANG_CONTROLS_WHILEUNTIL_INPUT_DO="mache";
Blockly.LANG_CONTROLS_WHILEUNTIL_OPERATOR_WHILE="Wiederhole solange";Blockly.LANG_CONTROLS_WHILEUNTIL_OPERATOR_UNTIL="Wiederhole bis";Blockly.LANG_CONTROLS_WHILEUNTIL_TOOLTIP_WHILE="F\u00fchre die Anweisung solange aus wie die Bedingung wahr (true) ist.";Blockly.LANG_CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL="F\u00fchre die Anweisung solange aus wie die Bedingung falsch (false) ist.";Blockly.LANG_CONTROLS_FOR_HELPURL="http://de.wikipedia.org/wiki/For-Schleif";Blockly.LANG_CONTROLS_FOR_INPUT_WITH="Z\u00e4hle";
Blockly.LANG_CONTROLS_FOR_INPUT_VAR="x";Blockly.LANG_CONTROLS_FOR_INPUT_FROM="von";Blockly.LANG_CONTROLS_FOR_INPUT_TO="bis";Blockly.LANG_CONTROLS_FOR_INPUT_DO="mache";Blockly.LANG_CONTROLS_FOR_INPUT_BY="by";Blockly.LANG_CONTROLS_FOR_TAIL="";Blockly.LANG_CONTROLS_FOR_TOOLTIP='Z\u00e4hle die Variable "%1" von einem Startwert\nbis zu einem Zielwert und f\u00fchre f\u00fcr jeden Wert\neine Anweisung aus.';Blockly.LANG_CONTROLS_FOREACH_HELPURL="http://de.wikipedia.org/wiki/For-Schleif";
Blockly.LANG_CONTROLS_FOREACH_INPUT_ITEM="F\u00fcr Wert";Blockly.LANG_CONTROLS_FOREACH_INPUT_VAR="x";Blockly.LANG_CONTROLS_FOREACH_INPUT_INLIST="aus der Liste";Blockly.LANG_CONTROLS_FOREACH_INPUT_INLIST_TAIL="";Blockly.LANG_CONTROLS_FOREACH_INPUT_DO="mache";Blockly.LANG_CONTROLS_FOREACH_TOOLTIP='F\u00fchre eine Anweisung f\u00fcr jeden Wert in der Liste aus\nund setzte dabei die Variable "%1" \nauf den aktuellen Listen Wert.';Blockly.LANG_CONTROLS_FLOW_STATEMENTS_HELPURL="http://de.wikipedia.org/wiki/Kontrollstruktur";
Blockly.LANG_CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK="ausbrechen aus der Schleife";Blockly.LANG_CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE="mit der n\u00e4chsten Iteration fortfahren aus der Schleife";Blockly.LANG_CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK="Die umgebene Schleife beenden.";Blockly.LANG_CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE="Diese Anweisung abbrechen\nund mit der n\u00e4chsten Schleifeniteration fortfahren.";Blockly.LANG_CONTROLS_FLOW_STATEMENTS_WARNING="Warnung:\nDiese block sollte\nnur in einer Schleife\nverwendet werden.";
Blockly.LANG_LOGIC_COMPARE_HELPURL="http://de.wikipedia.org/wiki/Vergleich_%28Zahlen%29";Blockly.LANG_LOGIC_COMPARE_TOOLTIP_EQ="Ist wahr (true) wenn beide Werte identisch sind.";Blockly.LANG_LOGIC_COMPARE_TOOLTIP_NEQ="Ist wahr (true) wenn beide Werte unterschiedlich sind.";Blockly.LANG_LOGIC_COMPARE_TOOLTIP_LT="Ist wahr (true) wenn der erste Wert kleiner als\nder zweite Wert ist.";Blockly.LANG_LOGIC_COMPARE_TOOLTIP_LTE="Ist wahr (true) wenn der erste Wert kleiner als\noder gleich gross wie zweite Wert ist.";
Blockly.LANG_LOGIC_COMPARE_TOOLTIP_GT="Ist wahr (true) wenn der erste Wert gr\u00f6sser als\nder zweite Wert ist.";Blockly.LANG_LOGIC_COMPARE_TOOLTIP_GTE="Ist wahr (true) wenn der erste Wert gr\u00f6sser als\noder gleich gross wie zweite Wert ist.";Blockly.LANG_LOGIC_OPERATION_HELPURL="http://code.google.com/p/blockly/wiki/And_Or";Blockly.LANG_LOGIC_OPERATION_AND="und";Blockly.LANG_LOGIC_OPERATION_OR="oder";Blockly.LANG_LOGIC_OPERATION_TOOLTIP_AND="Ist wahr (true) wenn beide Werte wahr (true) sind.";
Blockly.LANG_LOGIC_OPERATION_TOOLTIP_OR="Ist wahr (true) wenn einer der beiden Werte wahr (true) ist.";Blockly.LANG_LOGIC_NEGATE_HELPURL="http://code.google.com/p/blockly/wiki/Not";Blockly.LANG_LOGIC_NEGATE_INPUT_NOT="nicht";Blockly.LANG_LOGIC_NEGATE_TOOLTIP="Ist wahr (true) wenn der Eingabewert falsch (false) ist.\nIst falsch (false) wenn der Eingabewert wahr (true) ist.";Blockly.LANG_LOGIC_BOOLEAN_HELPURL="http://code.google.com/p/blockly/wiki/True_False";Blockly.LANG_LOGIC_BOOLEAN_TRUE="wahr";
Blockly.LANG_LOGIC_BOOLEAN_FALSE="falsch";Blockly.LANG_LOGIC_BOOLEAN_TOOLTIP="Ist entweder wahr (true) oder falsch (false)";Blockly.LANG_LOGIC_NULL_HELPURL="http://de.wikipedia.org/wiki/Nullwert";Blockly.LANG_LOGIC_NULL="null";Blockly.LANG_LOGIC_NULL_TOOLTIP="Ist NULL.";Blockly.LANG_LOGIC_TERNARY_HELPURL="http://de.wikipedia.org/wiki/%3F:#Auswahloperator";Blockly.LANG_LOGIC_TERNARY_CONDITION="test";Blockly.LANG_LOGIC_TERNARY_IF_TRUE="wenn wahr";Blockly.LANG_LOGIC_TERNARY_IF_FALSE="wenn falsch";
Blockly.LANG_LOGIC_TERNARY_TOOLTIP='\u00dcberpr\u00fcft eine Bedingung "test". Wenn die Bedingung wahr ist\nwird der "wenn wahr" Wert zur\u00fcckgegeben, andernfalls der "wenn falsch" Wert';Blockly.LANG_MATH_NUMBER_HELPURL="http://de.wikipedia.org/wiki/Zahl";Blockly.LANG_MATH_NUMBER_TOOLTIP="Eine Zahl.";Blockly.LANG_MATH_ARITHMETIC_HELPURL="http://de.wikipedia.org/wiki/Grundrechenart";Blockly.LANG_MATH_ARITHMETIC_TOOLTIP_ADD="Ist die Summe zweier Werte.";
Blockly.LANG_MATH_ARITHMETIC_TOOLTIP_MINUS="Ist die Differenz zweier Werte.";Blockly.LANG_MATH_ARITHMETIC_TOOLTIP_MULTIPLY="Ist das Produkt zweier Werte.";Blockly.LANG_MATH_ARITHMETIC_TOOLTIP_DIVIDE="Ist der Quotient zweier Werte.";Blockly.LANG_MATH_ARITHMETIC_TOOLTIP_POWER="Ist der erste Wert potenziert mit\ndem zweiten Wert.";Blockly.LANG_MATH_SINGLE_HELPURL="http://de.wikipedia.org/wiki/Quadratwurzel";Blockly.LANG_MATH_SINGLE_OP_ROOT="Quadratwurzel";Blockly.LANG_MATH_SINGLE_OP_ABSOLUTE="Absolutwert";
Blockly.LANG_MATH_SINGLE_TOOLTIP_ROOT="Ist die Qudratwurzel eines Wertes.";Blockly.LANG_MATH_SINGLE_TOOLTIP_ABS="Ist der Absolutwert eines Wertes.";Blockly.LANG_MATH_SINGLE_TOOLTIP_NEG="Negiert einen Wert.";Blockly.LANG_MATH_SINGLE_TOOLTIP_LN="Ist der nat\u00fcrliche Logarithmus eines Wertes.";Blockly.LANG_MATH_SINGLE_TOOLTIP_LOG10="Ist der dekadische Logarithmus eines Wertes.";Blockly.LANG_MATH_SINGLE_TOOLTIP_EXP="Ist Wert der Exponentialfunktion eines Wertes.";
Blockly.LANG_MATH_SINGLE_TOOLTIP_POW10="Rechnet 10 hoch Eingabewert.";Blockly.LANG_MATH_TRIG_HELPURL="http://de.wikipedia.org/wiki/Trigonometrie";Blockly.LANG_MATH_TRIG_TOOLTIP_SIN="Ist der Sinus eins Winkels.";Blockly.LANG_MATH_TRIG_TOOLTIP_COS="Ist der Cosinus eins Winkels.";Blockly.LANG_MATH_TRIG_TOOLTIP_TAN="Ist der Tangens eins Winkels.";Blockly.LANG_MATH_TRIG_TOOLTIP_ASIN="Ist der Arcussinus des Eingabewertes.";Blockly.LANG_MATH_TRIG_TOOLTIP_ACOS="Ist der Arcuscosinus des Eingabewertes.";
Blockly.LANG_MATH_TRIG_TOOLTIP_ATAN="Ist der Arcustangens des Eingabewertes.";Blockly.LANG_MATH_CONSTANT_HELPURL="http://de.wikipedia.org/wiki/Mathematische_Konstante";Blockly.LANG_MATH_CONSTANT_TOOLTIP="Mathematische Konstanten wie: \u03c0 (3.141\u2026), e (2.718\u2026), \u03c6 (1.618\u2026),\nsqrt(2) (1.414\u2026), sqrt(\u00bd) (0.707\u2026) oder \u221e (unendlich).";Blockly.LANG_MATH_IS_EVEN="ist gerade";Blockly.LANG_MATH_IS_ODD="ist ungerade";Blockly.LANG_MATH_IS_PRIME="ist eine Primenzahl";
Blockly.LANG_MATH_IS_WHOLE="ganze Zahl";Blockly.LANG_MATH_IS_POSITIVE="ist positiv";Blockly.LANG_MATH_IS_NEGATIVE="ist negativ";Blockly.LANG_MATH_IS_DIVISIBLE_BY="ist teilbar durch";Blockly.LANG_MATH_IS_TOOLTIP="\u00dcberpr\u00fcft ob eine Zahl gerade, ungerade, eine Primenzahl, ganzzahlig,\npositiv, negativ oder durch eine zweite Zahl teilbar ist.\nGibt wahr (true) oder falsch (false) zur\u00fcck.";Blockly.LANG_MATH_CHANGE_HELPURL="http://de.wikipedia.org/wiki/Inkrement_und_Dekrement";
Blockly.LANG_MATH_CHANGE_TITLE_CHANGE="erh\u00f6he";Blockly.LANG_MATH_CHANGE_TITLE_ITEM="Variable";Blockly.LANG_MATH_CHANGE_INPUT_BY="um";Blockly.LANG_MATH_CHANGE_TOOLTIP='Addiert einen Wert zur Variable "%1" hinzu.';Blockly.LANG_MATH_ROUND_HELPURL="http://de.wikipedia.org/wiki/Runden";Blockly.LANG_MATH_ROUND_TOOLTIP="Eine Zahl auf oder ab runden.";Blockly.LANG_MATH_ROUND_OPERATOR_ROUND="runden";Blockly.LANG_MATH_ROUND_OPERATOR_ROUNDUP="auf runden";Blockly.LANG_MATH_ROUND_OPERATOR_ROUNDDOWN="ab runden";
Blockly.LANG_MATH_ONLIST_HELPURL="http://www.sysplus.ch/einstieg.php?links=menu&seite=4125&grad=Crash&prog=Excel";Blockly.LANG_MATH_ONLIST_OPERATOR_SUM="Summme einer Liste";Blockly.LANG_MATH_ONLIST_OPERATOR_MIN="Minimalwert einer Liste";Blockly.LANG_MATH_ONLIST_OPERATOR_MAX="Maximalwert einer Liste";Blockly.LANG_MATH_ONLIST_OPERATOR_AVERAGE="Mittelwert einer Liste";Blockly.LANG_MATH_ONLIST_OPERATOR_MEDIAN="Median einer Liste";Blockly.LANG_MATH_ONLIST_OPERATOR_MODE="Modulo / Restwert einer Liste";
Blockly.LANG_MATH_ONLIST_OPERATOR_STD_DEV="Standart Abweichung einer Liste";Blockly.LANG_MATH_ONLIST_OPERATOR_RANDOM="Zufallswert einer Liste";Blockly.LANG_MATH_ONLIST_TOOLTIP_SUM="Ist die Summe aller Werte in einer Liste.";Blockly.LANG_MATH_ONLIST_TOOLTIP_MIN="Ist der kleinste Wert in einer Liste.";Blockly.LANG_MATH_ONLIST_TOOLTIP_MAX="Ist der gr\u00f6sste Wert in einer Liste.";Blockly.LANG_MATH_ONLIST_TOOLTIP_AVERAGE="Ist der Durchschnittswert aller Werte in einer Liste.";
Blockly.LANG_MATH_ONLIST_TOOLTIP_MEDIAN="Ist der Zentralwert aller Werte in einer Liste.";Blockly.LANG_MATH_ONLIST_TOOLTIP_MODE="Findet den am h\u00e4ufigsten vorkommenden Wert in einer Liste.\nFalls kein Wert \u00f6fter vorkomme als alle anderen,\nwird die originale Liste zur\u00fcckgegen";Blockly.LANG_MATH_ONLIST_TOOLTIP_STD_DEV="Ist die standartiesierte Standartabweichung aller Werte in der Liste";Blockly.LANG_MATH_ONLIST_TOOLTIP_RANDOM="Gebe einen Zufallswert aus der Liste zur\u00fcck.";
Blockly.LANG_MATH_MODULO_HELPURL="http://de.wikipedia.org/wiki/Modulo";Blockly.LANG_MATH_MODULO_INPUT_DIVIDEND="Rest von";Blockly.LANG_MATH_MODULO_TOOLTIP="Der Rest nach einer Division.";Blockly.LANG_MATH_CONSTRAIN_HELPURL="http://en.wikipedia.org/wiki/Clamping_%28graphics%29";Blockly.LANG_MATH_CONSTRAIN_INPUT_CONSTRAIN="begrenzen";Blockly.LANG_MATH_CONSTRAIN_INPUT_LOW="von";Blockly.LANG_MATH_CONSTRAIN_INPUT_HIGH="bis";Blockly.LANG_MATH_CONSTRAIN_TOOLTIP="Begrenzt den Wertebereich mittels von / bis Werte. (inklusiv)";
Blockly.LANG_MATH_RANDOM_INT_HELPURL="http://de.wikipedia.org/wiki/Zufallszahlen";Blockly.LANG_MATH_RANDOM_INT_INPUT_FROM="ganzahliger Zufallswerte zwischen";Blockly.LANG_MATH_RANDOM_INT_INPUT_TO="und";Blockly.LANG_MATH_RANDOM_INT_TOOLTIP="Erzeuge eine ganzahligen Zufallswert zwischen\nzwei Werten (inklusiv).";Blockly.LANG_MATH_RANDOM_FLOAT_HELPURL="http://de.wikipedia.org/wiki/Zufallszahlen";Blockly.LANG_MATH_RANDOM_FLOAT_TITLE_RANDOM="Zufallszahl (0.0 -1.0)";
Blockly.LANG_MATH_RANDOM_FLOAT_TOOLTIP="Erzeuge eine Zufallszahl\nzwischen 0.0 (inklusiv) und 1.0 (exklusiv).";Blockly.LANG_TEXT_TEXT_HELPURL="http://de.wikipedia.org/wiki/Zeichenkette";Blockly.LANG_TEXT_TEXT_TOOLTIP="Ein Buchstabe, Text oder Satz.";Blockly.LANG_TEXT_JOIN_HELPURL="";Blockly.LANG_TEXT_JOIN_TITLE_CREATEWITH="Erstelle Text aus";Blockly.LANG_TEXT_JOIN_TOOLTIP="Erstellt einen Text durch das verbinden\nvon mehreren Textelementen.";Blockly.LANG_TEXT_CREATE_JOIN_TITLE_JOIN="verbinden";
Blockly.LANG_TEXT_CREATE_JOIN_TOOLTIP="Hinzuf\u00fcgen, entfernen und sortieren von Elementen.";Blockly.LANG_TEXT_CREATE_JOIN_ITEM_TITLE_ITEM="Element";Blockly.LANG_TEXT_CREATE_JOIN_ITEM_TOOLTIP="Ein Element zum Text hinzuf\u00fcgen.";Blockly.LANG_TEXT_APPEND_HELPURL="http://www.liv.ac.uk/HPC/HTMLF90Course/HTMLF90CourseNotesnode91.html";Blockly.LANG_TEXT_APPEND_TO="An";Blockly.LANG_TEXT_APPEND_APPENDTEXT="Text anh\u00e4ngen";Blockly.LANG_TEXT_APPEND_VARIABLE="Variable";
Blockly.LANG_TEXT_APPEND_TOOLTIP='Text an die Variable "%1" anh\u00e4ngen.';Blockly.LANG_TEXT_LENGTH_HELPURL="http://www.liv.ac.uk/HPC/HTMLF90Course/HTMLF90CourseNotesnode91.html";Blockly.LANG_TEXT_LENGTH_INPUT_LENGTH="l\u00e4nge";Blockly.LANG_TEXT_LENGTH_TOOLTIP="Die Anzahl von Zeichen in einem Textes. (inkl. Leerzeichen)";Blockly.LANG_TEXT_ISEMPTY_HELPURL="http://www.liv.ac.uk/HPC/HTMLF90Course/HTMLF90CourseNotesnode91.html";Blockly.LANG_TEXT_ISEMPTY_INPUT_ISEMPTY="ist leer?";
Blockly.LANG_TEXT_ISEMPTY_TOOLTIP="Ist wahr (true), wenn der Text leer ist.";Blockly.LANG_TEXT_INDEXOF_HELPURL="http://publib.boulder.ibm.com/infocenter/lnxpcomp/v8v101/index.jsp?topic=%2Fcom.ibm.xlcpp8l.doc%2Flanguage%2Fref%2Farsubex.htm";Blockly.LANG_TEXT_INDEXOF_INPUT_INTEXT="im Text";Blockly.LANG_TEXT_INDEXOF_OPERATOR_FIRST="Suche erstes Vorkommniss des Begriff";Blockly.LANG_TEXT_INDEXOF_OPERATOR_LAST="Suche letztes Vorkommniss des Begriff";Blockly.LANG_TEXT_INDEXOF_TOOLTIP="Findest das erste / letzte Vorkommniss\neines cuchbegriffes in einem Text.\nGibt die Position des Begriffes oder 0 zur\u00fcck.";
Blockly.LANG_TEXT_CHARAT_HELPURL="http://publib.boulder.ibm.com/infocenter/lnxpcomp/v8v101/index.jsp?topic=%2Fcom.ibm.xlcpp8l.doc%2Flanguage%2Fref%2Farsubex.htm";Blockly.LANG_TEXT_CHARAT_INPUT_INTEXT="vom Text";Blockly.LANG_TEXT_CHARAT_FROM_START="Nehme Buchstabe #ten";Blockly.LANG_TEXT_CHARAT_FROM_END="Nehme #te Buchstabe von hinten";Blockly.LANG_TEXT_CHARAT_FIRST="Nehme ersten Buchstabe";Blockly.LANG_TEXT_CHARAT_LAST="Nehme letzten Buchstabe";Blockly.LANG_TEXT_CHARAT_RANDOM="Nehme zuf\u00e4lligen Buchstabe";
Blockly.LANG_TEXT_CHARAT_TOOLTIP="Extrahiere einen Buchstaben von einer spezifizierten Position.";Blockly.LANG_TEXT_SUBSTRING_HELPURL="http://publib.boulder.ibm.com/infocenter/lnxpcomp/v8v101/index.jsp?topic=%2Fcom.ibm.xlcpp8l.doc%2Flanguage%2Fref%2Farsubex.htm";Blockly.LANG_TEXT_SUBSTRING_INPUT_IN_TEXT="in text";Blockly.LANG_TEXT_SUBSTRING_INPUT_AT1="get substring from";Blockly.LANG_TEXT_SUBSTRING_INPUT_AT2="to";Blockly.LANG_TEXT_SUBSTRING_FROM_START="Buchstabe #ten";
Blockly.LANG_TEXT_SUBSTRING_FROM_END="#te Buchstabe von hinten";Blockly.LANG_TEXT_SUBSTRING_FIRST="ersten Buchstabe";Blockly.LANG_TEXT_SUBSTRING_LAST="letzten Buchstabe";Blockly.LANG_TEXT_SUBSTRING_TOOLTIP="Returns a specified portion of the text.";Blockly.LANG_TEXT_CHANGECASE_HELPURL="http://www.liv.ac.uk/HPC/HTMLF90Course/HTMLF90CourseNotesnode91.html";Blockly.LANG_TEXT_CHANGECASE_OPERATOR_UPPERCASE="umwandeln in GROSSBUCHSTABEN";Blockly.LANG_TEXT_CHANGECASE_OPERATOR_LOWERCASE="umwandeln in kleinbuchstaben";
Blockly.LANG_TEXT_CHANGECASE_OPERATOR_TITLECASE="umwandeln in W\u00f6rter";Blockly.LANG_TEXT_CHANGECASE_TOOLTIP="Wandelt Schreibweise von Texten um,\nin Grossbuchstaben, Kleinbuchstaben oder\nden ersten Buchstaben jedes Wortes gross und die anderen klein.";Blockly.LANG_TEXT_TRIM_HELPURL="http://www.liv.ac.uk/HPC/HTMLF90Course/HTMLF90CourseNotesnode91.html";Blockly.LANG_TEXT_TRIM_OPERATOR_BOTH="entferne Leerzeichen von Anfang und Ende Seiten";Blockly.LANG_TEXT_TRIM_OPERATOR_LEFT="entferne Leerzeichen von Anfang Seite";
Blockly.LANG_TEXT_TRIM_OPERATOR_RIGHT="entferne Leerzeichen von Ende Seite";Blockly.LANG_TEXT_TRIM_TOOLTIP="Entfernt Leerzeichen vom Anfang und / oder Ende\neines Textes.";Blockly.LANG_TEXT_PRINT_HELPURL="http://www.liv.ac.uk/HPC/HTMLF90Course/HTMLF90CourseNotesnode91.html";Blockly.LANG_TEXT_PRINT_TITLE_PRINT="Ausgabe";Blockly.LANG_TEXT_PRINT_TOOLTIP="Gib den Inhalt einer Variable aus.";Blockly.LANG_TEXT_PROMPT_HELPURL="http://www.liv.ac.uk/HPC/HTMLF90Course/HTMLF90CourseNotesnode92.html";
Blockly.LANG_TEXT_PROMPT_TYPE_TEXT="Fragt nach Text mit Hinweis";Blockly.LANG_TEXT_PROMPT_TYPE_NUMBER="Fragt nach Zahl mit Hinweis";Blockly.LANG_TEXT_PROMPT_TOOLTIP_NUMBER="Fragt den Benutzer nach ein Zahl.";Blockly.LANG_TEXT_PROMPT_TOOLTIP_TEXT="Fragt den Benutzer nach einem Text.";Blockly.LANG_LISTS_CREATE_EMPTY_HELPURL="http://en.wikipedia.org/wiki/Linked_list#Empty_lists";Blockly.LANG_LISTS_CREATE_EMPTY_TITLE="Erzeuge eine leere Liste";Blockly.LANG_LISTS_CREATE_EMPTY_TOOLTIP="Erzeugt eine leere Liste ohne Inhalt.";
Blockly.LANG_LISTS_CREATE_WITH_INPUT_WITH="Erzeuge Liste mit";Blockly.LANG_LISTS_CREATE_WITH_TOOLTIP="Erzeugt eine List mit konfigurierten Elementen.";Blockly.LANG_LISTS_CREATE_WITH_CONTAINER_TITLE_ADD="Liste";Blockly.LANG_LISTS_CREATE_WITH_CONTAINER_TOOLTIP="Hinzuf\u00fcgen, entfernen und sortieren von Elementen.";Blockly.LANG_LISTS_CREATE_WITH_ITEM_TITLE="Element";Blockly.LANG_LISTS_CREATE_WITH_ITEM_TOOLTIP="Ein Element zur Liste hinzuf\u00fcgen.";Blockly.LANG_LISTS_REPEAT_HELPURL="http://publib.boulder.ibm.com/infocenter/lnxpcomp/v8v101/index.jsp?topic=%2Fcom.ibm.xlcpp8l.doc%2Flanguage%2Fref%2Farsubex.htm";
Blockly.LANG_LISTS_REPEAT_INPUT_WITH="Erzeuge Liste mit Element";Blockly.LANG_LISTS_REPEAT_INPUT_REPEATED="wiederhole es";Blockly.LANG_LISTS_REPEAT_INPUT_TIMES="mal";Blockly.LANG_LISTS_REPEAT_TOOLTIP="Erzeugt eine Liste mit einer variablen\nAnzahl von Elementen";Blockly.LANG_LISTS_LENGTH_HELPURL="http://www.liv.ac.uk/HPC/HTMLF90Course/HTMLF90CourseNotesnode91.html";Blockly.LANG_LISTS_LENGTH_INPUT_LENGTH="l\u00e4nge";Blockly.LANG_LISTS_LENGTH_TOOLTIP="Die Anzahl von Elementen in der Liste.";
Blockly.LANG_LISTS_IS_EMPTY_HELPURL="http://www.liv.ac.uk/HPC/HTMLF90Course/HTMLF90CourseNotesnode91.html";Blockly.LANG_LISTS_INPUT_IS_EMPTY="ist leer?";Blockly.LANG_LISTS_TOOLTIP="Ist wahr (true), wenn die Liste leer ist.";Blockly.LANG_LISTS_INDEX_OF_HELPURL="http://publib.boulder.ibm.com/infocenter/lnxpcomp/v8v101/index.jsp?topic=%2Fcom.ibm.xlcpp8l.doc%2Flanguage%2Fref%2Farsubex.htm";Blockly.LANG_LISTS_INDEX_OF_INPUT_IN_LIST="in der Liste";Blockly.LANG_LISTS_INDEX_OF_FIRST="Suche erstes Vorkommniss";
Blockly.LANG_LISTS_INDEX_OF_LAST="Suche letztes Vorkommniss";Blockly.LANG_LISTS_INDEX_OF_TOOLTIP="Sucht die Position (index) eines Elementes in der Liste\nGibt 0 zur\u00fcck wenn nichts gefunden wurde.";Blockly.LANG_LISTS_GET_INDEX_HELPURL="http://publib.boulder.ibm.com/infocenter/lnxpcomp/v8v101/index.jsp?topic=%2Fcom.ibm.xlcpp8l.doc%2Flanguage%2Fref%2Farsubex.htm";Blockly.LANG_LISTS_GET_INDEX_GET="Nehme";Blockly.LANG_LISTS_GET_INDEX_GET_REMOVE="Nehme und entferne";
Blockly.LANG_LISTS_GET_INDEX_REMOVE="Entferne";Blockly.LANG_LISTS_GET_INDEX_FROM_START="#te";Blockly.LANG_LISTS_GET_INDEX_FROM_END="#te von hinten";Blockly.LANG_LISTS_GET_INDEX_FIRST="erste";Blockly.LANG_LISTS_GET_INDEX_LAST="letzte";Blockly.LANG_LISTS_GET_INDEX_RANDOM="zuf\u00e4lliges";Blockly.LANG_LISTS_GET_INDEX_INPUT_IN_LIST="Element von der Liste";Blockly.LANG_LISTS_GET_INDEX_TOOLTIP_GET_FROM_START="Extrahiere das #1te Element von der Liste.";
Blockly.LANG_LISTS_GET_INDEX_TOOLTIP_GET_FROM_END="Extrahiere das #1te Element vom Ende der Liste.";Blockly.LANG_LISTS_GET_INDEX_TOOLTIP_GET_FIRST="Extrahiere das erste Element von der Liste.";Blockly.LANG_LISTS_GET_INDEX_TOOLTIP_GET_LAST="Extrahiere das letzte Element von der Liste.";Blockly.LANG_LISTS_GET_INDEX_TOOLTIP_GET_RANDOM="Extrahiere ein zuf\u00e4lliges Element von der Liste.";Blockly.LANG_LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_START="Extrahiere und entfernt das #1te Element von der Liste.";
Blockly.LANG_LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_END="Extrahiere und entfernt das #1te Element vom Ende der Liste.";Blockly.LANG_LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST="Extrahiere und entfernt das erste Element von der Liste.";Blockly.LANG_LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST="Extrahiere und entfernt das letzte Element von der Liste.";Blockly.LANG_LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM="Extrahiere und entfernt ein zuf\u00e4lliges Element von der Liste.";
Blockly.LANG_LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_START="Entfernt das #1te Element von der Liste.";Blockly.LANG_LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_END="Entfernt das #1te Element vom Ende der Liste.";Blockly.LANG_LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST="Entfernt das erste Element von der Liste.";Blockly.LANG_LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST="Entfernt das letzte Element von der Liste.";Blockly.LANG_LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM="Entfernt ein zuf\u00e4lliges Element von der Liste.";
Blockly.LANG_LISTS_SET_INDEX_HELPURL="http://publib.boulder.ibm.com/infocenter/lnxpcomp/v8v101/index.jsp?topic=%2Fcom.ibm.xlcpp8l.doc%2Flanguage%2Fref%2Farsubex.htm";Blockly.LANG_LISTS_SET_INDEX_INPUT_IN_LIST="in list";Blockly.LANG_LISTS_SET_INDEX_SET="set";Blockly.LANG_LISTS_SET_INDEX_INSERT="insert";Blockly.LANG_LISTS_SET_INDEX_INPUT_TO="auf";Blockly.LANG_LISTS_SET_INDEX_TOOLTIP_SET_FROM_START="Sets the item at the specified position in a list.\n#1 is the first item.";
Blockly.LANG_LISTS_SET_INDEX_TOOLTIP_SET_FROM_END="Sets the item at the specified position in a list.\n#1 is the last item.";Blockly.LANG_LISTS_SET_INDEX_TOOLTIP_SET_FIRST="Sets the first item in a list.";Blockly.LANG_LISTS_SET_INDEX_TOOLTIP_SET_LAST="Sets the last item in a list.";Blockly.LANG_LISTS_SET_INDEX_TOOLTIP_SET_RANDOM="Sets a random item in a list.";Blockly.LANG_LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_START="Inserts the item at the specified position in a list.\n#1 is the first item.";
Blockly.LANG_LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_END="Inserts the item at the specified position in a list.\n#1 is the last item.";Blockly.LANG_LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST="Inserts the item at the start of a list.";Blockly.LANG_LISTS_SET_INDEX_TOOLTIP_INSERT_LAST="Append the item to the end of a list.";Blockly.LANG_LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM="Inserts the item randomly in a list.";Blockly.LANG_LISTS_GET_SUBLIST_HELPURL="http://publib.boulder.ibm.com/infocenter/lnxpcomp/v8v101/index.jsp?topic=%2Fcom.ibm.xlcpp8l.doc%2Flanguage%2Fref%2Farsubex.htm";
Blockly.LANG_LISTS_GET_SUBLIST_INPUT_IN_LIST="in list";Blockly.LANG_LISTS_GET_SUBLIST_INPUT_AT1="get sub-list from";Blockly.LANG_LISTS_GET_SUBLIST_INPUT_AT2="to";Blockly.LANG_LISTS_GET_SUBLIST_TOOLTIP="Creates a copy of the specified portion of a list.";Blockly.LANG_VARIABLES_GET_HELPURL="http://de.wikipedia.org/wiki/Variable_%28Programmierung%29";Blockly.LANG_VARIABLES_GET_TITLE="Lese";Blockly.LANG_VARIABLES_GET_ITEM="Variable";Blockly.LANG_VARIABLES_GET_TOOLTIP="Gibt den Wert der Variable zur\u00fcck.";
Blockly.LANG_VARIABLES_GET_CREATE_SET='Erzeuge "Schreibe %1"';Blockly.LANG_VARIABLES_SET_HELPURL="http://de.wikipedia.org/wiki/Variable_%28Programmierung%29";Blockly.LANG_VARIABLES_SET_TITLE="Schreibe";Blockly.LANG_VARIABLES_SET_ITEM="Variable";Blockly.LANG_VARIABLES_SET_TOOLTIP="Setzt den Wert einer Variable.";Blockly.LANG_VARIABLES_SET_CREATE_GET='Erzeuge "Lese %1"';Blockly.LANG_PROCEDURES_DEFNORETURN_HELPURL="http://de.wikipedia.org/wiki/Prozedur_%28Programmierung%29";
Blockly.LANG_PROCEDURES_DEFNORETURN_TITLE="to";Blockly.LANG_PROCEDURES_DEFNORETURN_PROCEDURE="Funktionsblock";Blockly.LANG_PROCEDURES_BEFORE_PARAMS="mit:";Blockly.LANG_PROCEDURES_DEFNORETURN_DO="";Blockly.LANG_PROCEDURES_DEFNORETURN_TOOLTIP="Ein Funktionsblock ohne R\u00fcckgabewert.";Blockly.LANG_PROCEDURES_DEFRETURN_HELPURL="http://de.wikipedia.org/wiki/Prozedur_%28Programmierung%29";Blockly.LANG_PROCEDURES_DEFRETURN_TITLE=Blockly.LANG_PROCEDURES_DEFNORETURN_TITLE;
Blockly.LANG_PROCEDURES_DEFRETURN_PROCEDURE=Blockly.LANG_PROCEDURES_DEFNORETURN_PROCEDURE;Blockly.LANG_PROCEDURES_DEFRETURN_DO=Blockly.LANG_PROCEDURES_DEFNORETURN_DO;Blockly.LANG_PROCEDURES_DEFRETURN_RETURN="gebe zur\u00fcck";Blockly.LANG_PROCEDURES_DEFRETURN_TOOLTIP="Ein Funktionsblock mit R\u00fcckgabewert.";Blockly.LANG_PROCEDURES_DEF_DUPLICATE_WARNING="Warnung:\ndieser Funktionsblock\nhat doppelte Parameter.";Blockly.LANG_PROCEDURES_CALLNORETURN_HELPURL="http://de.wikipedia.org/wiki/Prozedur_%28Programmierung%29";
Blockly.LANG_PROCEDURES_CALLNORETURN_CALL="";Blockly.LANG_PROCEDURES_CALLNORETURN_TOOLTIP="Rufe einen Funktionsblock ohne R\u00fcckgabewert auf.";Blockly.LANG_PROCEDURES_CALLRETURN_HELPURL="http://de.wikipedia.org/wiki/Prozedur_%28Programmierung%29";Blockly.LANG_PROCEDURES_CALLRETURN_CALL=Blockly.LANG_PROCEDURES_CALLNORETURN_CALL;Blockly.LANG_PROCEDURES_CALLRETURN_TOOLTIP="Rufe einen Funktionsblock mit R\u00fcckgabewert auf.";Blockly.LANG_PROCEDURES_MUTATORCONTAINER_TITLE="Parameter";
Blockly.LANG_PROCEDURES_MUTATORARG_TITLE="Variable:";Blockly.LANG_PROCEDURES_HIGHLIGHT_DEF="Markiere Funktionsblock";Blockly.LANG_PROCEDURES_CREATE_DO='Erzeuge "Aufruf %1"';Blockly.LANG_PROCEDURES_IFRETURN_TOOLTIP="Wenn der erste Wert wahr (true) ist,\nGebe den zweiten Wert zur\u00fcck.";Blockly.LANG_PROCEDURES_IFRETURN_WARNING="Warnung:\nDieser Block darf nur\ninnerhalb eines Funktionsblock\ngenutzt werden.";Blockly.Language.action_simple_action_client={helpUrl:null,init:function(){this.setColour(Blockly.LANG_ACTION_COLOUR);this.appendDummyInput().appendTitle("simple action client");this.appendValueInput("ACTION").appendTitle("action server name:").appendTitle(new Blockly.FieldTextInput("server_name",null),"ACTION_SERVER_NAME").appendTitle("action:");this.setOutput(!0,Blockly.LANG_CONNECTION_TYPE_SIMPLE_ACTION_CLIENT);this.setTooltip("")}};
Blockly.Language.action_client_wait_for_server={helpUrl:null,init:function(){this.setColour(Blockly.LANG_ACTION_COLOUR);this.appendDummyInput().appendTitle("wait for server");this.appendValueInput("CLIENT").appendTitle("client:").setAlign(Blockly.ALIGN_RIGHT);this.setPreviousStatement(!0);this.setNextStatement(!0);this.setTooltip("")}};
Blockly.Language.action_client_wait_for_result={helpUrl:null,init:function(){this.setColour(Blockly.LANG_ACTION_COLOUR);this.appendDummyInput().appendTitle("wait for result");this.appendValueInput("CLIENT").appendTitle("client:").setAlign(Blockly.ALIGN_RIGHT);this.setPreviousStatement(!0);this.setNextStatement(!0);this.setTooltip("")}};
Blockly.Language.action_client_send_goal={helpUrl:null,init:function(){this.setColour(Blockly.LANG_ACTION_COLOUR);this.appendDummyInput().appendTitle("send goal");this.appendValueInput("CLIENT").appendTitle("client:").setAlign(Blockly.ALIGN_RIGHT);this.appendValueInput("GOAL").appendTitle("goal message:").setAlign(Blockly.ALIGN_RIGHT);this.setPreviousStatement(!0);this.setNextStatement(!0);this.setTooltip("")}};
Blockly.Language.action_move_base_action={helpUrl:null,init:function(){this.setColour(Blockly.LANG_ACTION_COLOUR);this.appendDummyInput().appendTitle("MoveBaseAction");this.setOutput(!0,"MoveBaseAction");this.setTooltip("")}};Blockly.Language.procedures_defnoreturn={category:null,helpUrl:Blockly.LANG_PROCEDURES_DEFNORETURN_HELPURL,init:function(){this.setColour(290);var a=Blockly.Procedures.findLegalName(Blockly.LANG_PROCEDURES_DEFNORETURN_PROCEDURE,this);this.appendDummyInput().appendTitle(Blockly.LANG_PROCEDURES_DEFNORETURN_TITLE).appendTitle(new Blockly.FieldTextInput(a,Blockly.Procedures.rename),"NAME").appendTitle("","PARAMS");this.appendStatementInput("STACK").appendTitle(Blockly.LANG_PROCEDURES_DEFNORETURN_DO);
this.setMutator(new Blockly.Mutator(["procedures_mutatorarg"]));this.setTooltip(Blockly.LANG_PROCEDURES_DEFNORETURN_TOOLTIP);this.arguments_=[]},updateParams_:function(){for(var a=!1,b={},c=0;c<this.arguments_.length;c++){if(b["arg_"+this.arguments_[c].toLowerCase()]){a=!0;break}b["arg_"+this.arguments_[c].toLowerCase()]=!0}a?this.setWarningText(Blockly.LANG_PROCEDURES_DEF_DUPLICATE_WARNING):this.setWarningText(null);a="";this.arguments_.length&&(a=Blockly.LANG_PROCEDURES_BEFORE_PARAMS+" "+this.arguments_.join(", "));
this.setTitleValue(a,"PARAMS")},mutationToDom:function(){for(var a=document.createElement("mutation"),b=0;b<this.arguments_.length;b++){var c=document.createElement("arg");c.setAttribute("name",this.arguments_[b]);a.appendChild(c)}return a},domToMutation:function(a){this.arguments_=[];for(var b=0,c;c=a.childNodes[b];b++)"arg"==c.nodeName.toLowerCase()&&this.arguments_.push(c.getAttribute("name"));this.updateParams_()},decompose:function(a){var b=new Blockly.Block(a,"procedures_mutatorcontainer");
b.initSvg();for(var c=b.getInput("STACK").connection,d=0;d<this.arguments_.length;d++){var e=new Blockly.Block(a,"procedures_mutatorarg");e.initSvg();e.setTitleValue(this.arguments_[d],"NAME");e.oldLocation=d;c.connect(e.previousConnection);c=e.nextConnection}Blockly.Procedures.mutateCallers(this.getTitleValue("NAME"),this.workspace,this.arguments_,null);return b},compose:function(a){this.arguments_=[];this.paramIds_=[];for(a=a.getInputTargetBlock("STACK");a;)this.arguments_.push(a.getTitleValue("NAME")),
this.paramIds_.push(a.id),a=a.nextConnection&&a.nextConnection.targetBlock();this.updateParams_();Blockly.Procedures.mutateCallers(this.getTitleValue("NAME"),this.workspace,this.arguments_,this.paramIds_)},dispose:function(){var a=this.getTitleValue("NAME");Blockly.Procedures.disposeCallers(a,this.workspace);Blockly.Block.prototype.dispose.apply(this,arguments)},getProcedureDef:function(){return[this.getTitleValue("NAME"),this.arguments_,!1]},getVars:function(){return this.arguments_},renameVar:function(a,
b){for(var c=!1,d=0;d<this.arguments_.length;d++)Blockly.Names.equals(a,this.arguments_[d])&&(this.arguments_[d]=b,c=!0);if(c&&(this.updateParams_(),this.mutator.isVisible_()))for(var c=this.mutator.workspace_.getAllBlocks(),d=0,e;e=c[d];d++)"procedures_mutatorarg"==e.type&&Blockly.Names.equals(a,e.getTitleValue("NAME"))&&e.setTitleValue(b,"NAME")},customContextMenu:function(a){var b={enabled:!0},c=this.getTitleValue("NAME");b.text=Blockly.LANG_PROCEDURES_CREATE_DO.replace("%1",c);var d=goog.dom.createDom("mutation");
d.setAttribute("name",c);for(var e=0;e<this.arguments_.length;e++)c=goog.dom.createDom("arg"),c.setAttribute("name",this.arguments_[e]),d.appendChild(c);d=goog.dom.createDom("block",null,d);d.setAttribute("type",this.callType_);b.callback=Blockly.ContextMenu.callbackFactory(this,d);a.push(b);for(e=0;e<this.arguments_.length;e++)b={enabled:!0},c=this.arguments_[e],b.text=Blockly.LANG_VARIABLES_SET_CREATE_GET.replace("%1",c),d=goog.dom.createDom("title",null,c),d.setAttribute("name","VAR"),d=goog.dom.createDom("block",
null,d),d.setAttribute("type","variables_get"),b.callback=Blockly.ContextMenu.callbackFactory(this,d),a.push(b)},callType_:"procedures_callnoreturn"};
Blockly.Language.procedures_defreturn={category:null,helpUrl:Blockly.LANG_PROCEDURES_DEFRETURN_HELPURL,init:function(){this.setColour(290);var a=Blockly.Procedures.findLegalName(Blockly.LANG_PROCEDURES_DEFRETURN_PROCEDURE,this);this.appendDummyInput().appendTitle(Blockly.LANG_PROCEDURES_DEFRETURN_TITLE).appendTitle(new Blockly.FieldTextInput(a,Blockly.Procedures.rename),"NAME").appendTitle("","PARAMS");this.appendStatementInput("STACK").appendTitle(Blockly.LANG_PROCEDURES_DEFRETURN_DO);this.appendValueInput("RETURN").setAlign(Blockly.ALIGN_RIGHT).appendTitle(Blockly.LANG_PROCEDURES_DEFRETURN_RETURN);
this.setMutator(new Blockly.Mutator(["procedures_mutatorarg"]));this.setTooltip(Blockly.LANG_PROCEDURES_DEFRETURN_TOOLTIP);this.arguments_=[]},updateParams_:Blockly.Language.procedures_defnoreturn.updateParams_,mutationToDom:Blockly.Language.procedures_defnoreturn.mutationToDom,domToMutation:Blockly.Language.procedures_defnoreturn.domToMutation,decompose:Blockly.Language.procedures_defnoreturn.decompose,compose:Blockly.Language.procedures_defnoreturn.compose,dispose:Blockly.Language.procedures_defnoreturn.dispose,
getProcedureDef:function(){return[this.getTitleValue("NAME"),this.arguments_,!0]},getVars:Blockly.Language.procedures_defnoreturn.getVars,renameVar:Blockly.Language.procedures_defnoreturn.renameVar,customContextMenu:Blockly.Language.procedures_defnoreturn.customContextMenu,callType_:"procedures_callreturn"};
Blockly.Language.procedures_mutatorcontainer={init:function(){this.setColour(290);this.appendDummyInput().appendTitle(Blockly.LANG_PROCEDURES_MUTATORCONTAINER_TITLE);this.appendStatementInput("STACK");this.setTooltip("");this.contextMenu=!1}};
Blockly.Language.procedures_mutatorarg={init:function(){this.setColour(290);this.appendDummyInput().appendTitle(Blockly.LANG_PROCEDURES_MUTATORARG_TITLE).appendTitle(new Blockly.FieldTextInput("x",this.validator),"NAME");this.setPreviousStatement(!0);this.setNextStatement(!0);this.setTooltip("");this.contextMenu=!1}};Blockly.Language.procedures_mutatorarg.validator=function(a){return(a=a.replace(/[\s\xa0]+/g," ").replace(/^ | $/g,""))||null};
Blockly.Language.procedures_callnoreturn={category:null,helpUrl:Blockly.LANG_PROCEDURES_CALLNORETURN_HELPURL,init:function(){this.setColour(290);this.appendDummyInput().appendTitle(Blockly.LANG_PROCEDURES_CALLNORETURN_CALL).appendTitle("","NAME");this.setPreviousStatement(!0);this.setNextStatement(!0);this.setTooltip(Blockly.LANG_PROCEDURES_CALLNORETURN_TOOLTIP);this.arguments_=[];this.quarkArguments_=this.quarkConnections_=null},getProcedureCall:function(){return this.getTitleValue("NAME")},renameProcedure:function(a,
b){Blockly.Names.equals(a,this.getTitleValue("NAME"))&&(this.setTitleValue(b,"NAME"),this.setTooltip((this.outputConnection?Blockly.LANG_PROCEDURES_CALLRETURN_TOOLTIP:Blockly.LANG_PROCEDURES_CALLNORETURN_TOOLTIP).replace("%1",b)))},setProcedureParameters:function(a,b){if(b){if(b.length!=a.length)throw"Error: paramNames and paramIds must be the same length.";this.quarkArguments_||(this.quarkConnections_={},a.join("\n")==this.arguments_.join("\n")?this.quarkArguments_=b:this.quarkArguments_=[]);var c=
this.rendered;this.rendered=!1;for(var d=this.arguments_.length-1;0<=d;d--){var e=this.getInput("ARG"+d);if(e){var f=e.connection.targetConnection;this.quarkConnections_[this.quarkArguments_[d]]=f;this.removeInput("ARG"+d)}}this.arguments_=[].concat(a);this.quarkArguments_=b;for(d=0;d<this.arguments_.length;d++)if(e=this.appendValueInput("ARG"+d).setAlign(Blockly.ALIGN_RIGHT).appendTitle(this.arguments_[d]),this.quarkArguments_){var g=this.quarkArguments_[d];g in this.quarkConnections_&&(f=this.quarkConnections_[g],
!f||f.targetConnection||f.sourceBlock_.workspace!=this.workspace?delete this.quarkConnections_[g]:e.connection.connect(f))}(this.rendered=c)&&this.render()}else this.quarkConnections_={},this.quarkArguments_=null},mutationToDom:function(){var a=document.createElement("mutation");a.setAttribute("name",this.getTitleValue("NAME"));for(var b=0;b<this.arguments_.length;b++){var c=document.createElement("arg");c.setAttribute("name",this.arguments_[b]);a.appendChild(c)}return a},domToMutation:function(a){var b=
a.getAttribute("name");this.setTitleValue(b,"NAME");this.setTooltip((this.outputConnection?Blockly.LANG_PROCEDURES_CALLRETURN_TOOLTIP:Blockly.LANG_PROCEDURES_CALLNORETURN_TOOLTIP).replace("%1",b));if((b=Blockly.Procedures.getDefinition(b,this.workspace))&&b.mutator.isVisible())this.setProcedureParameters(b.arguments_,b.paramIds_);else{this.arguments_=[];for(var b=0,c;c=a.childNodes[b];b++)"arg"==c.nodeName.toLowerCase()&&this.arguments_.push(c.getAttribute("name"));this.setProcedureParameters(this.arguments_,
this.arguments_)}},renameVar:function(a,b){for(var c=0;c<this.arguments_.length;c++)Blockly.Names.equals(a,this.arguments_[c])&&(this.arguments_[c]=b,this.getInput("ARG"+c).titleRow[0].setText(b))},customContextMenu:function(a){var b={enabled:!0};b.text=Blockly.LANG_PROCEDURES_HIGHLIGHT_DEF;var c=this.getTitleValue("NAME"),d=this.workspace;b.callback=function(){var a=Blockly.Procedures.getDefinition(c,d);a&&a.select()};a.push(b)}};
Blockly.Language.procedures_callreturn={category:null,helpUrl:Blockly.LANG_PROCEDURES_CALLRETURN_HELPURL,init:function(){this.setColour(290);this.appendDummyInput().appendTitle(Blockly.LANG_PROCEDURES_CALLRETURN_CALL).appendTitle("","NAME");this.setOutput(!0);this.setTooltip(Blockly.LANG_PROCEDURES_CALLRETURN_TOOLTIP);this.arguments_=[];this.quarkArguments_=this.quarkConnections_=null},getProcedureCall:Blockly.Language.procedures_callnoreturn.getProcedureCall,renameProcedure:Blockly.Language.procedures_callnoreturn.renameProcedure,
setProcedureParameters:Blockly.Language.procedures_callnoreturn.setProcedureParameters,mutationToDom:Blockly.Language.procedures_callnoreturn.mutationToDom,domToMutation:Blockly.Language.procedures_callnoreturn.domToMutation,renameVar:Blockly.Language.procedures_callnoreturn.renameVar,customContextMenu:Blockly.Language.procedures_callnoreturn.customContextMenu};
Blockly.Language.procedures_ifreturn={helpUrl:"http://c2.com/cgi/wiki?GuardClause",init:function(){this.setColour(290);this.appendValueInput("CONDITION").setCheck("Boolean").appendTitle(Blockly.LANG_CONTROLS_IF_MSG_IF);this.appendValueInput("VALUE").appendTitle(Blockly.LANG_PROCEDURES_DEFRETURN_RETURN);this.setInputsInline(!0);this.setPreviousStatement(!0);this.setNextStatement(!0);this.setTooltip(Blockly.LANG_PROCEDURES_IFRETURN_TOOLTIP);this.hasReturnValue_=!0},mutationToDom:function(){var a=document.createElement("mutation");
a.setAttribute("value",Number(this.hasReturnValue_));return a},domToMutation:function(a){this.hasReturnValue_=1==a.getAttribute("value");this.hasReturnValue_||(this.removeInput("VALUE"),this.appendDummyInput("VALUE").appendTitle(Blockly.LANG_PROCEDURES_DEFRETURN_RETURN))},onchange:function(){if(this.workspace){var a=!1,b=this;do{if("procedures_defnoreturn"==b.type||"procedures_defreturn"==b.type){a=!0;break}b=b.getSurroundParent()}while(b);a?("procedures_defnoreturn"==b.type&&this.hasReturnValue_?
(this.removeInput("VALUE"),this.appendDummyInput("VALUE").appendTitle(Blockly.LANG_PROCEDURES_DEFRETURN_RETURN),this.hasReturnValue_=!1):"procedures_defreturn"!=b.type||this.hasReturnValue_||(this.removeInput("VALUE"),this.appendValueInput("VALUE").appendTitle(Blockly.LANG_PROCEDURES_DEFRETURN_RETURN),this.hasReturnValue_=!0),this.setWarningText(null)):this.setWarningText(Blockly.LANG_PROCEDURES_IFRETURN_WARNING)}}};Blockly.Language.colour_picker={helpUrl:Blockly.LANG_COLOUR_PICKER_HELPURL,init:function(){this.setColour(20);this.appendDummyInput().appendTitle(new Blockly.FieldColour("#ff0000"),"COLOUR");this.setOutput(!0,"Colour");this.setTooltip(Blockly.LANG_COLOUR_PICKER_TOOLTIP)}};Blockly.Language.colour_random={helpUrl:Blockly.LANG_COLOUR_RANDOM_HELPURL,init:function(){this.setColour(20);this.appendDummyInput().appendTitle(Blockly.LANG_COLOUR_RANDOM_TITLE);this.setOutput(!0,"Colour");this.setTooltip(Blockly.LANG_COLOUR_RANDOM_TOOLTIP)}};
Blockly.Language.colour_rgb={helpUrl:Blockly.LANG_COLOUR_RGB_HELPURL,init:function(){this.setColour(20);this.appendValueInput("RED").setCheck("Number").setAlign(Blockly.ALIGN_RIGHT).appendTitle(Blockly.LANG_COLOUR_RGB_TITLE).appendTitle(Blockly.LANG_COLOUR_RGB_RED);this.appendValueInput("GREEN").setCheck("Number").setAlign(Blockly.ALIGN_RIGHT).appendTitle(Blockly.LANG_COLOUR_RGB_GREEN);this.appendValueInput("BLUE").setCheck("Number").setAlign(Blockly.ALIGN_RIGHT).appendTitle(Blockly.LANG_COLOUR_RGB_BLUE);
this.setOutput(!0,"Colour");this.setTooltip(Blockly.LANG_COLOUR_RGB_TOOLTIP)}};
Blockly.Language.colour_blend={helpUrl:Blockly.LANG_COLOUR_BLEND_HELPURL,init:function(){this.setColour(20);this.appendValueInput("COLOUR1").setCheck("Colour").setAlign(Blockly.ALIGN_RIGHT).appendTitle(Blockly.LANG_COLOUR_BLEND_TITLE).appendTitle(Blockly.LANG_COLOUR_BLEND_COLOUR1);this.appendValueInput("COLOUR2").setCheck("Colour").setAlign(Blockly.ALIGN_RIGHT).appendTitle(Blockly.LANG_COLOUR_BLEND_COLOUR2);this.appendValueInput("RATIO").setCheck("Number").setAlign(Blockly.ALIGN_RIGHT).appendTitle(Blockly.LANG_COLOUR_BLEND_RATIO);this.setOutput(!0,
"Colour");this.setTooltip(Blockly.LANG_COLOUR_BLEND_TOOLTIP)}};Blockly.Language.controls_if={helpUrl:Blockly.LANG_CONTROLS_IF_HELPURL,init:function(){this.setColour(120);this.appendValueInput("IF0").setCheck("Boolean").appendTitle(Blockly.LANG_CONTROLS_IF_MSG_IF);this.appendStatementInput("DO0").appendTitle(Blockly.LANG_CONTROLS_IF_MSG_THEN);this.setPreviousStatement(!0);this.setNextStatement(!0);this.setMutator(new Blockly.Mutator(["controls_if_elseif","controls_if_else"]));var a=this;this.setTooltip(function(){if(a.elseifCount_||a.elseCount_){if(!a.elseifCount_&&
a.elseCount_)return Blockly.LANG_CONTROLS_IF_TOOLTIP_2;if(a.elseifCount_&&!a.elseCount_)return Blockly.LANG_CONTROLS_IF_TOOLTIP_3;if(a.elseifCount_&&a.elseCount_)return Blockly.LANG_CONTROLS_IF_TOOLTIP_4}else return Blockly.LANG_CONTROLS_IF_TOOLTIP_1;return""});this.elseCount_=this.elseifCount_=0},mutationToDom:function(){if(!this.elseifCount_&&!this.elseCount_)return null;var a=document.createElement("mutation");this.elseifCount_&&a.setAttribute("elseif",this.elseifCount_);this.elseCount_&&a.setAttribute("else",
1);return a},domToMutation:function(a){this.elseifCount_=window.parseInt(a.getAttribute("elseif"),10);this.elseCount_=window.parseInt(a.getAttribute("else"),10);for(a=1;a<=this.elseifCount_;a++)this.appendValueInput("IF"+a).setCheck("Boolean").appendTitle(Blockly.LANG_CONTROLS_IF_MSG_ELSEIF),this.appendStatementInput("DO"+a).appendTitle(Blockly.LANG_CONTROLS_IF_MSG_THEN);this.elseCount_&&this.appendStatementInput("ELSE").appendTitle(Blockly.LANG_CONTROLS_IF_MSG_ELSE)},decompose:function(a){var b=
new Blockly.Block(a,"controls_if_if");b.initSvg();for(var c=b.getInput("STACK").connection,d=1;d<=this.elseifCount_;d++){var e=new Blockly.Block(a,"controls_if_elseif");e.initSvg();c.connect(e.previousConnection);c=e.nextConnection}this.elseCount_&&(a=new Blockly.Block(a,"controls_if_else"),a.initSvg(),c.connect(a.previousConnection));return b},compose:function(a){this.elseCount_&&this.removeInput("ELSE");this.elseCount_=0;for(var b=this.elseifCount_;0<b;b--)this.removeInput("IF"+b),this.removeInput("DO"+
b);this.elseifCount_=0;for(a=a.getInputTargetBlock("STACK");a;){switch(a.type){case "controls_if_elseif":this.elseifCount_++;var b=this.appendValueInput("IF"+this.elseifCount_).setCheck("Boolean").appendTitle(Blockly.LANG_CONTROLS_IF_MSG_ELSEIF),c=this.appendStatementInput("DO"+this.elseifCount_);c.appendTitle(Blockly.LANG_CONTROLS_IF_MSG_THEN);a.valueConnection_&&b.connection.connect(a.valueConnection_);a.statementConnection_&&c.connection.connect(a.statementConnection_);break;case "controls_if_else":this.elseCount_++;
b=this.appendStatementInput("ELSE");b.appendTitle(Blockly.LANG_CONTROLS_IF_MSG_ELSE);a.statementConnection_&&b.connection.connect(a.statementConnection_);break;default:throw"Unknown block type.";}a=a.nextConnection&&a.nextConnection.targetBlock()}},saveConnections:function(a){a=a.getInputTargetBlock("STACK");for(var b=1;a;){switch(a.type){case "controls_if_elseif":var c=this.getInput("IF"+b),d=this.getInput("DO"+b);a.valueConnection_=c&&c.connection.targetConnection;a.statementConnection_=d&&d.connection.targetConnection;
b++;break;case "controls_if_else":d=this.getInput("ELSE");a.statementConnection_=d&&d.connection.targetConnection;break;default:throw"Unknown block type.";}a=a.nextConnection&&a.nextConnection.targetBlock()}}};Blockly.Language.controls_if_if={init:function(){this.setColour(120);this.appendDummyInput().appendTitle(Blockly.LANG_CONTROLS_IF_IF_TITLE_IF);this.appendStatementInput("STACK");this.setTooltip(Blockly.LANG_CONTROLS_IF_IF_TOOLTIP);this.contextMenu=!1}};
Blockly.Language.controls_if_elseif={init:function(){this.setColour(120);this.appendDummyInput().appendTitle(Blockly.LANG_CONTROLS_IF_ELSEIF_TITLE_ELSEIF);this.setPreviousStatement(!0);this.setNextStatement(!0);this.setTooltip(Blockly.LANG_CONTROLS_IF_ELSEIF_TOOLTIP);this.contextMenu=!1}};
Blockly.Language.controls_if_else={init:function(){this.setColour(120);this.appendDummyInput().appendTitle(Blockly.LANG_CONTROLS_IF_ELSE_TITLE_ELSE);this.setPreviousStatement(!0);this.setTooltip(Blockly.LANG_CONTROLS_IF_ELSE_TOOLTIP);this.contextMenu=!1}};
Blockly.Language.controls_repeat={helpUrl:Blockly.LANG_CONTROLS_REPEAT_HELPURL,init:function(){this.setColour(120);this.appendDummyInput().appendTitle(Blockly.LANG_CONTROLS_REPEAT_TITLE_REPEAT).appendTitle(new Blockly.FieldTextInput("10",Blockly.FieldTextInput.nonnegativeIntegerValidator),"TIMES").appendTitle(Blockly.LANG_CONTROLS_REPEAT_TITLE_TIMES);this.appendStatementInput("DO").appendTitle(Blockly.LANG_CONTROLS_REPEAT_INPUT_DO);this.setPreviousStatement(!0);this.setNextStatement(!0);this.setTooltip(Blockly.LANG_CONTROLS_REPEAT_TOOLTIP)}};
Blockly.Language.controls_repeat_ext={helpUrl:Blockly.LANG_CONTROLS_REPEAT_HELPURL,init:function(){this.setColour(120);this.appendValueInput("TIMES").setCheck("Number").appendTitle(Blockly.LANG_CONTROLS_REPEAT_TITLE_REPEAT);Blockly.LANG_CONTROLS_REPEAT_TITLE_TIMES&&this.appendDummyInput().appendTitle(Blockly.LANG_CONTROLS_REPEAT_TITLE_TIMES);this.appendStatementInput("DO").appendTitle(Blockly.LANG_CONTROLS_REPEAT_INPUT_DO);this.setPreviousStatement(!0);this.setNextStatement(!0);this.setInputsInline(!0);
this.setTooltip(Blockly.LANG_CONTROLS_REPEAT_TOOLTIP)}};
Blockly.Language.controls_whileUntil={helpUrl:Blockly.LANG_CONTROLS_WHILEUNTIL_HELPURL,init:function(){this.setColour(120);this.appendValueInput("BOOL").setCheck("Boolean").appendTitle(new Blockly.FieldDropdown(this.OPERATORS),"MODE");this.appendStatementInput("DO").appendTitle(Blockly.LANG_CONTROLS_WHILEUNTIL_INPUT_DO);this.setPreviousStatement(!0);this.setNextStatement(!0);var a=this;this.setTooltip(function(){var b=a.getTitleValue("MODE");return a.TOOLTIPS[b]})}};
Blockly.Language.controls_whileUntil.OPERATORS=[[Blockly.LANG_CONTROLS_WHILEUNTIL_OPERATOR_WHILE,"WHILE"],[Blockly.LANG_CONTROLS_WHILEUNTIL_OPERATOR_UNTIL,"UNTIL"]];Blockly.Language.controls_whileUntil.TOOLTIPS={WHILE:Blockly.LANG_CONTROLS_WHILEUNTIL_TOOLTIP_WHILE,UNTIL:Blockly.LANG_CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL};
Blockly.Language.controls_for={helpUrl:Blockly.LANG_CONTROLS_FOR_HELPURL,init:function(){this.setColour(120);this.appendDummyInput().appendTitle(Blockly.LANG_CONTROLS_FOR_INPUT_WITH).appendTitle(new Blockly.FieldVariable(null),"VAR");this.appendValueInput("FROM").setCheck("Number").setAlign(Blockly.ALIGN_RIGHT).appendTitle(Blockly.LANG_CONTROLS_FOR_INPUT_FROM);this.appendValueInput("TO").setCheck("Number").setAlign(Blockly.ALIGN_RIGHT).appendTitle(Blockly.LANG_CONTROLS_FOR_INPUT_TO);this.appendValueInput("BY").setCheck("Number").setAlign(Blockly.ALIGN_RIGHT).appendTitle(Blockly.LANG_CONTROLS_FOR_INPUT_BY);
Blockly.LANG_CONTROLS_FOR_TAIL&&this.appendDummyInput().appendTitle(Blockly.LANG_CONTROLS_FOR_TAIL);this.appendStatementInput("DO").appendTitle(Blockly.LANG_CONTROLS_FOR_INPUT_DO);this.setPreviousStatement(!0);this.setNextStatement(!0);this.setInputsInline(!0);var a=this;this.setTooltip(function(){return Blockly.LANG_CONTROLS_FOR_TOOLTIP.replace("%1",a.getTitleValue("VAR"))})},getVars:function(){return[this.getTitleValue("VAR")]},renameVar:function(a,b){Blockly.Names.equals(a,this.getTitleValue("VAR"))&&
this.setTitleValue(b,"VAR")},customContextMenu:function(a){var b={enabled:!0},c=this.getTitleValue("VAR");b.text=Blockly.LANG_VARIABLES_SET_CREATE_GET.replace("%1",c);c=goog.dom.createDom("title",null,c);c.setAttribute("name","VAR");c=goog.dom.createDom("block",null,c);c.setAttribute("type","variables_get");b.callback=Blockly.ContextMenu.callbackFactory(this,c);a.push(b)}};
Blockly.Language.controls_forEach={helpUrl:Blockly.LANG_CONTROLS_FOREACH_HELPURL,init:function(){this.setColour(120);this.appendValueInput("LIST").setCheck("Array").appendTitle(Blockly.LANG_CONTROLS_FOREACH_INPUT_ITEM).appendTitle(new Blockly.FieldVariable(null),"VAR").appendTitle(Blockly.LANG_CONTROLS_FOREACH_INPUT_INLIST);Blockly.LANG_CONTROLS_FOREACH_INPUT_INLIST_TAIL&&(this.appendDummyInput().appendTitle(Blockly.LANG_CONTROLS_FOREACH_INPUT_INLIST_TAIL),this.setInputsInline(!0));this.appendStatementInput("DO").appendTitle(Blockly.LANG_CONTROLS_FOREACH_INPUT_DO);
this.setPreviousStatement(!0);this.setNextStatement(!0);var a=this;this.setTooltip(function(){return Blockly.LANG_CONTROLS_FOREACH_TOOLTIP.replace("%1",a.getTitleValue("VAR"))})},getVars:function(){return[this.getTitleValue("VAR")]},renameVar:function(a,b){Blockly.Names.equals(a,this.getTitleValue("VAR"))&&this.setTitleValue(b,"VAR")},customContextMenu:Blockly.Language.controls_for.customContextMenu};
Blockly.Language.controls_flow_statements={helpUrl:Blockly.LANG_CONTROLS_FLOW_STATEMENTS_HELPURL,init:function(){this.setColour(120);this.appendDummyInput().appendTitle(new Blockly.FieldDropdown(this.OPERATORS),"FLOW");this.setPreviousStatement(!0);var a=this;this.setTooltip(function(){var b=a.getTitleValue("FLOW");return a.TOOLTIPS[b]})},onchange:function(){if(this.workspace){var a=!1,b=this;do{if("controls_repeat"==b.type||"controls_forEach"==b.type||"controls_for"==b.type||"controls_whileUntil"==
b.type){a=!0;break}b=b.getSurroundParent()}while(b);a?this.setWarningText(null):this.setWarningText(Blockly.LANG_CONTROLS_FLOW_STATEMENTS_WARNING)}}};Blockly.Language.controls_flow_statements.OPERATORS=[[Blockly.LANG_CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK,"BREAK"],[Blockly.LANG_CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE,"CONTINUE"]];Blockly.Language.controls_flow_statements.TOOLTIPS={BREAK:Blockly.LANG_CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK,CONTINUE:Blockly.LANG_CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE};Blockly.Language.lowlevel_package_main={helpUrl:null,init:function(){this.setColour(Blockly.LANG_LOW_LEVEL_COLOUR);this.appendDummyInput().appendTitle("main in").appendTitle(new Blockly.FieldTextInput("ros_package_name",null),"ROSPaName").appendTitle("package");this.appendValueInput("IMPORT0").setCheck(["String",Blockly.LANG_CONNECTION_TYPE_IMPORT]).appendTitle(Blockly.LANG_LOW_LEVEL_IMPORT_MSG).setAlign(Blockly.ALIGN_RIGHT);this.appendValueInput("FROM_IMPORT0").setCheck(Blockly.LANG_CONNECTION_TYPE_FROM_IMPORT).appendTitle(Blockly.LANG_LOW_LEVEL_FROM_IMPORT_MSG).setAlign(Blockly.ALIGN_RIGHT);
this.appendStatementInput("MAINSTACK");this.setPreviousStatement(!1);this.setNextStatement(!0);this.setMutator(new Blockly.Mutator(["lowlevel_application_import","lowlevel_application_from_import"]));this.setTooltip("Use this block exactly ONCE to prevent unintended effects: \nNever used: File cannot necessarily be reused as import file.\nMultiple times used: All main functions will be executed and may cause misbehaviors. \n---\nFields:\n* Choose the ROS package name, so that it meets the ROS package in use, \ni.e. 'edufill_blockly' if the generated code will be stored within the ROS package 'edufill_blockly'.\n---\nInputs:\n* import (value input): Imports a python module. All definitions, variables, etc. of that module can be used. \n  Allowed connection types are 'String' and 'Import'.\n* from x import (value input): Imports specified objects from a module.\n  The only allowed connection type is 'FromImport'.\n* unlabeled (statement input): ");
this.from_importCount_=this.importCount_=1},mutationToDom:function(){var a=document.createElement("mutation");this.importCount_&&a.setAttribute("imports",this.importCount_);this.from_importCount_&&a.setAttribute("from_imports",this.from_importCount_);return a},domToMutation:function(a){for(var b=0;b<this.importCount_;b++)this.getInput("IMPORT"+b)&&this.removeInput("IMPORT"+b);for(b=0;b<this.from_importCount_;b++)this.getInput("FROM_IMPORT"+b)&&this.removeInput("FROM_IMPORT"+b);this.removeInput("MAINSTACK");
this.importCount_=window.parseInt(a.getAttribute("imports"),10);for(b=0;b<this.importCount_;b++)this.appendValueInput("IMPORT"+b).setCheck(["String",Blockly.LANG_CONNECTION_TYPE_IMPORT]).appendTitle(Blockly.LANG_LOW_LEVEL_IMPORT_MSG).setAlign(Blockly.ALIGN_RIGHT);this.from_importCount_=window.parseInt(a.getAttribute("from_imports"),10);for(b=0;b<this.from_importCount_;b++)this.appendValueInput("FROM_IMPORT"+b).setCheck(Blockly.LANG_CONNECTION_TYPE_FROM_IMPORT).appendTitle(Blockly.LANG_LOW_LEVEL_FROM_IMPORT_MSG).setAlign(Blockly.ALIGN_RIGHT);
this.appendStatementInput("MAINSTACK")},decompose:function(a){var b=new Blockly.Block(a,"lowlevel_application_container");b.initSvg();for(var c=b.getInput("STACK").connection,d=0;d<this.importCount_;d++){var e=new Blockly.Block(a,"lowlevel_application_import");e.initSvg();c.connect(e.previousConnection);c=e.nextConnection}for(d=0;d<this.from_importCount_;d++)e=new Blockly.Block(a,"lowlevel_application_from_import"),e.initSvg(),c.connect(e.previousConnection),c=e.nextConnection;return b},compose:function(a){for(var b=
this.importCount_-1;0<=b;b--)this.getInput("IMPORT"+b)&&this.removeInput("IMPORT"+b);this.importCount_=0;for(b=this.from_importCount_-1;0<=b;b--)this.getInput("FROM_IMPORT"+b)&&this.removeInput("FROM_IMPORT"+b);this.from_importCount_=0;this.getInput("MAINSTACK")&&this.removeInput("MAINSTACK");for(a=a.getInputTargetBlock("STACK");a;){if("lowlevel_application_import"==a.type)b=this.appendValueInput("IMPORT"+this.importCount_).setCheck(["String",Blockly.LANG_CONNECTION_TYPE_IMPORT]).setAlign(Blockly.ALIGN_RIGHT),
b.appendTitle(Blockly.LANG_LOW_LEVEL_IMPORT_MSG),this.importCount_++,a.valueConnection_&&b.connection.connect(a.valueConnection_);else if("lowlevel_application_from_import"==a.type)b=this.appendValueInput("FROM_IMPORT"+this.from_importCount_).setCheck(Blockly.LANG_CONNECTION_TYPE_FROM_IMPORT).setAlign(Blockly.ALIGN_RIGHT),b.appendTitle(Blockly.LANG_LOW_LEVEL_FROM_IMPORT_MSG),this.from_importCount_++,a.valueConnection_&&b.connection.connect(a.valueConnection_);else throw"Unknown block type";a=a.nextConnection&&
a.nextConnection.targetBlock()}b=this.appendStatementInput("MAINSTACK");this.valueConnection_&&b.connection.connect(this.valueConnection_)},saveConnections:function(a){var b=0,c=0;for(a=a.getInputTargetBlock("STACK");a;){if("lowlevel_application_import"==a.type){var d=this.getInput("IMPORT"+b);a.valueConnection_=d&&d.connection.targetConnection;b++}else if("lowlevel_application_from_import"==a.type)d=this.getInput("FROM_IMPORT"+c),a.valueConnection_=d&&d.connection.targetConnection,c++;else throw"Unknown block type";
a=a.nextConnection&&a.nextConnection.targetBlock()}this.valueConnection_=(d=this.getInput("MAINSTACK"))&&d.connection.targetConnection},onchange:function(){var a=this.workspace&&this.workspace.topBlocks_,b=0;if(a)for(var c=0;c<a.length;c++)"highlevel_application"!=a[c].type&&a[c].type!=this.type||b++;1<b?this.setWarningText('This block should not be used more than once and not at the same time as the "robot application frame" block'):this.setWarningText(null)}};
Blockly.Language.lowlevel_application_import={init:function(){this.setColour(Blockly.LANG_LOW_LEVEL_COLOUR);this.appendDummyInput().appendTitle(Blockly.LANG_LOW_LEVEL_IMPORT_MSG);this.setPreviousStatement(!0);this.setNextStatement(!0);this.setTooltip("");this.contextMenu=!1}};
Blockly.Language.lowlevel_application_from_import={init:function(){this.setColour(Blockly.LANG_LOW_LEVEL_COLOUR);this.appendDummyInput().appendTitle(Blockly.LANG_LOW_LEVEL_FROM_IMPORT_MSG);this.setPreviousStatement(!0);this.setNextStatement(!0);this.setTooltip("");this.contextMenu=!1}};
Blockly.Language.lowlevel_application_container={init:function(){this.setColour(Blockly.LANG_LOW_LEVEL_COLOUR);this.appendDummyInput().appendTitle(Blockly.LANG_LOW_LEVEL_MAIN_FRAME);this.appendStatementInput("STACK");this.setTooltip("Mutator import container");this.contextMenu=!1}};
Blockly.Language.lowlevel_from_x_import={helpUrl:null,init:function(){this.setColour(Blockly.LANG_LOW_LEVEL_COLOUR);this.appendDummyInput().appendTitle("from").appendTitle(new Blockly.FieldTextInput("module_name",null),"FROM").appendTitle("import").appendTitle(new Blockly.FieldTextInput("function_name",null),"IMPORT");this.setOutput(!0,Blockly.LANG_CONNECTION_TYPE_FROM_IMPORT);this.setTooltip('Specify a module name of choice and which functions should be used.\nNote: If the function_name is left empty all functions within the module are available (equal to "*").\n---\nFields:\nFrom (text): Module name\nimport (text): Functions (comma separated, e.g. func1, func2, ...).\n---\nOutput:\nThe output is a complete import statement. Note if the module is left empty an empty string is returned.\nThe output type is FromImport')}};
Blockly.Language.lowlevel_create_publisher={helpUrl:null,init:function(){this.setColour(Blockly.LANG_LOW_LEVEL_COLOUR);this.appendDummyInput().appendTitle(new Blockly.FieldVariable("pub"),"VAR");this.appendValueInput("NODE").setCheck("String").appendTitle(" = create publisher to topic:");this.appendValueInput("TYPE").setCheck(Blockly.LANG_CONNECTION_TYPE_ROS_MESSAGE).appendTitle("with message type:");this.setPreviousStatement(!0);this.setNextStatement(!0);this.setInputsInline(!0);this.setTooltip("Create a publisher, which enables message sending to the defined topic\n---\nFields:\n(variable): Specify the variable in which the instance of the publisher should be stored.\n---\nInputs:\ntopic (value input): Destination (topic) where the message should be send to. The only allowed connection type is 'String'\n.message type (value input): Specification of the ROS message type. The only allowed connection type is 'rosNode'.")},
getVars:function(){return[this.getTitleValue("VAR")]},renameVar:function(a,b){Blockly.Names.equals(a,this.getTitleValue("VAR"))&&this.setTitleValue(b,"VAR")}};
Blockly.Language.lowlevel_publish={helpUrl:null,init:function(){this.setColour(Blockly.LANG_LOW_LEVEL_COLOUR);this.appendValueInput("MSG").appendTitle("publish").appendTitle("object:").appendTitle(new Blockly.FieldVariable("pub"),"VAR").setCheck(null).appendTitle("message:");this.setPreviousStatement(!0);this.setNextStatement(!0);this.setTooltip("Publish a message using a publisher instance.\n---\nFields:\n(variable): ROS publisher instance (create publisher block)\n---\nInputs:\nmessage (input value): To be transmitted ROS message.")},getVars:function(){return[this.getTitleValue("VAR")]},
renameVar:function(a,b){Blockly.Names.equals(a,this.getTitleValue("VAR"))&&this.setTitleValue(b,"VAR")}};
Blockly.Language.lowlevel_subscriber={helpUrl:null,init:function(){this.setColour(Blockly.LANG_LOW_LEVEL_COLOUR);this.appendDummyInput().appendTitle("subscribe");this.appendValueInput("NODE").setCheck("String").appendTitle("to topic:");this.appendValueInput("TYPE").setCheck(Blockly.LANG_CONNECTION_TYPE_ROS_MESSAGE).appendTitle("with message type:");this.appendDummyInput("CALLBACK").appendTitle("and call").appendTitle(new Blockly.FieldTextInput("procedure_name",null),"PROC_NAME");this.setPreviousStatement(!0);
this.setNextStatement(!0);this.setInputsInline(!0);this.setTooltip("Whenever a new message arrives at the listened topic, the function is called.\n---\nFields:\ncall (text): Name of the function that should be called whenever a new message arrives.\n---\nInputs:\ntopic (value input): Specification to which topic is listened to. The only allowed connection type is 'String'\nmessage type (value input): Type of arriving messages.\n")}};
Blockly.Language.lowlevel_ros_init_node={helpUrl:null,init:function(){this.setColour(Blockly.LANG_LOW_LEVEL_COLOUR);var a=new Blockly.FieldDropdown(Blockly.Language.lowlevel_ros_log.OPERATORS),b=new Blockly.FieldCheckbox("FALSE"),c=new Blockly.FieldCheckbox("FALSE");this.appendValueInput("NAME").setCheck(["String",Blockly.LANG_CONNECTION_TYPE_ROS_NODE]).appendTitle("init node  name:");this.appendDummyInput().appendTitle(b,"TOGGLE_ANONYM").appendTitle("anonymous:");this.appendDummyInput().appendTitle("log level:").appendTitle(a,
"MODE_LOG");this.appendDummyInput().appendTitle(c,"TOGGLE_SIG").appendTitle("disable signals:");this.setPreviousStatement(!0);this.setNextStatement(!0);this.setInputsInline(!1);this.setTooltip("Initialize this node")}};Blockly.Language.lowlevel_ros_init_node.OPERATORS_BOOL=[[Blockly.LANG_LOW_LEVEL_ROS_INIT_NODE_EMPTY,"EMPTY"],[Blockly.LANG_LOW_LEVEL_ROS_INIT_NODE_FALSE,"FALSE"],[Blockly.LANG_LOW_LEVEL_ROS_INIT_NODE_TRUE,"TRUE"]];
Blockly.Language.lowlevel_ros_spin={helpUrl:null,init:function(){this.setColour(Blockly.LANG_LOW_LEVEL_COLOUR);this.appendDummyInput().appendTitle("ros spin");this.setPreviousStatement(!0);this.setNextStatement(!0);this.setTooltip("Do not exit the node until it is shutdown.")}};Blockly.Language.lowlevel_ros_cancelled={helpUrl:null,init:function(){this.setColour(Blockly.LANG_LOW_LEVEL_COLOUR);this.appendDummyInput().appendTitle("ROS cancelled");this.setOutput(!0,null);this.setTooltip("Check whether ROS is cancelled by ctr+c or similar. \n---\nOutput:\nReturn true if cancelled and false elsewise.")}};
Blockly.Language.lowlevel_ros_log={helpUrl:null,init:function(){this.setColour(Blockly.LANG_LOW_LEVEL_COLOUR);var a=new Blockly.FieldDropdown(this.OPERATORS);this.appendDummyInput().appendTitle("ROS log <").appendTitle(a,"MODE");this.appendValueInput("LOG_MSG").setCheck("String").appendTitle(">:");this.setPreviousStatement(!0);this.setNextStatement(!0);this.setInputsInline(!0);this.setTooltip("")}};
Blockly.Language.lowlevel_ros_log.OPERATORS=[[Blockly.LANG_LOW_LEVEL_ROS_LOG_EMPTY,"EMPTY"],[Blockly.LANG_LOW_LEVEL_ROS_LOG_DEBUG,"DEBUG"],[Blockly.LANG_LOW_LEVEL_ROS_LOG_INFO,"INFO"],[Blockly.LANG_LOW_LEVEL_ROS_LOG_WARN,"WARN"],[Blockly.LANG_LOW_LEVEL_ROS_LOG_ERROR,"ERROR"],[Blockly.LANG_LOW_LEVEL_ROS_LOG_FATAL,"FATAL"]];
Blockly.Language.lowlevel_ros_sleep={helpUrl:null,init:function(){this.setColour(Blockly.LANG_LOW_LEVEL_COLOUR);this.appendValueInput("TIME").setAlign(Blockly.ALIGN_RIGHT).setCheck("Number").appendTitle("ROS sleep");this.setPreviousStatement(!0);this.setNextStatement(!0);this.setTooltip("")}};
Blockly.Language.lowlevel_move_base_goal={helpUrl:null,init:function(){this.setColour(Blockly.LANG_LOW_LEVEL_COLOUR);this.appendDummyInput().appendTitle("move base goal");this.appendValueInput("POSE").appendTitle("pose").setAlign(Blockly.ALIGN_RIGHT).setCheck(Blockly.LANG_CONNECTION_TYPE_BASE_POSE_MSG);this.setOutput(!0);this.setTooltip("")}};
Blockly.Language.lowlevel_get_ros_time={helpUrl:null,init:function(){this.setColour(Blockly.LANG_LOW_LEVEL_COLOUR);this.appendDummyInput().appendTitle("get ros time");this.setTooltip("");this.setOutput(!0)}};Blockly.Language.lowlevel_get_ros_time_in_unit={helpUrl:null,init:function(){this.setColour(Blockly.LANG_LOW_LEVEL_COLOUR);this.appendValueInput("TIME").appendTitle("ros time");this.appendDummyInput().appendTitle("in seconds");this.setInputsInline(!0);this.setTooltip("");this.setOutput(!0)}};
Blockly.Language.lowlevel_laserscan_ranges_and_angles={helpUrl:null,init:function(){this.setColour(Blockly.LANG_LOW_LEVEL_COLOUR);this.appendDummyInput().appendTitle("laser scan data (full range)");this.setOutput(!0,"Array");this.setTooltip("Provide the full set of laser scan data.\n---\nOutput:\n* Return a list of tuples containing the laser scan measurement and the related angles (radians).\nThe output type is 'Array'.")}};
Blockly.Language.lowlevel_laserscan_inrange={helpUrl:null,init:function(){this.setColour(Blockly.LANG_LOW_LEVEL_COLOUR);this.appendDummyInput().appendTitle("laser scan data");this.appendValueInput("FROM").appendTitle("from angle (rad)").setCheck("Number");this.appendValueInput("TO").appendTitle("to angle (rad)").setCheck("Number");this.setOutput(!0,"Array");this.setInputsInline(!0);this.setTooltip("Provide data for laser scans within a certain angular range.\n---\nInputs:\n* From (value input): Specify the smallest (most left) angle (radians) of interest. \nThe only allowed connection type is 'Number'.\n* To (value input): Specify the biggest (most right) angle (radians) of interest.\nThe only allowed connection type is 'Number'.\n---\nOutput:\n* Return a list of tuples containing the laser scan measurement and the related angles (radians).\nThe output type is 'Array'.")}};
Blockly.Language.lowlevel_laserscan_closest_distance={helpUrl:null,init:function(){this.setColour(Blockly.LANG_LOW_LEVEL_COLOUR);this.appendDummyInput().appendTitle("laser scan with closest distance");this.setOutput(!0,"Array");this.setTooltip("Determine the laser scan value with the closest distance.\n---\nOutput:\n* Return a tuple containing the laser scan value (distance) and the related angle (radians).\nThe output type is 'Array'.")}};
Blockly.Language.lowlevel_read_arm_joint_positions={helpUrl:null,init:function(){this.setColour(Blockly.LANG_LOW_LEVEL_COLOUR);this.appendDummyInput().appendTitle("read arm joint positions");this.setOutput(!0,null);this.setTooltip("Provide the actual joint angles (radians) of the robot arm.\n---\nOutput:\n* Return the joint angles of the robot arm as a ROS message (joint_positions).\nThe output type is not specified yet.")}};
Blockly.Language.lowlevel_read_finger_positions={helpUrl:null,init:function(){this.setColour(Blockly.LANG_LOW_LEVEL_COLOUR);this.appendDummyInput().appendTitle("read finger positions");this.setOutput(!0,null);this.setTooltip("Finger is the general term for the gripper joints or other components realizing a hand/fingers and a means to grasp\nThe block provides the actual position of the fingers.\n---\nOutput:\n* Return the finger positions of the robot end-effector as a ROS message (joint_positions).\nThe output type is not specified yet.")}};
Blockly.Language.lowlevel_read_ultrasonic={helpUrl:null,init:function(){this.setColour(Blockly.LANG_LOW_LEVEL_COLOUR);this.appendDummyInput().appendTitle("read ultrasonic reading");this.setOutput(!0,null);this.setTooltip("Provide the result of the ultrasonic reading.\n---\nOutput:\n* Return the distance (m) of the object in front of the ultrasonic sensors).\nThe output type is not specified yet.")}};
Blockly.Language.lowlevel_odometry={helpUrl:null,init:function(){this.setColour(Blockly.LANG_LOW_LEVEL_COLOUR);this.appendDummyInput().appendTitle("read odometry data");this.setOutput(!0,"Pose6D");this.setTooltip("Read the odometry information from the robot base.\n---\nOutput:\n* Return a 6D pose.The only allowed output type is 'Pose6D'.")}};
Blockly.Language.lowlevel_quaternion_from_euler={helpUrl:null,init:function(){this.setColour(Blockly.LANG_LOW_LEVEL_COLOUR);this.appendDummyInput().appendTitle("quaternion from euler");this.appendValueInput("ROLL").appendTitle("roll (rad)").setAlign(Blockly.ALIGN_RIGHT).setCheck("Number");this.appendValueInput("PITCH").appendTitle("pitch (rad)").setAlign(Blockly.ALIGN_RIGHT).setCheck("Number");this.appendValueInput("YAW").appendTitle("yaw (rad)").setAlign(Blockly.ALIGN_RIGHT).setCheck("Number");this.setOutput(!0,
Blockly.LANG_CONNECTION_TYPE_QUATERNION);this.setTooltip("")}};Blockly.Language.lowlevel_is_wall={helpUrl:null,init:function(){this.setColour(Blockly.LANG_LOW_LEVEL_COLOUR);this.appendValueInput("ANGLE").appendTitle("check for obstacle at angle (rad)").setCheck("Number");this.appendValueInput("DISTANCE").appendTitle("and max. distance (m) of").setCheck("Number");this.setInputsInline(!0);this.setOutput(!0,"Boolean");this.setTooltip("Test whether something (e.g. an obstacle or a wall) is closer than the specified distance.\n---\nInputs:\n* angle (value input): The angle (radians) to specify the direction of interest (with respect to the sensor).\n* distance (value input): Maximum distance of interest in meters.\n---\nOutput:\n* Return True if an obstacle is perceived and False otherwise.")}};
Blockly.Language.lowlevel_get_param={helpUrl:null,init:function(){this.setColour(Blockly.LANG_LOW_LEVEL_COLOUR);var a=new Blockly.FieldDropdown(Blockly.CONFIG_PARAMETER_SERVER);this.appendDummyInput().appendTitle("get").appendTitle(a,"MODE").appendTitle("from parameter server");this.setOutput(!0,null)}};
Blockly.Language.ros_other_node={helpUrl:null,init:function(){this.setColour(Blockly.LANG_ROS_NODE_COLOUR);this.appendDummyInput().appendTitle(new Blockly.FieldTextInput("",null),"NODE");this.appendDummyInput().appendTitle("node");this.setOutput(!0,Blockly.LANG_CONNECTION_TYPE_ROS_NODE);this.setInputsInline(!0);this.setTooltip("")}};
Blockly.Language.try_catch={helpUrl:null,init:function(){this.setColour(120);this.appendDummyInput().appendTitle("try");this.appendStatementInput("TRY");this.appendDummyInput().appendTitle("catch").appendTitle(new Blockly.FieldVariable("e"),"VAR");this.appendStatementInput("CATCH");this.setPreviousStatement(!0);this.setNextStatement(!0);this.setTooltip("")},getVars:function(){return[this.getTitleValue("VAR")]},renameVar:function(a,b){Blockly.Names.equals(a,this.getTitleValue("VAR"))&&this.setTitleValue(b,
"VAR")}};Blockly.Language.vector={helpUrl:null,init:function(){this.setColour(Blockly.LANG_DUMMY_COLOUR);this.appendDummyInput().appendTitle("vector");this.setMutator(new Blockly.Mutator(["vector_value"]));this.setOutput(!0,"Vector");this.setTooltip("");this.valueCount_=0},mutationToDom:function(){var a=document.createElement("mutation");this.valueCount_&&a.setAttribute("values",this.valueCount_);return a},domToMutation:function(a){for(var b=0;b<this.valueCount_;b++)this.getInput("VALUE"+b)&&this.removeInput("VALUE"+
b);this.valueCount_=window.parseInt(a.getAttribute("values"),10);for(b=0;b<this.valueCount_;b++)this.appendValueInput("VALUE"+b).appendTitle("value "+(b+1)).setAlign(Blockly.ALIGN_RIGHT).setCheck("Number")},decompose:function(a){var b=new Blockly.Block(a,"vector_container");b.initSvg();for(var c=b.getInput("STACK").connection,d=0;d<this.valueCount_;d++){var e=new Blockly.Block(a,"vector_value");e.initSvg();c.connect(e.previousConnection);c=e.nextConnection}return b},compose:function(a){for(var b=
this.valueCount_-1;0<=b;b--)this.getInput("VALUE"+b)&&this.removeInput("VALUE"+b);this.valueCount_=0;for(a=a.getInputTargetBlock("STACK");a;)b=this.appendValueInput("VALUE"+this.valueCount_).appendTitle("value "+(this.valueCount_+1)).setAlign(Blockly.ALIGN_RIGHT).setCheck("Number"),a.valueConnection_&&b.connection.connect(a.valueConnection_),this.valueCount_++,a=a.nextConnection&&a.nextConnection.targetBlock()},saveConnections:function(a){a=a.getInputTargetBlock("STACK");for(var b=0;a;){var c=this.getInput("VALUE"+
b);a.valueConnection_=c&&c.connection.targetConnection;b++;a=a.nextConnection&&a.nextConnection.targetBlock()}}};Blockly.Language.vector_container={init:function(){this.setColour(Blockly.LANG_DUMMY_COLOUR);this.appendDummyInput().appendTitle("vector");this.appendStatementInput("STACK");this.setPreviousStatement(!0);this.setNextStatement(!0);this.setTooltip("")}};
Blockly.Language.vector_value={init:function(){this.setColour(Blockly.LANG_DUMMY_COLOUR);this.appendDummyInput().appendTitle("value");this.setPreviousStatement(!0);this.setNextStatement(!0);this.setTooltip("")}};
Blockly.Language.matrix={helpUrl:null,init:function(){this.setColour(Blockly.LANG_DUMMY_COLOUR);this.appendDummyInput().appendTitle("matrix");this.setMutator(new Blockly.Mutator(["matrix_row_value"]));this.setOutput(!0,"Matrix");this.setTooltip("");this.rowCount_=0},mutationToDom:function(){var a=document.createElement("mutation");this.rowCount_&&a.setAttribute("rows",this.rowCount_);return a},domToMutation:function(a){for(var b=0;b<this.rowCount_;b++)this.getInput("ROW"+b)&&this.removeInput("ROW"+
b);this.rowCount_=window.parseInt(a.getAttribute("rows"),10);for(b=0;b<this.rowCount_;b++)this.appendValueInput("ROW"+b).appendTitle("row "+(b+1)).setAlign(Blockly.ALIGN_RIGHT).setCheck("Row")},decompose:function(a){var b=new Blockly.Block(a,"matrix_container");b.initSvg();for(var c=b.getInput("STACK").connection,d=0;d<this.rowCount_;d++){var e=new Blockly.Block(a,"matrix_row_value");e.initSvg();c.connect(e.previousConnection);c=e.nextConnection}return b},compose:function(a){for(var b=this.rowCount_-
1;0<=b;b--)this.getInput("ROW"+b)&&this.removeInput("ROW"+b);this.rowCount_=0;for(a=a.getInputTargetBlock("STACK");a;)b=this.appendValueInput("ROW"+this.rowCount_).appendTitle("row "+(this.rowCount_+1)).setAlign(Blockly.ALIGN_RIGHT).setCheck("Row"),a.valueConnection_&&b.connection.connect(a.valueConnection_),this.rowCount_++,a=a.nextConnection&&a.nextConnection.targetBlock()},saveConnections:function(a){a=a.getInputTargetBlock("STACK");for(var b=0;a;){var c=this.getInput("ROW"+b);a.valueConnection_=
c&&c.connection.targetConnection;b++;a=a.nextConnection&&a.nextConnection.targetBlock()}}};Blockly.Language.matrix_container={init:function(){this.setColour(Blockly.LANG_DUMMY_COLOUR);this.appendDummyInput().appendTitle("matrix");this.appendStatementInput("STACK");this.setPreviousStatement(!0);this.setNextStatement(!0);this.setTooltip("")}};
Blockly.Language.matrix_row_value={init:function(){this.setColour(Blockly.LANG_DUMMY_COLOUR);this.appendDummyInput().appendTitle("row");this.setPreviousStatement(!0);this.setNextStatement(!0);this.setTooltip("")}};
Blockly.Language.row={helpUrl:null,init:function(){this.setColour(Blockly.LANG_DUMMY_COLOUR);this.appendDummyInput().appendTitle("row");this.setMutator(new Blockly.Mutator(["row_column_value"]));this.setOutput(!0,"Row");this.setInputsInline(!0);this.setTooltip("");this.columnCount_=0},mutationToDom:function(){var a=document.createElement("mutation");this.columnCount_&&a.setAttribute("columns",this.columnCount_);return a},domToMutation:function(a){for(var b=0;b<this.columnCount_;b++)this.getInput("COL"+
b)&&this.removeInput("COL"+b);this.columnCount_=window.parseInt(a.getAttribute("columns"),10);for(b=0;b<this.columnCount_;b++)this.appendValueInput("COL"+b).appendTitle("column "+(b+1)).setAlign(Blockly.ALIGN_RIGHT).setCheck("Number")},decompose:function(a){var b=new Blockly.Block(a,"row_container");b.initSvg();for(var c=b.getInput("STACK").connection,d=0;d<this.columnCount_;d++){var e=new Blockly.Block(a,"row_column_value");e.initSvg();c.connect(e.previousConnection);c=e.nextConnection}return b},
compose:function(a){for(var b=this.columnCount_-1;0<=b;b--)this.getInput("COL"+b)&&this.removeInput("COL"+b);this.columnCount_=0;for(a=a.getInputTargetBlock("STACK");a;)b=this.appendValueInput("COL"+this.columnCount_).appendTitle("column "+(this.columnCount_+1)).setAlign(Blockly.ALIGN_RIGHT).setCheck("Number"),a.valueConnection_&&b.connection.connect(a.valueConnection_),this.columnCount_++,a=a.nextConnection&&a.nextConnection.targetBlock()},saveConnections:function(a){a=a.getInputTargetBlock("STACK");
for(var b=0;a;){var c=this.getInput("COL"+b);a.valueConnection_=c&&c.connection.targetConnection;b++;a=a.nextConnection&&a.nextConnection.targetBlock()}}};Blockly.Language.row_container={init:function(){this.setColour(Blockly.LANG_DUMMY_COLOUR);this.appendDummyInput().appendTitle("row");this.appendStatementInput("STACK");this.setPreviousStatement(!0);this.setNextStatement(!0);this.setTooltip("")}};
Blockly.Language.row_column_value={init:function(){this.setColour(Blockly.LANG_DUMMY_COLOUR);this.appendDummyInput().appendTitle("column");this.setPreviousStatement(!0);this.setNextStatement(!0);this.setTooltip("")}};
Blockly.Language.axis_rotation={helpUrl:null,init:function(){this.setColour(Blockly.LANG_DUMMY_COLOUR);var a=new Blockly.FieldDropdown([["x axis","X"],["y axis","Y"],["z axis","Z"]]);this.appendValueInput("DEG");this.appendDummyInput().appendTitle("degree rotation about").appendTitle(a,"MODE");this.setOutput(!0,"Matrix");this.setInputsInline(!0)}};
Blockly.Language.matrix_multiplication={helpUrl:null,init:function(){this.setColour(Blockly.LANG_DUMMY_COLOUR);this.appendValueInput("A").setCheck(["Matrix","Vector"]);this.appendValueInput("B").setCheck(["Matrix","Vector"]).appendTitle("\u00d7");this.setInputsInline(!0);this.setOutput(!0,["Matrix","Vector"])}};
Blockly.Language.matrix_add_and_sub={helpUrl:null,init:function(){this.setColour(Blockly.LANG_DUMMY_COLOUR);var a=new Blockly.FieldDropdown([["+","ADD"],["-","SUB"]]);this.appendValueInput("A").setCheck(["Matrix","Vector"]);this.appendValueInput("B").setCheck(["Matrix","Vector"]).appendTitle(a,"MODE");this.setInputsInline(!0);this.setOutput(!0,["Matrix","Vector"])}};
Blockly.Language.matrix_create_frame={helpUrl:null,init:function(){this.setColour(Blockly.LANG_DUMMY_COLOUR);this.appendDummyInput().appendTitle("homogeneous transform").appendTitle(new Blockly.FieldTextInput("frame_name"),"NAME");this.appendValueInput("TRANSLATION").setCheck("Translation").setAlign(Blockly.ALIGN_RIGHT).appendTitle("translation (linear offset)").setCheck(["Vector","Matrix"]);this.appendValueInput("ROTATION").setCheck("Matrix").setAlign(Blockly.ALIGN_RIGHT).appendTitle("rotation matrix (angular offset)");
this.setOutput(!0,"Matrix");this.setTooltip("")}};Blockly.Language.logic_compare={helpUrl:Blockly.LANG_LOGIC_COMPARE_HELPURL,init:function(){this.setColour(120);this.setOutput(!0,"Boolean");this.appendValueInput("A");this.appendValueInput("B").appendTitle(new Blockly.FieldDropdown(this.OPERATORS),"OP");this.setInputsInline(!0);var a=this;this.setTooltip(function(){var b=a.getTitleValue("OP");return a.TOOLTIPS[b]})}};Blockly.Language.logic_compare.OPERATORS=[["=","EQ"],["\u2260","NEQ"],["<","LT"],["\u2264","LTE"],[">","GT"],["\u2265","GTE"]];
Blockly.Language.logic_compare.TOOLTIPS={EQ:Blockly.LANG_LOGIC_COMPARE_TOOLTIP_EQ,NEQ:Blockly.LANG_LOGIC_COMPARE_TOOLTIP_NEQ,LT:Blockly.LANG_LOGIC_COMPARE_TOOLTIP_LT,LTE:Blockly.LANG_LOGIC_COMPARE_TOOLTIP_LTE,GT:Blockly.LANG_LOGIC_COMPARE_TOOLTIP_GT,GTE:Blockly.LANG_LOGIC_COMPARE_TOOLTIP_GTE};
Blockly.Language.logic_operation={helpUrl:Blockly.LANG_LOGIC_OPERATION_HELPURL,init:function(){this.setColour(120);this.setOutput(!0,"Boolean");this.appendValueInput("A").setCheck("Boolean");this.appendValueInput("B").setCheck("Boolean").appendTitle(new Blockly.FieldDropdown(this.OPERATORS),"OP");this.setInputsInline(!0);var a=this;this.setTooltip(function(){var b=a.getTitleValue("OP");return a.TOOLTIPS[b]})}};
Blockly.Language.logic_operation.OPERATORS=[[Blockly.LANG_LOGIC_OPERATION_AND,"AND"],[Blockly.LANG_LOGIC_OPERATION_OR,"OR"]];Blockly.Language.logic_operation.TOOLTIPS={AND:Blockly.LANG_LOGIC_OPERATION_TOOLTIP_AND,OR:Blockly.LANG_LOGIC_OPERATION_TOOLTIP_OR};Blockly.Language.logic_negate={helpUrl:Blockly.LANG_LOGIC_NEGATE_HELPURL,init:function(){this.setColour(120);this.setOutput(!0,"Boolean");this.appendValueInput("BOOL").setCheck("Boolean").appendTitle(Blockly.LANG_LOGIC_NEGATE_INPUT_NOT);this.setTooltip(Blockly.LANG_LOGIC_NEGATE_TOOLTIP)}};
Blockly.Language.logic_boolean={helpUrl:Blockly.LANG_LOGIC_BOOLEAN_HELPURL,init:function(){this.setColour(120);this.setOutput(!0,"Boolean");this.appendDummyInput().appendTitle(new Blockly.FieldDropdown(this.BOOLEANS),"BOOL");this.setTooltip(Blockly.LANG_LOGIC_BOOLEAN_TOOLTIP)}};Blockly.Language.logic_boolean.BOOLEANS=[[Blockly.LANG_LOGIC_BOOLEAN_TRUE,"TRUE"],[Blockly.LANG_LOGIC_BOOLEAN_FALSE,"FALSE"]];
Blockly.Language.logic_null={helpUrl:Blockly.LANG_LOGIC_NULL_HELPURL,init:function(){this.setColour(120);this.setOutput(!0);this.appendDummyInput().appendTitle(Blockly.LANG_LOGIC_NULL);this.setTooltip(Blockly.LANG_LOGIC_NULL_TOOLTIP)}};
Blockly.Language.logic_ternary={helpUrl:Blockly.LANG_LOGIC_TERNARY_HELPURL,init:function(){this.setColour(120);this.appendValueInput("IF").setCheck("Boolean").appendTitle(Blockly.LANG_LOGIC_TERNARY_CONDITION);this.appendValueInput("THEN").appendTitle(Blockly.LANG_LOGIC_TERNARY_IF_TRUE);this.appendValueInput("ELSE").appendTitle(Blockly.LANG_LOGIC_TERNARY_IF_FALSE);this.setOutput(!0);this.setTooltip(Blockly.LANG_LOGIC_TERNARY_TOOLTIP)}};Blockly.Language.lists_create_empty={helpUrl:Blockly.LANG_LISTS_CREATE_EMPTY_HELPURL,init:function(){this.setColour(210);this.setOutput(!0,"Array");this.appendDummyInput().appendTitle(Blockly.LANG_LISTS_CREATE_EMPTY_TITLE);this.setTooltip(Blockly.LANG_LISTS_CREATE_EMPTY_TOOLTIP)}};
Blockly.Language.lists_create_with={helpUrl:"",init:function(){this.setColour(210);this.appendValueInput("ADD0").appendTitle(Blockly.LANG_LISTS_CREATE_WITH_INPUT_WITH);this.appendValueInput("ADD1");this.appendValueInput("ADD2");this.setOutput(!0,"Array");this.setMutator(new Blockly.Mutator(["lists_create_with_item"]));this.setTooltip(Blockly.LANG_LISTS_CREATE_WITH_TOOLTIP);this.itemCount_=3},mutationToDom:function(a){a=document.createElement("mutation");a.setAttribute("items",this.itemCount_);return a},
domToMutation:function(a){for(var b=0;b<this.itemCount_;b++)this.removeInput("ADD"+b);this.itemCount_=window.parseInt(a.getAttribute("items"),10);for(b=0;b<this.itemCount_;b++)a=this.appendValueInput("ADD"+b),0==b&&a.appendTitle(Blockly.LANG_LISTS_CREATE_WITH_INPUT_WITH);0==this.itemCount_&&this.appendDummyInput("EMPTY").appendTitle(Blockly.LANG_LISTS_CREATE_EMPTY_TITLE)},decompose:function(a){var b=new Blockly.Block(a,"lists_create_with_container");b.initSvg();for(var c=b.getInput("STACK").connection,
d=0;d<this.itemCount_;d++){var e=new Blockly.Block(a,"lists_create_with_item");e.initSvg();c.connect(e.previousConnection);c=e.nextConnection}return b},compose:function(a){if(0==this.itemCount_)this.removeInput("EMPTY");else for(var b=this.itemCount_-1;0<=b;b--)this.removeInput("ADD"+b);this.itemCount_=0;for(a=a.getInputTargetBlock("STACK");a;)b=this.appendValueInput("ADD"+this.itemCount_),0==this.itemCount_&&b.appendTitle(Blockly.LANG_LISTS_CREATE_WITH_INPUT_WITH),a.valueConnection_&&b.connection.connect(a.valueConnection_),
this.itemCount_++,a=a.nextConnection&&a.nextConnection.targetBlock();0==this.itemCount_&&this.appendDummyInput("EMPTY").appendTitle(Blockly.LANG_LISTS_CREATE_EMPTY_TITLE)},saveConnections:function(a){a=a.getInputTargetBlock("STACK");for(var b=0;a;){var c=this.getInput("ADD"+b);a.valueConnection_=c&&c.connection.targetConnection;b++;a=a.nextConnection&&a.nextConnection.targetBlock()}}};
Blockly.Language.lists_create_with_container={init:function(){this.setColour(210);this.appendDummyInput().appendTitle(Blockly.LANG_LISTS_CREATE_WITH_CONTAINER_TITLE_ADD);this.appendStatementInput("STACK");this.setTooltip(Blockly.LANG_LISTS_CREATE_WITH_CONTAINER_TOOLTIP);this.contextMenu=!1}};
Blockly.Language.lists_create_with_item={init:function(){this.setColour(210);this.appendDummyInput().appendTitle(Blockly.LANG_LISTS_CREATE_WITH_ITEM_TITLE);this.setPreviousStatement(!0);this.setNextStatement(!0);this.setTooltip(Blockly.LANG_LISTS_CREATE_WITH_ITEM_TOOLTIP);this.contextMenu=!1}};
Blockly.Language.lists_repeat={helpUrl:Blockly.LANG_LISTS_REPEAT_HELPURL,init:function(){this.setColour(210);this.setOutput(!0,"Array");this.appendValueInput("ITEM").appendTitle(Blockly.LANG_LISTS_REPEAT_INPUT_WITH);this.appendValueInput("NUM").setCheck("Number").appendTitle(Blockly.LANG_LISTS_REPEAT_INPUT_REPEATED);this.appendDummyInput().appendTitle(Blockly.LANG_LISTS_REPEAT_INPUT_TIMES);this.setInputsInline(!0);this.setTooltip(Blockly.LANG_LISTS_REPEAT_TOOLTIP)}};
Blockly.Language.lists_length={helpUrl:Blockly.LANG_LISTS_LENGTH_HELPURL,init:function(){this.setColour(210);this.appendValueInput("VALUE").setCheck(["Array","String"]).appendTitle(Blockly.LANG_LISTS_LENGTH_INPUT_LENGTH);this.setOutput(!0,"Number");this.setTooltip(Blockly.LANG_LISTS_LENGTH_TOOLTIP)}};
Blockly.Language.lists_isEmpty={helpUrl:Blockly.LANG_LISTS_IS_EMPTY_HELPURL,init:function(){this.setColour(210);this.appendValueInput("VALUE").setCheck(["Array","String"]);this.appendDummyInput().appendTitle(Blockly.LANG_LISTS_INPUT_IS_EMPTY);this.setInputsInline(!0);this.setOutput(!0,"Boolean");this.setTooltip(Blockly.LANG_LISTS_TOOLTIP)}};
Blockly.Language.lists_indexOf={helpUrl:Blockly.LANG_LISTS_INDEX_OF_HELPURL,init:function(){this.setColour(210);this.setOutput(!0,"Number");this.appendValueInput("VALUE").setCheck("Array").appendTitle(Blockly.LANG_LISTS_INDEX_OF_INPUT_IN_LIST);this.appendValueInput("FIND").appendTitle(new Blockly.FieldDropdown(this.OPERATORS),"END");this.setInputsInline(!0);this.setTooltip(Blockly.LANG_LISTS_INDEX_OF_TOOLTIP)}};
Blockly.Language.lists_indexOf.OPERATORS=[[Blockly.LANG_LISTS_INDEX_OF_FIRST,"FIRST"],[Blockly.LANG_LISTS_INDEX_OF_LAST,"LAST"]];
Blockly.Language.lists_getIndex={helpUrl:Blockly.LANG_LISTS_GET_INDEX_HELPURL,init:function(){this.setColour(210);var a=new Blockly.FieldDropdown(this.MODE,function(a){this.sourceBlock_.updateStatement("REMOVE"==a)});this.appendValueInput("VALUE").setCheck("Array").appendTitle(Blockly.LANG_LISTS_GET_INDEX_INPUT_IN_LIST);this.appendDummyInput().appendTitle(a,"MODE").appendTitle("");this.appendDummyInput("AT");this.setInputsInline(!0);this.setOutput(!0,"Number");this.updateAt(!0);var b=this;this.setTooltip(function(){var a=
b.getTitleValue("MODE")+"_"+b.getTitleValue("WHERE");return Blockly["LANG_LISTS_GET_INDEX_TOOLTIP_"+a]})},mutationToDom:function(){var a=document.createElement("mutation");a.setAttribute("statement",!this.outputConnection);var b=this.getInput("AT").type==Blockly.INPUT_VALUE;a.setAttribute("at",b);return a},domToMutation:function(a){var b="true"==a.getAttribute("statement");this.updateStatement(b);a="false"!=a.getAttribute("at");this.updateAt(a)},updateStatement:function(a){a!=!this.outputConnection&&
(this.unplug(!0,!0),a?(this.setOutput(!1),this.setPreviousStatement(!0),this.setNextStatement(!0)):(this.setPreviousStatement(!1),this.setNextStatement(!1),this.setOutput(!0)))},updateAt:function(a){this.removeInput("AT");a?this.appendValueInput("AT").setCheck("Number"):this.appendDummyInput("AT");var b=new Blockly.FieldDropdown(this.WHERE,function(b){var d="FROM_START"==b||"FROM_END"==b;if(d!=a){var e=this.sourceBlock_;e.updateAt(d);e.setTitleValue(b,"WHERE");return null}});this.getInput("AT").appendTitle(b,
"WHERE")}};Blockly.Language.lists_getIndex.MODE=[[Blockly.LANG_LISTS_GET_INDEX_GET,"GET"],[Blockly.LANG_LISTS_GET_INDEX_GET_REMOVE,"GET_REMOVE"],[Blockly.LANG_LISTS_GET_INDEX_REMOVE,"REMOVE"]];Blockly.Language.lists_getIndex.WHERE=[[Blockly.LANG_LISTS_GET_INDEX_FROM_START,"FROM_START"],[Blockly.LANG_LISTS_GET_INDEX_FROM_END,"FROM_END"],[Blockly.LANG_LISTS_GET_INDEX_FIRST,"FIRST"],[Blockly.LANG_LISTS_GET_INDEX_LAST,"LAST"],[Blockly.LANG_LISTS_GET_INDEX_RANDOM,"RANDOM"]];
Blockly.Language.lists_setIndex={helpUrl:Blockly.LANG_LISTS_SET_INDEX_HELPURL,init:function(){this.setColour(210);this.appendValueInput("LIST").setCheck("Array").appendTitle(Blockly.LANG_LISTS_SET_INDEX_INPUT_IN_LIST);this.appendDummyInput().appendTitle(new Blockly.FieldDropdown(this.MODE),"MODE").appendTitle("");this.appendDummyInput("AT");this.appendValueInput("TO").appendTitle(Blockly.LANG_LISTS_SET_INDEX_INPUT_TO);this.setInputsInline(!0);this.setPreviousStatement(!0);this.setNextStatement(!0);
this.setTooltip(Blockly.LANG_LISTS_SET_INDEX_TOOLTIP);this.updateAt(!0);var a=this;this.setTooltip(function(){var b=a.getTitleValue("MODE")+"_"+a.getTitleValue("WHERE");return Blockly["LANG_LISTS_SET_INDEX_TOOLTIP_"+b]})},mutationToDom:function(){var a=document.createElement("mutation"),b=this.getInput("AT").type==Blockly.INPUT_VALUE;a.setAttribute("at",b);return a},domToMutation:function(a){a="false"!=a.getAttribute("at");this.updateAt(a)},updateAt:function(a){this.removeInput("AT");a?this.appendValueInput("AT").setCheck("Number"):
this.appendDummyInput("AT");var b=new Blockly.FieldDropdown(this.WHERE,function(b){var d="FROM_START"==b||"FROM_END"==b;if(d!=a){var e=this.sourceBlock_;e.updateAt(d);e.setTitleValue(b,"WHERE");return null}});this.moveInputBefore("AT","TO");this.getInput("AT").appendTitle(b,"WHERE")}};Blockly.Language.lists_setIndex.MODE=[[Blockly.LANG_LISTS_SET_INDEX_SET,"SET"],[Blockly.LANG_LISTS_SET_INDEX_INSERT,"INSERT"]];Blockly.Language.lists_setIndex.WHERE=Blockly.Language.lists_getIndex.WHERE;
Blockly.Language.lists_getSublist={helpUrl:Blockly.LANG_LISTS_GET_SUBLIST_HELPURL,init:function(){this.setColour(210);this.appendValueInput("LIST").setCheck("Array").appendTitle(Blockly.LANG_LISTS_GET_SUBLIST_INPUT_IN_LIST);this.appendDummyInput("AT1");this.appendDummyInput("AT2");this.setInputsInline(!0);this.setOutput(!0,"Array");this.updateAt(1,!0);this.updateAt(2,!0);this.setTooltip(Blockly.LANG_LISTS_GET_SUBLIST_TOOLTIP)},mutationToDom:function(){var a=document.createElement("mutation"),b=this.getInput("AT1").type==
Blockly.INPUT_VALUE;a.setAttribute("at1",b);b=this.getInput("AT2").type==Blockly.INPUT_VALUE;a.setAttribute("at2",b);return a},domToMutation:function(a){var b="true"==a.getAttribute("at1");a="true"==a.getAttribute("at1");this.updateAt(1,b);this.updateAt(2,a)},updateAt:function(a,b){this.removeInput("AT"+a);b?this.appendValueInput("AT"+a).setCheck("Number"):this.appendDummyInput("AT"+a);var c=new Blockly.FieldDropdown(this["WHERE"+a],function(c){var e="FROM_START"==c||"FROM_END"==c;if(e!=b){var f=
this.sourceBlock_;f.updateAt(a,e);f.setTitleValue(c,"WHERE"+a);return null}});this.getInput("AT"+a).appendTitle(Blockly["LANG_LISTS_GET_SUBLIST_INPUT_AT"+a]).appendTitle(c,"WHERE"+a);1==a&&this.moveInputBefore("AT1","AT2")}};Blockly.Language.lists_getSublist.WHERE1=Blockly.Language.lists_getIndex.WHERE.filter(function(a){return"FROM_START"==a[1]||"FROM_END"==a[1]||"FIRST"==a[1]});
Blockly.Language.lists_getSublist.WHERE2=Blockly.Language.lists_getIndex.WHERE.filter(function(a){return"FROM_START"==a[1]||"FROM_END"==a[1]||"LAST"==a[1]});Blockly.Language.units_duration={helpUrl:null,init:function(){var a=new Blockly.FieldDropdown(this.OPERATORS);this.setColour(Blockly.LANG_UNITS_COLOUR);this.appendValueInput("VALUE").setCheck("Number");this.appendDummyInput().appendTitle("(duration in").appendTitle(a,"MODE").appendTitle(")");this.setOutput(!0,"Number");this.setInputsInline(!0);this.setTooltip("Indicate that these value is considered as duration.\nNote: The block does not change the value it just indicates a type.\n---\nFields:\n* Unit (dropdown): Select the unit from the list\n---\nInputs:\n* Unlabeled (value input): Specify the duration time.\nThe only allowed connection type is 'Number'.\n---\nOutput:\n* Return the specified number.\nthe output type is 'Number'.")}};
Blockly.Language.units_duration.OPERATORS=[["seconds","SEC"],["minutes","MIN"],["hours","H"]];Blockly.Language.units_distance={helpUrl:null,init:function(){this.setColour(Blockly.LANG_UNITS_COLOUR);var a=new Blockly.FieldDropdown(this.OPERATORS);this.appendValueInput("VALUE").setCheck("Number");this.appendDummyInput().appendTitle("(distance in").appendTitle(a,"MODE").appendTitle(")");this.setOutput(!0,"Number");this.setInputsInline(!0);this.setTooltip("Indicate that these value is considered as a distance.\nNote: The block does not change the value it just indicates a type.\n---\nFields:\n* Unit (dropdown): Select the unit from the list\n---\nInputs:\n* Unlabeled (value input): Specify the distance.\nThe only allowed connection type is 'Number'.\n---\nOutput:\n* Return the specified number.\nthe output type is 'Number'.")}};
Blockly.Language.units_distance.OPERATORS=[["meters","M"],["centimeter","CM"],["millimeter","MM"]];Blockly.Language.units_velocity={helpUrl:null,init:function(){this.setColour(Blockly.LANG_UNITS_COLOUR);var a=new Blockly.FieldDropdown(this.OPERATORS);this.appendValueInput("VALUE").setCheck("Number");this.appendDummyInput().appendTitle("(velocity in").appendTitle(a,"MODE").appendTitle(")");this.setOutput(!0,"Number");this.setInputsInline(!0);this.setTooltip("Indicate that these value is considered as velocity.\nNote: The block does not change the value it just indicates a type.\n---\nFields:\n* Unit (dropdown): Select the unit from the list\n---\nInputs:\n* Unlabeled (value input): Specify the velocity.\nThe only allowed connection type is 'Number'.\n---\nOutput:\n* Return the specified number.\nthe output type is 'Number'.")}};
Blockly.Language.units_velocity.OPERATORS=[["meters/sec","M_SEC"],["kilometers/hour","KM_H"]];
Blockly.Language.units_6dPose={helpUrl:null,init:function(){this.setColour(Blockly.LANG_UNITS_COLOUR);this.appendDummyInput().appendTitle("6D pose");this.appendValueInput("LIN_X").appendTitle("x").setAlign(Blockly.ALIGN_RIGHT).setCheck("Number");this.appendValueInput("LIN_Y").appendTitle("y").setCheck("Number").setAlign(Blockly.ALIGN_RIGHT);this.appendValueInput("LIN_Z").appendTitle("z").setCheck("Number").setAlign(Blockly.ALIGN_RIGHT);this.appendValueInput("ROLL").appendTitle("roll (rad)").setCheck("Number").setAlign(Blockly.ALIGN_RIGHT);
this.appendValueInput("PITCH").appendTitle("pitch (rad)").setCheck("Number").setAlign(Blockly.ALIGN_RIGHT);this.appendValueInput("YAW").appendTitle("yaw (rad)").setCheck("Number").setAlign(Blockly.ALIGN_RIGHT);this.setOutput(!0,"Pose6D");this.setTooltip("6D pose\n---\nInputs:\n* x (value input): Linear distance in x direction (in meters).\nThe only allowed connection type is 'Number'.\n* y (value input): Linear distance in y direction (in meters).\nThe only allowed connection type is 'Number'.\n* z (value input): Linear distance in z direction (in meters).\nThe only allowed connection type is 'Number'.\n* roll (value input): Angular rotations around the x-axis (in radians).\nThe only allowed connection type is 'Number'.\n* pitch (value input): Angular rotations around the y-axis (in radians).\nThe only allowed connection type is 'Number'.\n* yaw (value input): Angular rotations around the z-axis (in radians).\nThe only allowed connection type is 'Number'.\n---\nOutput:\n* Return a list of all six entries.\nThe output type is 'Pose6D'.")}};
Blockly.Language.units_get_6dpose_element={helpUrl:null,init:function(){this.setColour(Blockly.LANG_UNITS_COLOUR);var a=new Blockly.FieldDropdown(Blockly.Language.units_6dpose_element_operators);this.appendValueInput("POSE6D").appendTitle("get").appendTitle(a,"MODE").appendTitle("of 6D pose").setCheck("Pose6D");this.setOutput(!0,"Number");this.setTooltip("Get one of the elements of a 6D pose.\n---\nFields:\n* element (dropdown): Specify the element that you would like to access.\n---\nInputs:\n* 6D pose(value input): Expected value is a 6D pose.\nThe only allowed connection type is 'Pose6D'.\n---\nOutput:\n* Return the value of the specified element of the 6D pose.")}};
Blockly.Language.units_6dpose_element_operators=[["x","LIN_X"],["y","LIN_Y"],["z","LIN_Z"],["roll","ROLL"],["pitch","PITCH"],["yaw","YAW"]];
Blockly.Language.units_set_6dpose_element={helpUrl:null,init:function(){this.setColour(Blockly.LANG_UNITS_COLOUR);var a=new Blockly.FieldDropdown(Blockly.Language.units_6dpose_element_operators);this.appendValueInput("POSE6D").appendTitle("set").appendTitle(a,"MODE").appendTitle("of 6D pose").setCheck("Pose6D").setAlign(Blockly.ALIGN_RIGHT);this.appendValueInput("VALUE").appendTitle("to").setCheck("Number").setAlign(Blockly.ALIGN_RIGHT);this.setPreviousStatement(!0);this.setNextStatement(!0);this.setInputsInline(!0);
this.setTooltip("Set the value of the 6D pose list at the chosen position to a new one.\n---\nFields:\n* element (dropwdown): Specify the element that you would like to address.\nInputs:\n* 6d pose (value input): Expected value is a 6D pose.\n* to (value input): The new value of the chosen element.")}};
Blockly.Language.units_joints={helpUrl:null,init:function(){this.setColour(Blockly.LANG_UNITS_COLOUR);this.appendDummyInput().appendTitle("joints (rad)");this.setMutator(new Blockly.Mutator(["units_joints_jointvalue"]));this.setOutput(!0,"JointAngles");this.setTooltip("");this.jointCount_=0},mutationToDom:function(){var a=document.createElement("mutation");this.jointCount_&&a.setAttribute("joints",this.jointCount_);return a},domToMutation:function(a){for(var b=0;b<this.jointCount_;b++)this.getInput("JOINTVALUE"+
b)&&this.removeInput("JOINTVALUE"+b);this.jointCount_=window.parseInt(a.getAttribute("joints"),10);for(b=0;b<this.jointCount_;b++)this.appendValueInput("JOINTVALUE"+b).appendTitle("joint value "+(b+1)).setCheck("Number").setAlign(Blockly.ALIGN_RIGHT)},decompose:function(a){var b=new Blockly.Block(a,"units_joints_container");b.initSvg();for(var c=b.getInput("STACK").connection,d=0;d<this.jointCount_;d++){var e=new Blockly.Block(a,"units_joints_jointvalue");e.initSvg();c.connect(e.previousConnection);
c=e.nextConnection}return b},compose:function(a){for(var b=this.jointCount_-1;0<=b;b--)this.getInput("JOINTVALUE"+b)&&this.removeInput("JOINTVALUE"+b);this.jointCount_=0;for(a=a.getInputTargetBlock("STACK");a;)b=this.appendValueInput("JOINTVALUE"+this.jointCount_).appendTitle("joint value "+(this.jointCount_+1)).setCheck("Number").setAlign(Blockly.ALIGN_RIGHT),a.valueConnection_&&b.connection.connect(a.valueConnection_),this.jointCount_++,a=a.nextConnection&&a.nextConnection.targetBlock()},saveConnections:function(a){a=
a.getInputTargetBlock("STACK");for(var b=0;a;){var c=this.getInput("JOINTVALUE"+b);a.valueConnection_=c&&c.connection.targetConnection;b++;a=a.nextConnection&&a.nextConnection.targetBlock()}}};Blockly.Language.units_joints_container={init:function(){this.setColour(Blockly.LANG_UNITS_COLOUR);this.appendDummyInput().appendTitle("joints");this.appendStatementInput("STACK");this.setPreviousStatement(!0);this.setNextStatement(!0)}};
Blockly.Language.units_joints_jointvalue={init:function(){this.setColour(Blockly.LANG_UNITS_COLOUR);this.appendDummyInput().appendTitle("joint value");this.setPreviousStatement(!0);this.setNextStatement(!0)}};
Blockly.Language.units_get_joints_element={helpUrl:null,init:function(){this.setColour(Blockly.LANG_UNITS_COLOUR);this.appendValueInput("VALUE_POS").appendTitle("get value ").setCheck("Number").setAlign(Blockly.ALIGN_RIGHT);this.appendValueInput("JOINTS").appendTitle("of joints").setCheck("JointAngles").setAlign(Blockly.ALIGN_RIGHT);this.setOutput(!0,"Number");this.setInputsInline(!0)}};
Blockly.Language.units_set_joints={helpUrl:null,init:function(){this.setColour(Blockly.LANG_UNITS_COLOUR);this.appendValueInput("VALUE_POS").appendTitle("set value").setCheck("Number");this.appendValueInput("JOINTS").appendTitle("of joints").setCheck("JointAngles");this.appendValueInput("NEW_VALUE").appendTitle("to").setCheck("Number");this.appendDummyInput().appendTitle("(rad)");this.setPreviousStatement(!0);this.setNextStatement(!0);this.setInputsInline(!0)}};
Blockly.Language.units_degToRad={helpUrl:null,init:function(){this.setColour(Blockly.LANG_UNITS_COLOUR);this.appendValueInput("VALUE").appendTitle("convert degree to radian").setCheck("Number");this.setOutput(!0,"Number");this.setTooltip("Convert a value from degree to radian.\n---\nInputs:\n* Unlabeled (value input): Attach a value in degree.\nThe only allowed connection type is 'Number'.\n---\nOutput:\n* Return the value in radian.\nThe output type is 'Number'.")}};
Blockly.Language.units_radToDeg={helpUrl:null,init:function(){this.setColour(Blockly.LANG_UNITS_COLOUR);this.appendValueInput("VALUE").appendTitle("convert radian to degree").setCheck("Number");this.setOutput(!0,"Number");this.setTooltip("Convert a value from radian to degree.\n---\nInputs:\n* Unlabeled (value input): Attach a value in radian.\nThe only allowed connection type is 'Number'.\n---\nOutput:\n* Return the value in degree.\nThe output type is 'Number'.")}};
Blockly.Language.units_eulerToQuaternion={helpUrl:null,init:function(){this.setColour(Blockly.LANG_UNITS_COLOUR);this.appendDummyInput().appendTitle("convert euler to quaternion");this.appendValueInput("ROLL").setCheck("Number").setAlign(Blockly.ALIGN_RIGHT).appendTitle("roll (rad)");this.appendValueInput("PITCH").setCheck("Number").setAlign(Blockly.ALIGN_RIGHT).appendTitle("pitch (rad)");this.appendValueInput("YAW").setCheck("Number").setAlign(Blockly.ALIGN_RIGHT).appendTitle("yaw (rad)");this.setOutput(!0,
"Quaternion");this.setTooltip("Convert euler angles to quaternions.\n---\nInputs:\n* roll (value input): The rotation around X-axis in radians\nThe only allowed connection type is 'Number'.\n* pitch (value input): The rotation around Y-axis in radians\nThe only allowed connection type is 'Number'.\n* yaw (value input): The rotation around Z-axis in radians\nThe only allowed connection type is 'Number'.\n---\nOutput:\nReturn a list containing the four quaternion values x,y,z,w")}};
Blockly.Language.units_quaternionToEuler={helpUrl:null,init:function(){this.setColour(Blockly.LANG_UNITS_COLOUR);this.appendDummyInput().appendTitle("convert quaternion to euler");this.appendValueInput("X").setCheck("Number").setAlign(Blockly.ALIGN_RIGHT).appendTitle("x");this.appendValueInput("Y").setCheck("Number").setAlign(Blockly.ALIGN_RIGHT).appendTitle("y");this.appendValueInput("Z").setCheck("Number").setAlign(Blockly.ALIGN_RIGHT).appendTitle("z");this.appendValueInput("W").setCheck("Number").setAlign(Blockly.ALIGN_RIGHT).appendTitle("w");
this.setOutput(!0,"Euler");this.setTooltip("Convert quaternions to euler angles.\n---\nInputs:\nx (value input):\nThe only allowed connection type is 'Number'.\ny (value input):\nThe only allowed connection type is 'Number'.\nz (value input): \nThe only allowed connection type is 'Number'.\nw (value input): \nThe only allowed connection type is 'Number'.\n---\nOutput:\nReturn a list containing the euler angles (radians) roll, pitch, yaw")}};Blockly.Language.EDUFILL_CHANGEMODE_OPERATORS=[[Blockly.EDUFILL_CHANGEMODE_OPERATORS_CLOSE,"CLOSE"],[Blockly.EDUFILL_CHANGEMODE_OPERATORS_OPEN,"OPEN"]];
Blockly.Language.output_test={helpUrl:null,init:function(){this.setColour(Blockly.LANG_DUMMY_COLOUR);this.changemode=new Blockly.ChangeMode(this,"INCHANGEMODE");this.image=new Blockly.FieldImage(Blockly.pathToBlockly+"media/menu0.png",12,12);var a=new Blockly.FieldCheckbox("FALSE",function(a){var c=this.sourceBlock_;!0==a?c.showChangeMode():!1==a&&c.disposeChangeMode()});this.appendDummyInput("BASE").appendTitle(this.image).appendTitle(a,"STATE").appendTitle("block","TITLE");this.appendValueInput("TEST").appendTitle("test");
this.setOutput(!0,null)},mutationToDom:function(){var a=document.createElement("mutation"),b=this.getTitleValue("STATE");a.setAttribute("changemodestate",b);return a},domToMutation:function(a){"TRUE"==a.getAttribute("changemodestate")&&(this.getInput("TEST")&&this.removeInput("TEST"),this.getInput(this.changemode.appendInput)||this.appendValueInput(this.changemode.appendInput),this.image.setText(Blockly.pathToBlockly+"media/menu1.png"))},changeModeToDom:function(){var a=this.getTitleValue("STATE");
return this.changemode.changeModeToDom(a)},domToChangeMode:function(a){"TRUE"==a.getAttribute("changemodestate")&&this.changemode.domToChangeMode(a)},showChangeMode:function(){this.changemode.setChangeMode(!0,"output");this.image.setText(Blockly.pathToBlockly+"media/menu1.png");var a=this.getInputTargetBlock("TEST");this.getInput("TEST")&&this.removeInput("TEST");var b=this.changemode.createProcedure(!0,[["arguments_",["x"]]]),c=b[0],b=b[1],d=Blockly.Procedures.findLegalName("test",c);c.setTitleValue(d,
"NAME");this.changemode.addToProcedureMonitor(d);this.changemode.appendProcedureCall(b,1);(new Blockly.ChangeMode(b)).reconnectOutputConnection(a,1);this.changemode.addToReconnectMonitor(b,1,1);a=new Blockly.ChangeMode(c,"STACK");c=a.appendMutationStatement("controls_if",[["elseCount_",1]]);c=new Blockly.ChangeMode(c);b=c.appendNoneMutationOutput("midlevel_ik_checker",1);b=new Blockly.ChangeMode(b);b.appendNoneMutationOutput("variables_get",1).setTitleValue("frame_of_reference","VAR");b.appendNoneMutationOutput("variables_get",
2).setTitleValue("poseList","VAR");c.changeStatementInputTo("DO0");b=c.appendNoneMutationStatement("variables_set");b.setTitleValue("joint_angles","VAR");b=(new Blockly.ChangeMode(b)).appendNoneMutationOutput("midlevel_ik_solver",1);b=new Blockly.ChangeMode(b);b.appendNoneMutationOutput("variables_get",1).setTitleValue("frame_of_reference","VAR");b.appendNoneMutationOutput("variables_get",2).setTitleValue("poseList","VAR");b=c.appendNoneMutationStatement("midlevel_move_arm_joint_position");b.setTitleValue("FALSE",
"STATE");(new Blockly.ChangeMode(b)).appendNoneMutationOutput("variables_get",1).setTitleValue("joint_angles","VAR");b=c.appendNoneMutationStatement("variables_set");b.setTitleValue("ik_result","VAR");(new Blockly.ChangeMode(b)).appendNoneMutationOutput("logic_boolean",1).setTitleValue("TRUE","BOOL");c.changeStatementInputTo("ELSE");c=c.appendNoneMutationStatement("variables_set");c.setTitleValue("ik_result","VAR");(new Blockly.ChangeMode(c)).appendNoneMutationOutput("logic_boolean",1).setTitleValue("FALSE",
"BOOL");a.appendNoneMutationOutput("variables_get",1).setTitleValue("ik_result","VAR")},disposeChangeMode:function(){this.getInput("TEST")||this.appendValueInput("TEST").appendTitle("test");this.moveInputBefore("TEST",this.changemode.appendInput);this.changemode.setChangeMode(!1,"output");this.image.setText(Blockly.pathToBlockly+"media/menu0.png")}};
Blockly.Language.test={helpUrl:null,init:function(){this.setColour(Blockly.LANG_DUMMY_COLOUR);this.changemode=new Blockly.ChangeMode(this,"INCHANGEMODE");this.image=new Blockly.FieldImage(Blockly.pathToBlockly+"media/menu0.png",12,12);var a=new Blockly.FieldCheckbox("FALSE",function(a){var c=this.sourceBlock_;!0==a?c.showChangeMode():!1==a&&c.disposeChangeMode()});this.appendDummyInput("BASE").appendTitle(this.image).appendTitle(a,"STATE").appendTitle("block","TITLE");this.dropdown=new Blockly.FieldDropdown([["test1",
"TEST1"],["test2","TEST2"]]);this.appendDummyInput("DROPDOWN").appendTitle("test to hide dropdown").appendTitle(this.dropdown,"MODE");delete this.dropdown;this.setInputsInline(!1);this.setPreviousStatement(!0);this.setNextStatement(!1)},mutationToDom:function(){var a=document.createElement("mutation"),b=this.getTitleValue("STATE");a.setAttribute("changemodestate",b);return a},domToMutation:function(a){"TRUE"==a.getAttribute("changemodestate")&&(this.getInput(this.changemode.appendInput)||this.appendStatementInput(this.changemode.appendInput),
this.getInput("DROPDOWN")&&(this.removeInput("DROPDOWN"),delete this.dropdown),this.setTitleValue("frame","TITLE"),this.image.setText(Blockly.pathToBlockly+"media/menu1.png"))},changeModeToDom:function(){var a=this.getTitleValue("STATE");return this.changemode.changeModeToDom(a)},domToChangeMode:function(a){"TRUE"==a.getAttribute("changemodestate")&&this.changemode.domToChangeMode(a)},showChangeMode:function(){this.changemode.setChangeMode(!0);this.image.setText(Blockly.pathToBlockly+"media/menu1.png");
this.setTitleValue("frame","TITLE");this.getInput("DROPDOWN")&&(this.removeInput("DROPDOWN"),delete this.dropdown);var a=this.changemode.createProcedure(!0,[["arguments_",["x1","x2","x3"]]]),b=a[0],a=a[1],c=Blockly.Procedures.findLegalName("test",b);b.setTitleValue(c,"NAME");this.changemode.addToProcedureMonitor(c);this.changemode.appendNoneMutationStatement("highlevel_move_arm_joint_string");this.changemode.appendNoneMutationStatement("highlevel_move_gripper_string").setTitleValue("OPEN","MODE");
b=this.changemode.appendNoneMutationStatement("store_in_db");b.setTitleValue("POSE","MODE");b.setTitleValue("object1","OBJECT_NAME");b=(new Blockly.ChangeMode(b,"")).appendMutationOutput("lists_create_with",1,[["itemCount_",6]]);b=new Blockly.ChangeMode(b,"");b.appendNoneMutationOutput("math_number",1).setTitleValue("1","NUM");b.appendNoneMutationOutput("math_number",2).setTitleValue("1","NUM");b.appendNoneMutationOutput("math_number",3).setTitleValue("1","NUM");b.appendNoneMutationOutput("math_number",
4).setTitleValue("90","NUM");b.appendNoneMutationOutput("math_number",5).setTitleValue("45","NUM");b.appendNoneMutationOutput("math_number",6).setTitleValue("90","NUM");this.changemode.appendNoneMutationStatement("highlevel_move_gripper_string").setTitleValue("CLOSE","MODE");b=this.changemode.appendNoneMutationStatement("variables_set");b.renameVar("item","testProc");(new Blockly.ChangeMode(b,"")).appendProcedureCall(a,1)},disposeChangeMode:function(){this.setTitleValue("block","TITLE");this.dropdown=
new Blockly.FieldDropdown([["test1","TEST1"],["test2","TEST2"]]);this.getInput("DROPDOWN")||this.appendDummyInput("DROPDOWN").appendTitle("test to hide dropdown").appendTitle(this.dropdown,"MODE");this.changemode.setChangeMode(!1);this.image.setText(Blockly.pathToBlockly+"media/menu0.png")}};
Blockly.Language.turn_robot={helpUrl:null,init:function(){this.setColour(Blockly.LANG_DUMMY_COLOUR);this.appendDummyInput().appendTitle("turn robot");this.appendValueInput("DEGREE").setCheck("Number").appendTitle("about");this.appendDummyInput().appendTitle("degree");this.setPreviousStatement(!0);this.setNextStatement(!0);this.setInputsInline(!0);this.setTooltip("TODO")}};
Blockly.Language.store_in_db={helpUrl:null,init:function(){this.setColour(Blockly.LANG_DUMMY_COLOUR);var a=new Blockly.FieldDropdown(Blockly.Language.DB_TYPES,function(a){for(var c=this.getOptions_(),d=0;d<c.length;d++)if(c[d][0]==a){this.sourceBlock_.getInput("STORE_VALUE").setCheck(c[d][1]);break}this.setText(a)});this.appendValueInput("STORE_VALUE").appendTitle("store type").appendTitle(a,"MODE").appendTitle("of").appendTitle(new Blockly.FieldTextInput("object name",null),"OBJECT_NAME");this.setPreviousStatement(!0);
this.setNextStatement(!0);this.setTooltip("Store the actual value with the given type into a database according to the specified object name")},mutationToDom:function(){var a=document.createElement("mutation"),b=this.getTitleValue("MODE");a.setAttribute("store_type",b);return a},domToMutation:function(a){a=a.getAttribute("store_type");this.getInput("STORE_VALUE").setCheck(a)}};
Blockly.Language.load_from_db={helpUrl:null,init:function(){this.setColour(Blockly.LANG_DUMMY_COLOUR);var a=new Blockly.FieldDropdown(Blockly.Language.DB_TYPES,function(a){for(var c=this.getOptions_(),d=0;d<c.length;d++)if(c[d][0]==a){this.sourceBlock_.setOutput(!0,c[d][1]);break}this.setText(a)});this.appendDummyInput().appendTitle("load type").appendTitle(a,"MODE").appendTitle("of").appendTitle(new Blockly.FieldTextInput("object name",null),"OBJECT_NAME");this.setOutput(!0,"POSE");this.setTooltip("Load a value from a database depending on the specified type and object name")},
mutationToDom:function(){var a=document.createElement("mutation"),b=this.getTitleValue("MODE");a.setAttribute("load_type",b);return a},domToMutation:function(a){a=a.getAttribute("load_type");this.setOutput(!0,a)}};Blockly.Language.DB_TYPES=[["pose","POSE"],["color","COLOR"],["shape","SHAPE"]];
Blockly.Language.move_robot_to_cube={helpUrl:null,init:function(){this.setColour(Blockly.LANG_DUMMY_COLOUR);var a=new Blockly.FieldDropdown(Blockly.CONFIG_CUBE_COLORS);this.appendDummyInput("DUMMY").appendTitle("move robot to ").appendTitle(a,"MODE").appendTitle("cube");this.setPreviousStatement(!0);this.setNextStatement(!0);this.setTooltip("TODO")}};
Blockly.Language.move_robot_to_position={helpUrl:null,init:function(){this.setColour(Blockly.LANG_DUMMY_COLOUR);var a=new Blockly.FieldDropdown(this.OPERATORS);this.appendDummyInput().appendTitle("move robot to").appendTitle(a,"MODE");this.setPreviousStatement(!0);this.setNextStatement(!0);this.setInputsInline(!0);this.setTooltip("TODO")}};
Blockly.Language.move_robot_to_position.OPERATORS=[[Blockly.LANG_HIGH_LEVEL_MOVE_ROBOT_TO_POSITION_PLATFORM1,"PLATFORM1"],[Blockly.LANG_HIGH_LEVEL_MOVE_ROBOT_TO_POSITION_ENTRANCE,"ENTRANCE"],[Blockly.LANG_HIGH_LEVEL_MOVE_ROBOT_TO_POSITION_OTHERS,"OTHERS"]];
Blockly.Language.grasp_cube={helpUrl:null,init:function(){this.setColour(Blockly.LANG_DUMMY_COLOUR);this.setPreviousStatement(!0);this.setNextStatement(!0);var a=new Blockly.FieldDropdown(Blockly.CONFIG_CUBE_COLORS,function(a){this.sourceBlock_.setColour("blue"==a?Blockly.LANG_MID_LEVEL_FIND_CUBE_COLOUR_BLUE:"red"==a?Blockly.LANG_MID_LEVEL_FIND_CUBE_COLOUR_RED:"green"==a?Blockly.LANG_MID_LEVEL_FIND_CUBE_COLOUR_GREEN:"yellow"==a?Blockly.LANG_MID_LEVEL_FIND_CUBE_COLOUR_YELLOW:Blockly.LANG_MID_LEVEL_FIND_CUBE_COLOUR_BLUE);
this.setText(a)});this.appendDummyInput().appendTitle("grasp").appendTitle(a,"MODE").appendTitle("cube");this.setInputsInline(!0);this.setTooltip("TODO")},mutationToDom:function(){var a=document.createElement("mutation"),b=this.getTitleValue("MODE");a.setAttribute("colour",b);return a},domToMutation:function(a){a=a.getAttribute("colour");"BLUE"==a?this.setColour(Blockly.LANG_MID_LEVEL_FIND_CUBE_COLOUR_BLUE):"RED"==a?this.setColour(Blockly.LANG_MID_LEVEL_FIND_CUBE_COLOUR_RED):"GREEN"==a?this.setColour(Blockly.LANG_MID_LEVEL_FIND_CUBE_COLOUR_GREEN):
"YELLOW"==a?this.setColour(Blockly.LANG_MID_LEVEL_FIND_CUBE_COLOUR_YELLOW):this.setColour(Blockly.LANG_MID_LEVEL_FIND_CUBE_COLOUR_BLUE)}};
Blockly.Language.place_cube={helpUrl:null,init:function(){this.setColour(Blockly.LANG_DUMMY_COLOUR);var a=new Blockly.FieldDropdown(this.OPERATORS_DEST),b=new Blockly.FieldDropdown(this.OPERATORS_REF);this.appendDummyInput().appendTitle("place cube").appendTitle(a,"MODE_DEST").appendTitle("").appendTitle(b,"MODE_REF");this.setPreviousStatement(!0);this.setNextStatement(!0);this.setInputsInline(!0);this.setTooltip("TODO")}};
Blockly.Language.place_cube.OPERATORS_DEST=[[Blockly.LANG_HIGH_LEVEL_PLACE_CUBE_ONTO,"ONTO"],[Blockly.LANG_HIGH_LEVEL_PLACE_CUBE_LEFT,"LEFT"],[Blockly.LANG_HIGH_LEVEL_PLACE_CUBE_RIGHT,"RIGHT"],[Blockly.LANG_HIGH_LEVEL_PLACE_CUBE_INFRONT,"INFRONT"]];Blockly.Language.place_cube.OPERATORS_REF=[[Blockly.LANG_HIGH_LEVEL_PLACE_CUBE_PLATFORM1,"PLATFORM1"],[Blockly.LANG_HIGH_LEVEL_PLACE_CUBE_ROBOT,"ROBOT"],[Blockly.LANG_HIGH_LEVEL_PLACE_CUBE_OTHERS,"OTHERS"]];
Blockly.Language.wall_follower={helpUrl:null,init:function(){this.setColour(Blockly.LANG_DUMMY_COLOUR);var a=new Blockly.FieldDropdown(this.OPERATORS);this.appendDummyInput().appendTitle("follow the").appendTitle(a,"MODE").appendTitle("wall until ...");this.setPreviousStatement(!0);this.setNextStatement(!0);this.setInputsInline(!0);this.setTooltip("TODO")}};Blockly.Language.wall_follower.OPERATORS=[[Blockly.LANG_HIGH_LEVEL_WALL_FOLLOWER_LEFT,"LEFT"],[Blockly.LANG_HIGH_LEVEL_WALL_FOLLOWER_RIGHT,"RIGHT"]];
Blockly.Language.fetch_and_carry={helpUrl:null,init:function(){this.setColour(Blockly.LANG_DUMMY_COLOUR);var a=new Blockly.FieldDropdown(Blockly.Language.find_cube.OPERATORS),b=new Blockly.FieldDropdown(Blockly.Language.place_cube.OPERATORS_DEST),c=new Blockly.FieldDropdown(Blockly.Language.place_cube.OPERATORS_REF);this.appendDummyInput().appendTitle("take").appendTitle(a,"MODE_COL").appendTitle("cube and put it").appendTitle(b,"MODE_DEST").appendTitle("").appendTitle(c,"MODE_REF");this.setPreviousStatement(!0);
this.setNextStatement(!0);this.setInputsInline(!0);this.setTooltip("TODO")}};
Blockly.Language.tftransform={helpUrl:null,init:function(){this.setColour(Blockly.LANG_DUMMY_COLOUR);this.appendDummyInput().appendTitle("get transform");this.appendValueInput("OBJ_FRAME").setCheck("String").appendTitle("from object frame:");this.appendValueInput("REF_FRAME").setCheck("String").appendTitle("to reference frame:");this.appendValueInput("DURATION").setCheck("Number").appendTitle("and search for");this.appendDummyInput().appendTitle("second(s)");this.setOutput(!0,Blockly.LANG_CONNECTION_TYPE_TRANSFORM);
this.setInputsInline(!0);this.setTooltip("")}};Blockly.Language.base_placement={helpUrl:null,init:function(){this.setColour(Blockly.LANG_DUMMY_COLOUR);this.appendDummyInput().appendTitle("base placement");this.setInputsInline(!0);this.setPreviousStatement(!0);this.setNextStatement(!0);this.setTooltip("TODO")}};
Blockly.Language.find_and_grasp_object={helpUrl:null,init:function(){this.setColour(Blockly.LANG_DUMMY_COLOUR);var a=new Blockly.FieldDropdown(this.OPERATORS);this.appendDummyInput().appendTitle("find and grasp").appendTitle(a,"MODE");this.setInputsInline(!0);this.setPreviousStatement(!0);this.setNextStatement(!0);this.setTooltip("")}};Blockly.Language.find_and_grasp_object.OPERATORS=[[Blockly.LANG_HIGH_LEVEL_FIND_AND_GRASP_OBJECT_CUBE,"CUBE"]];
Blockly.Language.detect_and_reach_object={helpUrl:null,init:function(){this.setColour(Blockly.LANG_DUMMY_COLOUR);var a=new Blockly.FieldDropdown(this.OPERATORS);this.appendDummyInput().appendTitle("detect and reach").appendTitle(a,"MODE");this.setInputsInline(!0);this.setPreviousStatement(!0);this.setNextStatement(!0);this.setTooltip("TODO")}};Blockly.Language.detect_and_reach_object.OPERATORS=[[Blockly.LANG_HIGH_LEVEL_FIND_AND_GRASP_OBJECT_CUBE,"CUBE"]];Blockly.Language.midlevel_move_gripper={helpUrl:null,init:function(){this.setColour(Blockly.LANG_MID_LEVEL_COLOUR);this.changemode=new Blockly.ChangeMode(this,"INCHANGEMODE");this.image=new Blockly.FieldImage(Blockly.pathToBlockly+"media/menu0.png",12,12);var a=new Blockly.FieldCheckbox("FALSE",function(a){var c=this.sourceBlock_;!0==a?c.showChangeMode():!1==a&&c.disposeChangeMode()});this.appendDummyInput().appendTitle(this.image).appendTitle(a,"STATE").appendTitle("move gripper");this.appendValueInput("GRIPPER_LEFT").setAlign(Blockly.ALIGN_RIGHT).appendTitle("left gripper value").setCheck("Number");
this.appendValueInput("GRIPPER_RIGHT").setAlign(Blockly.ALIGN_RIGHT).appendTitle("right gripper value").setCheck("Number");this.setPreviousStatement(!0);this.setNextStatement(!0);this.setTooltip("Move the youBot gripper to desired positions.\n---\nFields:\n* "+Blockly.ChangeModeTooltip+"\n---\nInputs:\n* Left gripper (value input): Specify the position for the left gripper.\nThe only allowed connection type is 'Number'.\n* Right gripper (value input): Specify the position for the right gripper.\nThe only allowed connection type is 'Number'.")},
mutationToDom:function(){var a=document.createElement("mutation"),b=this.getTitleValue("STATE");a.setAttribute("changemodestate",b);return a},domToMutation:function(a){"TRUE"==a.getAttribute("changemodestate")&&(this.getInput(this.changemode.appendInput)||this.appendStatementInput(this.changemode.appendInput),this.image.setText(Blockly.pathToBlockly+"media/menu1.png"))},changeModeToDom:function(){var a=this.getTitleValue("STATE");return this.changemode.changeModeToDom(a)},domToChangeMode:function(a){"TRUE"==
a.getAttribute("changemodestate")&&this.changemode.domToChangeMode(a)},showChangeMode:function(){this.changemode.setChangeMode(!0);this.image.setText(Blockly.pathToBlockly+"media/menu1.png");var a=this.getInputTargetBlock("GRIPPER_LEFT"),b=this.getInputTargetBlock("GRIPPER_RIGHT");this.getInput("GRIPPER_LEFT")&&this.removeInput("GRIPPER_LEFT");this.getInput("GRIPPER_RIGHT")&&this.removeInput("GRIPPER_RIGHT");var c=this.changemode.appendNoneMutationStatement("lowlevel_create_publisher"),c=new Blockly.ChangeMode(c);
c.appendNoneMutationOutput("text",1).setTitleValue("arm_1/gripper_controller/position_command","TEXT");c.appendNoneMutationOutput("ros_jointpositions_msg_type",2);c=this.changemode.appendNoneMutationStatement("lowlevel_ros_sleep");(new Blockly.ChangeMode(c)).appendNoneMutationOutput("math_number",1).setTitleValue("0.5","NUM");var c=this.changemode.appendNoneMutationStatement("lowlevel_publish"),c=(new Blockly.ChangeMode(c)).appendNoneMutationOutput("rosmessage_gripper_position_msg",1),d=new Blockly.ChangeMode(c);
d.reconnectOutputConnection(a,1);this.changemode.addToReconnectMonitor(c,1,1);d.reconnectOutputConnection(b,2);this.changemode.addToReconnectMonitor(c,2,2)},disposeChangeMode:function(){this.getInput("GRIPPER_LEFT")||this.appendValueInput("GRIPPER_LEFT").setAlign(Blockly.ALIGN_RIGHT).appendTitle("left gripper value");this.getInput("GRIPPER_RIGHT")||this.appendValueInput("GRIPPER_RIGHT").setAlign(Blockly.ALIGN_RIGHT).appendTitle("right gripper value");this.changemode.setChangeMode(!1);this.image.setText(Blockly.pathToBlockly+
"media/menu0.png")}};Blockly.Language.midlevel_reference_frame={helpUrl:null,init:function(){this.setColour(Blockly.LANG_MID_LEVEL_COLOUR);var a=new Blockly.FieldDropdown(this.OPERATORS);this.appendDummyInput().appendTitle("reference frame").appendTitle(a,"MODE");this.setOutput(!0,"String");this.setTooltip("Specify the frame of reference for an action, \ni.e. move the robot arm to a goal pose with a coordinate system origin at the end-effector, or the robot base, etc.\n---\nFields:\n* Reference frame (dropdown): Select the required frame of reference from the list.\n---\nOutput:\n* Return a ROS transform (tf) entry according to the choice, e.g. /base_link.\nThe output type is 'String'.")}};
Blockly.Language.midlevel_reference_frame.OPERATORS=[[Blockly.LANG_MID_LEVEL_REFERENCE_FRAME_BASE,"BASE"],[Blockly.LANG_MID_LEVEL_REFERENCE_FRAME_ARM,"ARM"],[Blockly.LANG_MID_LEVEL_REFERENCE_FRAME_GRIPPER,"GRIPPER"]];
Blockly.Language.midlevel_ros_move_base_twist={helpUrl:null,init:function(){this.setColour(Blockly.LANG_MID_LEVEL_COLOUR);this.appendDummyInput().appendTitle("move robot base (twist)");this.setPreviousStatement(!0);this.setNextStatement(!0);this.appendValueInput("L_X").setAlign(Blockly.ALIGN_RIGHT).setCheck("Number").appendTitle(Blockly.LANG_MID_LEVEL_MOVE_BASE_TWIST_LINEAR_X);this.appendValueInput("L_Y").setAlign(Blockly.ALIGN_RIGHT).setCheck("Number").appendTitle(Blockly.LANG_MID_LEVEL_MOVE_BASE_TWIST_LINEAR_Y);
this.appendValueInput("L_Z").setAlign(Blockly.ALIGN_RIGHT).setCheck("Number").appendTitle(Blockly.LANG_MID_LEVEL_MOVE_BASE_TWIST_LINEAR_Z);this.appendValueInput("A_X").setAlign(Blockly.ALIGN_RIGHT).setCheck("Number").appendTitle(Blockly.LANG_MID_LEVEL_MOVE_BASE_TWIST_ANGULAR_X);this.appendValueInput("A_Y").setAlign(Blockly.ALIGN_RIGHT).setCheck("Number").appendTitle(Blockly.LANG_MID_LEVEL_MOVE_BASE_TWIST_ANGULAR_Y);this.appendValueInput("A_Z").setAlign(Blockly.ALIGN_RIGHT).setCheck("Number").appendTitle(Blockly.LANG_MID_LEVEL_MOVE_BASE_TWIST_ANGULAR_Z);
this.setTooltip(Blockly.LANG_MID_LEVEL_MOVE_BASE_TWIST_TOOLTIP);this.setInputsInline(!1);this.setTooltip("Move the robot base by velocities. \n---\nInputs:\n* linear.x: Specify the velocity (m/s) in x direction.\nThe only allowed connection type is 'Number'.\n* linear.y: Specify the velocity (m/s) in y direction.\nThe only allowed connection type is 'Number'.\n* linear.z: Specify the velocity (m/s) in z direction.\nNote: This value is only required if the robot can fly, dive, or operate in weightlessness.\nThe only allowed connection type is 'Number'.\n* angular.x: Specify the velocity (rad/s) to rotate around the X-axis\nThe only allowed connection type is 'Number'.\nNote: This value is only required if the robot can fly, dive, or operate in weightlessness.\n* angular.y: Specify the velocity (rad/s) to rotate around the Y-axis\nThe only allowed connection type is 'Number'.\nNote: This value is only required if the robot can fly, dive, or operate in weightlessness.\n* angular.z: Specify the velocity (rad/s) to rotate around the Z-axis\nThe only allowed connection type is 'Number'.")}};
Blockly.Language.midlevel_move_arm_joint_position={helpUrl:null,init:function(){this.setColour(Blockly.LANG_MID_LEVEL_COLOUR);this.getInputJnt="JOINTS";this.changemode=new Blockly.ChangeMode(this,"INCHANGEMODE");this.image=new Blockly.FieldImage(Blockly.pathToBlockly+"media/menu0.png",12,12);var a=new Blockly.FieldCheckbox("FALSE",function(a){var c=this.sourceBlock_;!0==a?c.showChangeMode():!1==a&&c.disposeChangeMode()});this.appendDummyInput().appendTitle(this.image).appendTitle(a,"STATE").appendTitle("move robot arm to joint position");
this.appendValueInput(this.getInputJnt).appendTitle("<joint list>").setAlign(Blockly.ALIGN_RIGHT).setCheck(["JointAngles","Array"]);this.setPreviousStatement(!0);this.setNextStatement(!0);this.setTooltip("Move the robot arm to the specified joint configuration.\n---\nFields:\n* "+Blockly.ChangeModeTooltip+"\n---\nInputs:\n* Joint list (value input): Expected entries are \n[Joint 1 angle (radians), joint 2 angle (radians), ... joint N angle (radians)].\nThe only allowed connection type is 'JointAngles'.")},
mutationToDom:function(){var a=document.createElement("mutation"),b=this.getTitleValue("STATE");a.setAttribute("changemodestate",b);return a},domToMutation:function(a){"TRUE"==a.getAttribute("changemodestate")&&(this.getInput(this.changemode.appendInput)||this.appendStatementInput(this.changemode.appendInput),this.getInput(this.getInputJnt)&&this.removeInput(this.getInputJnt),this.image.setText(Blockly.pathToBlockly+"media/menu1.png"))},changeModeToDom:function(){var a=this.getTitleValue("STATE");
return this.changemode.changeModeToDom(a)},domToChangeMode:function(a){"TRUE"==a.getAttribute("changemodestate")&&this.changemode.domToChangeMode(a)},showChangeMode:function(){this.changemode.setChangeMode(!0);this.image.setText(Blockly.pathToBlockly+"media/menu1.png");var a=this.getInputTargetBlock(this.getInputJnt);this.getInput(this.getInputJnt)&&this.removeInput(this.getInputJnt);var b=this.changemode.appendNoneMutationStatement("lowlevel_create_publisher");b.setTitleValue("pub","VAR");b=new Blockly.ChangeMode(b);
b.appendNoneMutationOutput("text",1).setTitleValue("arm_controller_handler/position_command","TEXT");b.appendNoneMutationOutput("ros_jointstate_msg_type",2);b=this.changemode.appendNoneMutationStatement("lowlevel_ros_sleep");(new Blockly.ChangeMode(b)).appendNoneMutationOutput("math_number",1).setTitleValue("0.5","NUM");b=this.changemode.appendNoneMutationStatement("try_catch");b=new Blockly.ChangeMode(b);b.changeStatementInputTo("TRY");var c=b.appendNoneMutationStatement("variables_set");c.setTitleValue("numberOfJoints",
"VAR");(new Blockly.ChangeMode(c)).appendNoneMutationOutput("lowlevel_get_param",1).setTitleValue("NUMBER_ARM_JOINTS","MODE");c=b.appendNoneMutationStatement("variables_set");c.setTitleValue("armJointValueList","VAR");(new Blockly.ChangeMode(c)).reconnectOutputConnection(a,1);this.changemode.addToReconnectMonitor(c,1,1);a=b.appendNoneMutationStatement("variables_set");a.setTitleValue("jp","VAR");(new Blockly.ChangeMode(a)).appendNoneMutationOutput("ros_jointstate_msg",1);a=b.appendNoneMutationStatement("rosmessage_joint_state_msg_name");
a.setTitleValue("jp","VAR");a=new Blockly.ChangeMode(a);a.appendNoneMutationOutput("text",1).setTitleValue("arm_joint_","TEXT");a.appendNoneMutationOutput("variables_get",2).setTitleValue("numberOfJoints","VAR");a=b.appendNoneMutationStatement("rosmessage_joint_state_msg_position");a.setTitleValue("jp","VAR");a=new Blockly.ChangeMode(a);a.appendNoneMutationOutput("variables_get",1).setTitleValue("armJointValueList","VAR");a.appendNoneMutationOutput("variables_get",2).setTitleValue("numberOfJoints",
"VAR");a=b.appendNoneMutationStatement("lowlevel_publish");a.setTitleValue("pub","VAR");(new Blockly.ChangeMode(a)).appendNoneMutationOutput("variables_get",1).setTitleValue("jp","VAR");a=b.appendNoneMutationStatement("lowlevel_ros_log");a.setTitleValue("INFO","MODE");(new Blockly.ChangeMode(a)).appendNoneMutationOutput("text",1).setTitleValue("Move robot arm successful","TEXT");b.changeStatementInputTo("CATCH");b=b.appendNoneMutationStatement("lowlevel_ros_log");b.setTitleValue("ERROR","MODE");b=
(new Blockly.ChangeMode(b)).appendMutationOutput("text_join",1,[["itemsCount_",2]]);b=new Blockly.ChangeMode(b);b.appendNoneMutationOutput("text",1).setTitleValue("Move robot arm failed:","TEXT");b.appendNoneMutationOutput("variables_get",2).setTitleValue("e","VAR")},disposeChangeMode:function(){this.getInput(this.getInputJnt)||this.appendValueInput(this.getInputJnt).setAlign(Blockly.ALIGN_RIGHT).appendTitle("<joint list>").setAlign(Blockly.ALIGN_RIGHT).setCheck("JointAngles");this.changemode.setChangeMode(!1);
this.image.setText(Blockly.pathToBlockly+"media/menu0.png")}};Blockly.Language.midlevel_move_base_relative={helpUrl:null,init:function(){this.setColour(Blockly.LANG_MID_LEVEL_COLOUR);this.appendDummyInput().appendTitle("move robot base relative");this.appendValueInput("POSE").appendTitle("<6D pose>").setAlign(Blockly.ALIGN_RIGHT).setCheck("Pose6D");this.setPreviousStatement(!0);this.setNextStatement(!0);this.setTooltip("Move the robot base relative to its actual position.\nNote: The local coordinate system has the robot in its origin (origin: all values are zero). \n---\nInputs:\n* 6D pose (value input): The expected entry is a 6d pose  \nThe only allowed connection type is 'Pose6D'.")}};
Blockly.Language.midlevel_move_base_to_pose={helpUrl:null,init:function(){this.changemode=new Blockly.ChangeMode(this,"INCHANGEMODE");this.image=new Blockly.FieldImage(Blockly.pathToBlockly+"media/menu0.png",12,12);this.getInputPose="POSE";var a=new Blockly.FieldCheckbox("FALSE",function(a){var c=this.sourceBlock_;!0==a?c.showChangeMode():!1==a&&c.disposeChangeMode()});this.setColour(Blockly.LANG_MID_LEVEL_COLOUR);this.appendDummyInput().appendTitle(this.image).appendTitle(a,"STATE").appendTitle("move robot base to pose");
this.appendValueInput(this.getInputPose).appendTitle("<6D pose>").setAlign(Blockly.ALIGN_RIGHT).setCheck("Pose6D");this.setPreviousStatement(!0);this.setNextStatement(!0);this.setTooltip("Move the robot base to a specified 6D pose.\nNote that the pose is relative to the world (or the robots believe of the world) and not to the robot itself.\n---\nFields:\n* "+Blockly.ChangeModeTooltip+"\n---\nInputs:\n* 6D pose (value input): The expected entry is a 6d pose  \nThe only allowed connection type is 'Pose6D'.")},
mutationToDom:function(){var a=document.createElement("mutation"),b=this.getTitleValue("STATE");a.setAttribute("changemodestate",b);return a},domToMutation:function(a){"TRUE"==a.getAttribute("changemodestate")&&(this.getInput(this.changemode.appendInput)||this.appendStatementInput(this.changemode.appendInput),this.getInput(this.getInputPose)&&this.removeInput(this.getInputPose),this.image.setText(Blockly.pathToBlockly+"media/menu1.png"))},changeModeToDom:function(){var a=this.getTitleValue("STATE");
return this.changemode.changeModeToDom(a)},domToChangeMode:function(a){"TRUE"==a.getAttribute("changemodestate")&&this.changemode.domToChangeMode(a)},showChangeMode:function(){this.changemode.setChangeMode(!0);this.image.setText(Blockly.pathToBlockly+"media/menu1.png");var a=this.getInputTargetBlock(this.getInputPose);this.getInput(this.getInputPose)&&this.removeInput(this.getInputPose);var b=this.changemode.appendNoneMutationStatement("variables_set");b.setTitleValue("basePoseList","VAR");(new Blockly.ChangeMode(b)).reconnectOutputConnection(a,
1);this.changemode.addToReconnectMonitor(b,1,1);a=this.changemode.appendNoneMutationStatement("try_catch");a=new Blockly.ChangeMode(a,"TRY");b=a.appendNoneMutationStatement("variables_set");b.setTitleValue("quaternion","VAR");b=(new Blockly.ChangeMode(b)).appendNoneMutationOutput("lowlevel_quaternion_from_euler",1);(new Blockly.ChangeMode(b)).appendNoneMutationOutput("math_number",1);(new Blockly.ChangeMode(b)).appendNoneMutationOutput("math_number",2);b=(new Blockly.ChangeMode(b)).appendNoneMutationOutput("units_get_6dpose_element",
3);b.setTitleValue("YAW","MODE");(new Blockly.ChangeMode(b)).appendNoneMutationOutput("variables_get",1).setTitleValue("basePoseList","VAR");b=a.appendNoneMutationStatement("variables_set");b.setTitleValue("pose","VAR");var b=(new Blockly.ChangeMode(b)).appendNoneMutationOutput("rosmessage_base_pose_msg",1),b=new Blockly.ChangeMode(b),c=b.appendNoneMutationOutput("units_get_6dpose_element",1);c.setTitleValue("LIN_X","MODE");(new Blockly.ChangeMode(c)).appendNoneMutationOutput("variables_get",1).setTitleValue("basePoseList",
"VAR");c=b.appendNoneMutationOutput("units_get_6dpose_element",2);c.setTitleValue("LIN_Y","MODE");(new Blockly.ChangeMode(c)).appendNoneMutationOutput("variables_get",1).setTitleValue("basePoseList","VAR");b.appendNoneMutationOutput("math_number",3);b.appendNoneMutationOutput("variables_get",4).setTitleValue("quaternion","VAR");b=a.appendNoneMutationStatement("variables_set");b.setTitleValue("client","VAR");b=(new Blockly.ChangeMode(b)).appendNoneMutationOutput("action_simple_action_client",1);b.setTitleValue("/move_base",
"ACTION_SERVER_NAME");(new Blockly.ChangeMode(b)).appendNoneMutationOutput("action_move_base_action",1);b=a.appendNoneMutationStatement("action_client_wait_for_server");(new Blockly.ChangeMode(b)).appendNoneMutationOutput("variables_get",1).setTitleValue("client","VAR");b=a.appendNoneMutationStatement("action_client_send_goal");b=new Blockly.ChangeMode(b);b.appendNoneMutationOutput("variables_get",1).setTitleValue("client","VAR");b=b.appendNoneMutationOutput("lowlevel_move_base_goal",2);(new Blockly.ChangeMode(b)).appendNoneMutationOutput("variables_get",
1).setTitleValue("pose","VAR");b=a.appendNoneMutationStatement("action_client_wait_for_result");(new Blockly.ChangeMode(b)).appendNoneMutationOutput("variables_get",1).setTitleValue("client","VAR");a.changeStatementInputTo("CATCH");a=a.appendNoneMutationStatement("lowlevel_ros_log");a.setTitleValue("ERROR","MODE");(new Blockly.ChangeMode(a)).appendNoneMutationOutput("variables_get",1).setTitleValue("e","VAR")},disposeChangeMode:function(){this.getInput(this.getInputPose)||this.appendValueInput(this.getInputPose).appendTitle("<6D pose>").setAlign(Blockly.ALIGN_RIGHT).setCheck("Pose6D");
this.changemode.setChangeMode(!1);this.image.setText(Blockly.pathToBlockly+"media/menu0.png")}};
Blockly.Language.midlevel_ik_checker={helpUrl:null,init:function(){this.setColour(Blockly.LANG_MID_LEVEL_COLOUR);this.appendDummyInput().appendTitle("inverse kinematics checker").appendTitle("(").appendTitle(new Blockly.FieldDropdown(Blockly.CONFIG_IK_SOLVER),"MODE").appendTitle(")");this.appendValueInput("REF").appendTitle("frame of reference").setAlign(Blockly.ALIGN_RIGHT).setCheck("String");this.appendValueInput("POSE6D").appendTitle("6D pose").setAlign(Blockly.ALIGN_RIGHT).setCheck("Pose6D");this.setOutput(!0,
"Boolean");this.setTooltip("Determine if a cartesian pose can be reached.\n---\nFields:\n* Solver (dropdown): Select the algorithm to calculate the inverse kinematics from the list.\n---\nInputs:\n* 6D pose: Expected entries are \nx position (meters), y position (meters), z position (meters), angle around X-axis (radians), angle around Y-axis (radians), angle around Z-axis (radians)]\nThe only allowed connection type is 'Pose6D'.\n* Frame of reference: Any available frame.\nThe only allowed connection type is 'String'.\n---\nOutput:\n* If joint configuration available: True. Else: False.\nThe output type is 'Boolean'.")}};
Blockly.Language.midlevel_ik_solver={helpUrl:null,init:function(){this.setColour(Blockly.LANG_MID_LEVEL_COLOUR);this.appendDummyInput().appendTitle("inverse kinematics solver").appendTitle("(").appendTitle(new Blockly.FieldDropdown(Blockly.CONFIG_IK_SOLVER),"MODE").appendTitle(")");this.appendValueInput("REF").appendTitle("frame of reference").setAlign(Blockly.ALIGN_RIGHT).setCheck("String");this.appendValueInput("POSE6D").setAlign(Blockly.ALIGN_RIGHT).appendTitle("6D pose").setCheck("Pose6D");this.setOutput(!0,
["Array","JointAngles"]);this.setTooltip("Calculate the joint positions (angles) depending on a given cartesian pose and a frame of reference.\n---\nFields:\n* Solver (dropdown): Select the algorithm to calculate the inverse kinematics from the list.\n---\nInputs:\n* 6D pose: Expected entries are \nx position (meters), y position (meters), z position (meters), angle around X-axis (radians), angle around Y-axis (radians), angle around Z-axis (radians)]\nThe only allowed connection type is 'Pose6D'.\n* Frame of reference: Any available frame.\nThe only allowed connection type is 'String'.\n---\nOutput:\n* Return a set of joint angles [joint angle 1 (radians), joint angle 2 (radians, joint angle N (radians)].\nThe output types are 'JointAngles' and 'Array'.")}};
Blockly.Language.midlevel_fk_solver={helpUrl:null,init:function(){this.variableName="kinematics_solver";this.setColour(Blockly.LANG_MID_LEVEL_COLOUR);this.appendDummyInput().appendTitle("forward kinematics solver");this.appendValueInput("JOINTS").appendTitle("<joint list>").setAlign(Blockly.ALIGN_RIGHT).setCheck("JointAngles");this.setOutput(!0,["Array","Pose6D"]);this.setTooltip("According to a set of joint angles calculate the resulting cartesian pose (6D pose).\n---\nInputs:\n* Joint list (value input): Expected entries are [Joint angle 1 (radians), joint angle 2 (radians), ... , joint angle N (radians)].\nThe only allowed connection type is 'JointAngles'.\n---\nOutput:\n* Return a 6D pose (x y z position in meters and rotation around X-, Y-, and Z-axis in radians).\nThe output types are 'Pos6d' and 'Array'.")},
getVars:function(){return[this.variableName]}};
Blockly.Language.midlevel_mapping={helpUrl:null,init:function(){this.setColour(Blockly.LANG_MID_LEVEL_COLOUR);this.dropdown=new Blockly.FieldDropdown([["start","START"],["store","STORE"],["stop","STOP"]],function(a){var b=this.sourceBlock_;"STORE"==a?b.getInput("FILE")||b.appendValueInput("FILE").appendTitle("to file").setCheck("String"):b.getInput("FILE")&&b.removeInput("FILE")});this.appendDummyInput("MAP").appendTitle("mapping:").appendTitle(this.dropdown,"MODE");this.setPreviousStatement(!0);
this.setNextStatement(!0);this.setInputsInline(!0);this.setTooltip("Start, store or stop mapping.\n---\nFields:\n* mapping (dropdown): Select an operation from the list.\nNote: Whenever the store entry is chosen an additional value input area occurs (more information below).\n---\nInputs:\n* File (value input): This entry is only visible, when the option store is chosen. The file name can be specified.\nThe only allowed connection type is 'String'.")},mutationToDom:function(){var a=document.createElement("mutation"),
b=this.getTitleValue("MODE");a.setAttribute("dropdown",b);return a},domToMutation:function(a){"STORE"==a.getAttribute("dropdown")&&(this.getInput("FILE")||this.appendValueInput("FILE").appendTitle("to file").setCheck("String"))}};Blockly.Language.midlevel_read_map_location={helpUrl:null,init:function(){this.setColour(Blockly.LANG_MID_LEVEL_COLOUR);this.appendDummyInput().appendTitle("get map location");this.setOutput(!0,"Pose6D");this.setTooltip("Provide the global (perhaps guessed or inaccurate) global location of the robot within the map.\n---\nOutput:\n* Return a 6D pose.\nThe only allowed output type is 'Pose6D'.")}};
Blockly.Language.midlevel_check_wall={helpUrl:null,init:function(){this.setColour(Blockly.LANG_MID_LEVEL_COLOUR);this.changemode=new Blockly.ChangeMode(this,"INCHANGEMODE");this.image=new Blockly.FieldImage(Blockly.pathToBlockly+"media/menu0.png",12,12);var a=new Blockly.FieldCheckbox("FALSE",function(a){var c=this.sourceBlock_;!0==a?c.showChangeMode():!1==a&&c.disposeChangeMode()});this.setOutput(!0,"Boolean");this.dropdown=new Blockly.FieldDropdown(Blockly.CONFIG_WALL);this.appendDummyInput().appendTitle(this.image).appendTitle(a,
"STATE").appendTitle("check for a wall");this.appendValueInput("DISTANCE").appendTitle("to the").appendTitle(this.dropdown,"MODE").appendTitle("with max. distance (m) of").setCheck("Number");this.setInputsInline(!0)},mutationToDom:function(){var a=document.createElement("mutation"),b=this.getTitleValue("STATE");a.setAttribute("changemodestate",b);this.dropdownValue&&a.setAttribute("dropdownstate",this.dropdownValue);return a},domToMutation:function(a){"TRUE"==a.getAttribute("changemodestate")&&(this.getInput(this.changemode.appendInput)||
this.appendValueInput(this.changemode.appendInput),this.getInput("DISTANCE")&&(this.removeInput("DISTANCE"),delete this.dropdown),this.image.setText(Blockly.pathToBlockly+"media/menu1.png"));if(a=a.getAttribute("dropdownstate"))this.dropdownValue=a},changeModeToDom:function(){var a=this.getTitleValue("STATE");return this.changemode.changeModeToDom(a)},domToChangeMode:function(a){"TRUE"==a.getAttribute("changemodestate")&&this.changemode.domToChangeMode(a)},showChangeMode:function(){this.setInputsInline(!1);
this.changemode.setChangeMode(!0,"output");this.image.setText(Blockly.pathToBlockly+"media/menu1.png");var a=this.getInputTargetBlock("DISTANCE"),b=Blockly["CONFIG_WALL_ANGLE_"+this.getTitleValue("MODE")];this.getInput("DISTANCE")&&(this.removeInput("DISTANCE"),this.dropdownValue=this.dropdown.getValue(),delete this.dropdown);var c=this.changemode.appendNoneMutationOutput("lowlevel_is_wall",1),d=new Blockly.ChangeMode(c);d.appendNoneMutationOutput("math_number",1).setTitleValue(b,"NUM");d.reconnectOutputConnection(a,
2);this.changemode.addToReconnectMonitor(c,2,1)},disposeChangeMode:function(){this.getInput("DISTANCE")||(this.dropdown=new Blockly.FieldDropdown(Blockly.CONFIG_WALL),this.dropdownValue&&this.dropdown.setValue(this.dropdownValue),this.appendValueInput("DISTANCE").appendTitle("to the").appendTitle(this.dropdown,"MODE").appendTitle("with max. distance (m) of").setCheck("Number"),this.setInputsInline(!0));this.setInputsInline(!0);this.moveInputBefore("DISTANCE",this.changemode.appendInput);this.changemode.setChangeMode(!1,
"output");this.image.setText(Blockly.pathToBlockly+"media/menu0.png")}};Blockly.Language.variables_get={category:null,helpUrl:Blockly.LANG_VARIABLES_GET_HELPURL,init:function(){this.setColour(330);this.appendDummyInput().appendTitle(Blockly.LANG_VARIABLES_GET_TITLE).appendTitle(new Blockly.FieldVariable(Blockly.LANG_VARIABLES_GET_ITEM),"VAR");this.setOutput(!0);this.setTooltip(Blockly.LANG_VARIABLES_GET_TOOLTIP)},getVars:function(){return[this.getTitleValue("VAR")]},renameVar:function(a,b){Blockly.Names.equals(a,this.getTitleValue("VAR"))&&this.setTitleValue(b,"VAR")},
contextMenuMsg_:Blockly.LANG_VARIABLES_GET_CREATE_SET,contextMenuType_:"variables_set",customContextMenu:function(a){var b={enabled:!0},c=this.getTitleValue("VAR");b.text=this.contextMenuMsg_.replace("%1",c);c=goog.dom.createDom("title",null,c);c.setAttribute("name","VAR");c=goog.dom.createDom("block",null,c);c.setAttribute("type",this.contextMenuType_);b.callback=Blockly.ContextMenu.callbackFactory(this,c);a.push(b)}};
Blockly.Language.variables_set={category:null,helpUrl:Blockly.LANG_VARIABLES_SET_HELPURL,init:function(){this.setColour(330);this.appendValueInput("VALUE").appendTitle(Blockly.LANG_VARIABLES_SET_TITLE).appendTitle(new Blockly.FieldVariable(Blockly.LANG_VARIABLES_SET_ITEM),"VAR");this.setPreviousStatement(!0);this.setNextStatement(!0);this.setTooltip(Blockly.LANG_VARIABLES_SET_TOOLTIP)},getVars:function(){return[this.getTitleValue("VAR")]},renameVar:function(a,b){Blockly.Names.equals(a,this.getTitleValue("VAR"))&&
this.setTitleValue(b,"VAR")},contextMenuMsg_:Blockly.LANG_VARIABLES_SET_CREATE_GET,contextMenuType_:"variables_get",customContextMenu:Blockly.Language.variables_get.customContextMenu};Blockly.Language.highlevel_application={helpUrl:null,init:function(){this.setColour(Blockly.LANG_HIGH_LEVEL_COLOUR);this.appendDummyInput("APP_FRAME").appendTitle("robot application frame");this.appendStatementInput("APP_STACK");this.setPreviousStatement(!1);this.setNextStatement(!1);this.setTooltip("Application Frame: \nEach and every application should used this block exactly once. It provides basic functionalities. \nNote: If used more than once a warning occurs and informs you about the fact.\n---\nInputs:\n* unlabeled (statement input): Content of the main function.");
this.pkg_name=Blockly.EDUFILL_ROS_PKG_NAME},onchange:function(){var a=this.workspace&&this.workspace.topBlocks_,b=0;if(a)for(var c=0;c<a.length;c++)"highlevel_application"!=a[c].type&&"lowlevel_package_main"!=a[c].type||b++;1<b?this.setWarningText('This block should not be used more than once and not at the same time as the "main in ... package" block'):this.setWarningText(null)}};
Blockly.Language.highlevel_move_base_to_goal={helpUrl:null,init:function(){this.setColour(Blockly.LANG_HIGH_LEVEL_COLOUR);this.dropdown=new Blockly.FieldDropdown(Blockly.CONFIG_PRE_DEF_POSITIONS);this.inputNameDropdown="DROPDOWN";this.changemode=new Blockly.ChangeMode(this,"INCHANGEMODE");this.image=new Blockly.FieldImage(Blockly.pathToBlockly+"media/menu0.png",12,12);var a=new Blockly.FieldCheckbox("FALSE",function(a){var c=this.sourceBlock_;!0==a?c.showChangeMode():!1==a&&c.disposeChangeMode()});
this.appendDummyInput().appendTitle(this.image).appendTitle(a,"STATE").appendTitle("move robot base to pose");this.appendDummyInput(this.inputNameDropdown).appendTitle(this.dropdown,"MODE");this.setInputsInline(!0);this.setPreviousStatement(!0);this.setNextStatement(!0);this.setTooltip("Move the robot base (platform) to a global goal pose represented by a label\n---\nFields:\n* "+Blockly.ChangeModeTooltip+"\n* Pose (dropdown): Select a desired global goal pose from the list (The location can be seen within the map).")},
mutationToDom:function(){var a=document.createElement("mutation"),b=this.getTitleValue("STATE");a.setAttribute("changemodestate",b);this.dropdownValue&&a.setAttribute("dropdownstate",this.dropdownValue);return a},domToMutation:function(a){"TRUE"==a.getAttribute("changemodestate")&&(this.getInput(this.changemode.appendInput)||this.appendStatementInput(this.changemode.appendInput),this.getInput(this.inputNameDropdown)&&(this.removeInput(this.inputNameDropdown),delete this.dropdown),this.image.setText(Blockly.pathToBlockly+
"media/menu1.png"));if(a=a.getAttribute("dropdownstate"))this.dropdownValue=a},changeModeToDom:function(){var a=this.getTitleValue("STATE");return this.changemode.changeModeToDom(a)},domToChangeMode:function(a){"TRUE"==a.getAttribute("changemodestate")&&this.changemode.domToChangeMode(a)},showChangeMode:function(){this.changemode.setChangeMode(!0);this.image.setText(Blockly.pathToBlockly+"media/menu1.png");this.getInput(this.inputNameDropdown)&&(this.removeInput(this.inputNameDropdown),this.dropdownValue=
this.dropdown.getValue(),delete this.dropdown);var a=this.changemode.appendNoneMutationStatement("midlevel_move_base_to_pose");a.setTitleValue("FALSE","STATE");(new Blockly.ChangeMode(a)).appendNoneMutationOutput("lowlevel_get_param",1).setTitleValue(this.dropdownValue,"MODE")},disposeChangeMode:function(){this.getInput(this.inputNameDropdown)||(this.dropdown=new Blockly.FieldDropdown(Blockly.CONFIG_PRE_DEF_POSITIONS),this.dropdownValue&&this.dropdown.setValue(this.dropdownValue),this.appendDummyInput(this.inputNameDropdown).appendTitle(this.dropdown,
"MODE"));this.changemode.setChangeMode(!1);this.image.setText(Blockly.pathToBlockly+"media/menu0.png")}};
Blockly.Language.highlevel_move_base_distance={helpUrl:null,init:function(){this.setColour(Blockly.LANG_HIGH_LEVEL_COLOUR);this.titleText="distance (m) or angle (rad)";this.dropdown=new Blockly.FieldDropdown(Blockly.CONFIG_BASE_DIRECTION);this.inputNameDropdown="DISTANCE";this.appendDummyInput().appendTitle("move robot base");this.appendValueInput("DURATION").setAlign(Blockly.ALIGN_RIGHT).appendTitle("direction").appendTitle(this.dropdown,"MODE").appendTitle(this.titleText).setCheck("Number");this.setPreviousStatement(!0);
this.setNextStatement(!0)}};
Blockly.Language.highlevel_move_base_to_direction={helpUrl:null,init:function(){this.setColour(Blockly.LANG_HIGH_LEVEL_COLOUR);this.dropdown=new Blockly.FieldDropdown(Blockly.CONFIG_BASE_DIRECTION);this.inputNameDropdown="DURATION";new Blockly.FieldDropdown([["","EMPTY"]]);this.changemode=new Blockly.ChangeMode(this,"INCHANGEMODE");this.image=new Blockly.FieldImage(Blockly.pathToBlockly+"media/menu0.png",12,12);var a=new Blockly.FieldCheckbox("FALSE",function(a){var c=this.sourceBlock_;!0==a?c.showChangeMode():
!1==a&&c.disposeChangeMode()});this.appendDummyInput().appendTitle(this.image).appendTitle(a,"STATE").appendTitle("move robot base");this.appendValueInput("DURATION").setAlign(Blockly.ALIGN_RIGHT).appendTitle("direction").appendTitle(this.dropdown,"MODE").appendTitle("duration (sec)").setCheck("Number");this.setPreviousStatement(!0);this.setNextStatement(!0);this.setTooltip("Move or turn the robot for a defined amount of time (in seconds).\nNote: The movement is a blocking operation so that no other operations can be performed until the movement has been finished.\n---\nFields:\n* "+
Blockly.ChangeModeTooltip+"\n* Direction (dropdown):Select a direction of movement from the list.\n* Duration (value input): Attach a duration is seconds. The only allowed connection type is 'Number'.")},mutationToDom:function(){var a=document.createElement("mutation"),b=this.getTitleValue("STATE");a.setAttribute("changemodestate",b);this.dropdownValue&&a.setAttribute("dropdownstate",this.dropdownValue);return a},domToMutation:function(a){"TRUE"==a.getAttribute("changemodestate")&&(this.getInput(this.changemode.appendInput)||
this.appendStatementInput(this.changemode.appendInput),this.getInput(this.inputNameDropdown)&&(this.removeInput(this.inputNameDropdown),delete this.dropdown),this.image.setText(Blockly.pathToBlockly+"media/menu1.png"));if(a=a.getAttribute("dropdownstate"))this.dropdownValue=a},changeModeToDom:function(){var a=this.getTitleValue("STATE");return this.changemode.changeModeToDom(a)},domToChangeMode:function(a){"TRUE"==a.getAttribute("changemodestate")&&this.changemode.domToChangeMode(a)},showChangeMode:function(){this.changemode.setChangeMode(!0);
this.image.setText(Blockly.pathToBlockly+"media/menu1.png");for(var a=this.getInputTargetBlock(this.inputNameDropdown),b=[],c=Blockly["CONFIG_BASE_DIRECTION_"+this.getTitleValue("MODE")],d=Blockly.MoveRobotBaseDirectionString,e=0;e<d.length;e++)if(d[e][0]==c){b=d[e][1];break}this.getInput(this.inputNameDropdown)&&(this.removeInput(this.inputNameDropdown),this.dropdownValue=this.dropdown.getValue(),delete this.dropdown);c=this.changemode.appendNoneMutationStatement("variables_set");c.setTitleValue("duration",
"VAR");(new Blockly.ChangeMode(c)).reconnectOutputConnection(a,1);this.changemode.addToReconnectMonitor(c,1,1);a=this.changemode.appendNoneMutationStatement("variables_set");a.setTitleValue("init_time","VAR");(new Blockly.ChangeMode(a)).appendNoneMutationOutput("lowlevel_get_ros_time",1);a=this.changemode.appendNoneMutationStatement("controls_whileUntil");a.setTitleValue("WHILE","MODE");a=new Blockly.ChangeMode(a);c=a.appendNoneMutationOutput("logic_compare",1);c.setTitleValue("LTE","OP");c=new Blockly.ChangeMode(c);
c.appendNoneMutationOutput("variables_get",1).setTitleValue("init_time","VAR");c.appendNoneMutationOutput("math_number",2).setTitleValue("0","NUM");a.changeStatementInputTo("DO");a=a.appendNoneMutationStatement("variables_set");a.setTitleValue("init_time","VAR");(new Blockly.ChangeMode(a)).appendNoneMutationOutput("lowlevel_get_ros_time",1);a=this.changemode.appendNoneMutationStatement("variables_set");a.setTitleValue("now","VAR");(new Blockly.ChangeMode(a)).appendNoneMutationOutput("lowlevel_get_ros_time",
1);a=this.changemode.appendNoneMutationStatement("controls_whileUntil");a.setTitleValue("WHILE","MODE");a=new Blockly.ChangeMode(a);c=a.appendNoneMutationOutput("logic_compare",1);c.setTitleValue("LT","OP");c=new Blockly.ChangeMode(c);c.appendNoneMutationOutput("lowlevel_get_ros_time",1);c=c.appendNoneMutationOutput("math_arithmetic",2);c.setTitleValue("ADD","OP");c=new Blockly.ChangeMode(c);c.appendNoneMutationOutput("variables_get",1).setTitleValue("now","VAR");c.appendNoneMutationOutput("variables_get",
2).setTitleValue("duration","VAR");a.changeStatementInputTo("DO");a=a.appendNoneMutationStatement("midlevel_ros_move_base_twist");a=new Blockly.ChangeMode(a);a.appendNoneMutationOutput("math_number",1).setTitleValue(b[0],"NUM");a.appendNoneMutationOutput("math_number",2).setTitleValue(b[1],"NUM");a.appendNoneMutationOutput("math_number",3).setTitleValue(b[2],"NUM");a.appendNoneMutationOutput("math_number",4).setTitleValue(b[3],"NUM");a.appendNoneMutationOutput("math_number",5).setTitleValue(b[4],
"NUM");a.appendNoneMutationOutput("math_number",6).setTitleValue(b[5],"NUM");b=this.changemode.appendNoneMutationStatement("midlevel_ros_move_base_twist");b=new Blockly.ChangeMode(b);b.appendNoneMutationOutput("math_number",1).setTitleValue("0","NUM");b.appendNoneMutationOutput("math_number",2).setTitleValue("0","NUM");b.appendNoneMutationOutput("math_number",3).setTitleValue("0","NUM");b.appendNoneMutationOutput("math_number",4).setTitleValue("0","NUM");b.appendNoneMutationOutput("math_number",5).setTitleValue("0",
"NUM");b.appendNoneMutationOutput("math_number",6).setTitleValue("0","NUM")},disposeChangeMode:function(){this.getInput(this.inputNameDropdown)||(this.dropdown=new Blockly.FieldDropdown(Blockly.CONFIG_BASE_DIRECTION),this.dropdownValue&&this.dropdown.setValue(this.dropdownValue),this.appendValueInput(this.inputNameDropdown).setAlign(Blockly.ALIGN_RIGHT).appendTitle("direction").appendTitle(this.dropdown,"MODE").appendTitle("duration (sec)"));this.changemode.setChangeMode(!1);this.image.setText(Blockly.pathToBlockly+
"media/menu0.png")}};
Blockly.Language.highlevel_move_gripper_string={helpUrl:null,init:function(){this.setColour(Blockly.LANG_HIGH_LEVEL_COLOUR);this.dropdown=new Blockly.FieldDropdown(Blockly.CONFIG_FINGER_POS);this.changemode=new Blockly.ChangeMode(this,"INCHANGEMODE");this.inputNameDropdown="DROPDOWN";this.image=new Blockly.FieldImage(Blockly.pathToBlockly+"media/menu0.png",12,12);var a=new Blockly.FieldCheckbox("FALSE",function(a){var c=this.sourceBlock_;!0==a?c.showChangeMode():!1==a&&c.disposeChangeMode()});this.appendDummyInput().appendTitle(this.image).appendTitle(a,
"STATE").appendTitle("move fingers");this.appendDummyInput(this.inputNameDropdown).appendTitle(this.dropdown,"MODE");this.setPreviousStatement(!0);this.setNextStatement(!0);this.setInputsInline(!0);this.setTooltip("Perform grasp and release actions with the robot fingers.\n---\nFields:\n* "+Blockly.ChangeModeTooltip+"\n* Finger movement (dropdown): Select a finger movement from the list")},mutationToDom:function(){var a=document.createElement("mutation"),b=this.getTitleValue("STATE");a.setAttribute("changemodestate",
b);this.dropdownValue&&a.setAttribute("dropdownstate",this.dropdownValue);return a},domToMutation:function(a){"TRUE"==a.getAttribute("changemodestate")&&(this.getInput(this.changemode.appendInput)||this.appendStatementInput(this.changemode.appendInput),this.getInput(this.inputNameDropdown)&&(this.removeInput(this.inputNameDropdown),delete this.dropdown),this.image.setText(Blockly.pathToBlockly+"media/menu1.png"));if(a=a.getAttribute("dropdownstate"))this.dropdownValue=a},changeModeToDom:function(){var a=
this.getTitleValue("STATE");return this.changemode.changeModeToDom(a)},domToChangeMode:function(a){"TRUE"==a.getAttribute("changemodestate")&&this.changemode.domToChangeMode(a)},showChangeMode:function(){this.changemode.setChangeMode(!0);this.image.setText(Blockly.pathToBlockly+"media/menu1.png");this.getInput(this.inputNameDropdown)&&(this.removeInput(this.inputNameDropdown),this.dropdownValue=this.dropdown.getValue(),delete this.dropdown);var a=this.changemode.appendNoneMutationStatement("try_catch");
a.setTitleValue("e","VAR");a=new Blockly.ChangeMode(a);a.changeStatementInputTo("TRY");var b=a.appendNoneMutationStatement("variables_set");b.setTitleValue("gripper_values","VAR");(new Blockly.ChangeMode(b)).appendNoneMutationOutput("lowlevel_get_param",1).setTitleValue("OPEN","MODE");b=a.appendNoneMutationStatement("midlevel_move_gripper");b.setTitleValue("FALSE","STATE");var b=new Blockly.ChangeMode(b),c=b.appendNoneMutationOutput("lists_getIndex",1);c.setTitleValue("GET","MODE");c.setTitleValue("FROM_START",
"WHERE");c=new Blockly.ChangeMode(c);c.appendNoneMutationOutput("variables_get",1).setTitleValue("gripper_values","VAR");c.appendNoneMutationOutput("math_number",2).setTitleValue("1","NUM");b=b.appendNoneMutationOutput("lists_getIndex",2);b.setTitleValue("GET","MODE");b.setTitleValue("FROM_START","WHERE");b=new Blockly.ChangeMode(b);b.appendNoneMutationOutput("variables_get",1).setTitleValue("gripper_values","VAR");b.appendNoneMutationOutput("math_number",2).setTitleValue("2","NUM");a.changeStatementInputTo("CATCH");
a=a.appendNoneMutationStatement("lowlevel_ros_log");a.setTitleValue("ERROR","MODE");(new Blockly.ChangeMode(a)).appendNoneMutationOutput("variables_get",1).setTitleValue("e","VAR")},disposeChangeMode:function(){this.getInput(this.inputNameDropdown)||(this.dropdown=new Blockly.FieldDropdown(Blockly.CONFIG_FINGER_POS),this.dropdownValue&&this.dropdown.setValue(this.dropdownValue),this.appendDummyInput(this.inputNameDropdown).appendTitle(this.dropdown,"MODE"));this.changemode.setChangeMode(!1);this.image.setText(Blockly.pathToBlockly+
"media/menu0.png")}};
Blockly.Language.highlevel_move_arm_joint_string={helpUrl:null,init:function(){this.setColour(Blockly.LANG_HIGH_LEVEL_COLOUR);this.dropdown=new Blockly.FieldDropdown(Blockly.CONFIG_PRE_DEF_ARM_POS);this.inputNameDropdown="DROPDOWN";this.changemode=new Blockly.ChangeMode(this,"INCHANGEMODE");this.image=new Blockly.FieldImage(Blockly.pathToBlockly+"media/menu0.png",12,12);var a=new Blockly.FieldCheckbox("FALSE",function(a){var c=this.sourceBlock_;!0==a?c.showChangeMode():!1==a&&c.disposeChangeMode()});
this.appendDummyInput().appendTitle(this.image).appendTitle(a,"STATE").appendTitle("move robot arm to");this.appendDummyInput(this.inputNameDropdown).appendTitle(this.dropdown,"MODE");this.setPreviousStatement(!0);this.setNextStatement(!0);this.setInputsInline(!0);this.setTooltip("Move the robot arm to a predefined position.\nNote: The arm does neither follow a predefined path nor perform a collision check, so that it might bump into obstacles.\n---\nFields:\n* "+Blockly.ChangeModeTooltip+"\n* Arm movement (dropdown): Select an arm position from the list.")},
mutationToDom:function(){var a=document.createElement("mutation"),b=this.getTitleValue("STATE");a.setAttribute("changemodestate",b);this.dropdownValue&&a.setAttribute("dropdownstate",this.dropdownValue);return a},domToMutation:function(a){"TRUE"==a.getAttribute("changemodestate")&&(this.getInput(this.changemode.appendInput)||this.appendStatementInput(this.changemode.appendInput),this.getInput(this.inputNameDropdown)&&(this.removeInput(this.inputNameDropdown),delete this.dropdown),this.image.setText(Blockly.pathToBlockly+
"media/menu1.png"));if(a=a.getAttribute("dropdownstate"))this.dropdownValue=a},changeModeToDom:function(){var a=this.getTitleValue("STATE");return this.changemode.changeModeToDom(a)},domToChangeMode:function(a){"TRUE"==a.getAttribute("changemodestate")&&this.changemode.domToChangeMode(a)},showChangeMode:function(){this.changemode.setChangeMode(!0);this.image.setText(Blockly.pathToBlockly+"media/menu1.png");this.getInput(this.inputNameDropdown)&&(this.removeInput(this.inputNameDropdown),this.dropdownValue=
this.dropdown.getValue(),delete this.dropdown);var a=this.changemode.appendNoneMutationStatement("midlevel_move_arm_joint_position");a.setTitleValue("FALSE","STATE");(new Blockly.ChangeMode(a)).appendNoneMutationOutput("lowlevel_get_param",1).setTitleValue(this.dropdownValue,"MODE")},disposeChangeMode:function(){this.getInput(this.inputNameDropdown)||(this.dropdown=new Blockly.FieldDropdown(Blockly.CONFIG_PRE_DEF_ARM_POS),this.dropdownValue&&this.dropdown.setValue(this.dropdownValue),this.appendDummyInput(this.inputNameDropdown).appendTitle(this.dropdown,
"MODE"));this.changemode.setChangeMode(!1);this.image.setText(Blockly.pathToBlockly+"media/menu0.png")}};
Blockly.Language.highlevel_move_arm_through_ik={helpUrl:null,init:function(){this.setColour(Blockly.LANG_HIGH_LEVEL_COLOUR);this.changemode=new Blockly.ChangeMode(this,"INCHANGEMODE");this.image=new Blockly.FieldImage(Blockly.pathToBlockly+"media/menu0.png",12,12);var a=new Blockly.FieldCheckbox("FALSE",function(a){var c=this.sourceBlock_;!0==a?c.showChangeMode():!1==a&&c.disposeChangeMode()});this.appendDummyInput().appendTitle(this.image).appendTitle(a,"STATE").appendTitle("move robot arm to");
this.appendValueInput("POSE6D").appendTitle("6D pose").setAlign(Blockly.ALIGN_RIGHT).setCheck(["Pose6D","Array"]);this.setOutput(!0,"Boolean");this.setTooltip("Move robot arm to a cartesian pose.\nNote: No obstacle avoidance is implemented yet.\n---\nFields:\n* "+Blockly.ChangeModeTooltip+"\n---\nInputs:\n* 6D pose (value input): xyz cartesian position and orientation (roll pitch yaw). \nA list with six entries is required, but the connection type is only to restrict to 'Array' (any list length is possible).\n---\nOutput:\n* If succeeded: True. Else: False.The output type is 'Boolean'.")},
mutationToDom:function(){var a=document.createElement("mutation"),b=this.getTitleValue("STATE");a.setAttribute("changemodestate",b);return a},domToMutation:function(a){"TRUE"==a.getAttribute("changemodestate")&&(this.getInput("POSE6D")&&this.removeInput("POSE6D"),this.getInput(this.changemode.appendInput)||this.appendValueInput(this.changemode.appendInput),this.image.setText(Blockly.pathToBlockly+"media/menu1.png"))},changeModeToDom:function(){var a=this.getTitleValue("STATE");return this.changemode.changeModeToDom(a)},
domToChangeMode:function(a){"TRUE"==a.getAttribute("changemodestate")&&this.changemode.domToChangeMode(a)},showChangeMode:function(){this.changemode.setChangeMode(!0,"output");this.image.setText(Blockly.pathToBlockly+"media/menu1.png");var a=this.getInputTargetBlock("POSE6D");this.getInput("POSE6D")&&this.removeInput("POSE6D");var b=this.changemode.createProcedure(!0,[["arguments_",["pose6D","frame_of_reference"]]]),c=b[0],b=b[1],d=Blockly.Procedures.findLegalName("move_robot_arm_procedure",c);c.setTitleValue(d,
"NAME");this.changemode.addToProcedureMonitor(d);this.changemode.appendProcedureCall(b,1);d=new Blockly.ChangeMode(b);d.reconnectOutputConnection(a,1);this.changemode.addToReconnectMonitor(b,1,1);d.appendNoneMutationOutput("midlevel_reference_frame",2).setTitleValue("ARM","MODE");a=new Blockly.ChangeMode(c,"STACK");c=a.appendMutationStatement("controls_if",[["elseifCount_",0],["elseCount_",1]]);c=new Blockly.ChangeMode(c,"DO0");b=c.appendNoneMutationOutput("midlevel_ik_checker",1);b=new Blockly.ChangeMode(b);
b.appendNoneMutationOutput("variables_get",1).setTitleValue("frame_of_reference","VAR");b.appendNoneMutationOutput("variables_get",2).setTitleValue("pose6D","VAR");b=c.appendNoneMutationStatement("variables_set");b.setTitleValue("joint_angles","VAR");b=(new Blockly.ChangeMode(b)).appendNoneMutationOutput("midlevel_ik_solver",1);b=new Blockly.ChangeMode(b);b.appendNoneMutationOutput("variables_get",1).setTitleValue("frame_of_reference","VAR");b.appendNoneMutationOutput("variables_get",2).setTitleValue("pose6D",
"VAR");b=c.appendNoneMutationStatement("midlevel_move_arm_joint_position");(new Blockly.ChangeMode(b)).appendNoneMutationOutput("variables_get",1).setTitleValue("joint_angles","VAR");b=c.appendNoneMutationStatement("variables_set");b.setTitleValue("ik_result","VAR");b=new Blockly.ChangeMode(b);b.appendNoneMutationOutput("logic_boolean",1).setTitleValue("TRUE","BOOL");c.changeStatementInputTo("ELSE");c=c.appendNoneMutationStatement("variables_set");c.setTitleValue("ik_result","VAR");b=new Blockly.ChangeMode(c);
b.appendNoneMutationOutput("logic_boolean",1).setTitleValue("FALSE","BOOL");a.appendNoneMutationOutput("variables_get",1).setTitleValue("ik_result","VAR")},disposeChangeMode:function(){this.getInput("POSE6D")||this.appendValueInput("POSE6D").appendTitle("6D pose").setAlign(Blockly.ALIGN_RIGHT).setCheck(["Pose6D","Array"]);this.moveInputBefore("POSE6D",this.changemode.appendInput);this.changemode.setChangeMode(!1,"output");this.image.setText(Blockly.pathToBlockly+"media/menu0.png")},getVars:function(){return[this.getTitleValue("VAR")]},
renameVar:function(a,b){Blockly.Names.equals(a,this.getTitleValue("VAR"))&&this.setTitleValue(b,"VAR")}};
Blockly.Language.highlevel_find_cube={helpUrl:null,init:function(){this.setColour(Blockly.LANG_HIGH_LEVEL_COLOUR);var a=new Blockly.FieldDropdown(Blockly.CONFIG_CUBE_COLORS);this.appendDummyInput().appendTitle("find").appendTitle(a,"MODE").appendTitle("cube");this.setInputsInline(!0);this.setTooltip("Detect a cube with the specified color.\n---\nFields:\ncolor (dropdown): Select a color from the list.\n---\nOutput:\nThe output is a ROS based message type (geometry_msgs/PoseStamped).\nThe output type is not restricted yet.");this.setOutput(!0,
null)}};
Blockly.Language.highlevel_check_wall={helpUrl:null,init:function(){this.setColour(Blockly.LANG_HIGH_LEVEL_COLOUR);this.changemode=new Blockly.ChangeMode(this,"INCHANGEMODE");this.image=new Blockly.FieldImage(Blockly.pathToBlockly+"media/menu0.png",12,12);var a=new Blockly.FieldCheckbox("FALSE",function(a){var c=this.sourceBlock_;!0==a?c.showChangeMode():!1==a&&c.disposeChangeMode()});this.setOutput(!0,"Boolean");this.dropdown=new Blockly.FieldDropdown(Blockly.CONFIG_WALL);this.appendDummyInput().appendTitle(this.image).appendTitle(a,"STATE").appendTitle("check for a wall");
this.appendDummyInput("DROPDOWN").appendTitle("to the").appendTitle(this.dropdown,"MODE");this.setInputsInline(!0);this.setTooltip("Test if a wall (or an obstacle in general) is nearer than a maximum (fixed) distance in the specified direction.\n---\nFields:\nwall direction (dropdown): Select the direction of interest from the list.\n---\nOutput:\nReturn True if a wall or obstacle is in range and otehrwiese False.\nThe output type is 'Boolean'")},mutationToDom:function(){var a=document.createElement("mutation"),
b=this.getTitleValue("STATE");a.setAttribute("changemodestate",b);this.dropdownValue&&a.setAttribute("dropdownstate",this.dropdownValue);return a},domToMutation:function(a){"TRUE"==a.getAttribute("changemodestate")&&(this.getInput(this.changemode.appendInput)||this.appendValueInput(this.changemode.appendInput),this.getInput("DROPDOWN")&&(this.removeInput("DROPDOWN"),delete this.dropdown),this.image.setText(Blockly.pathToBlockly+"media/menu1.png"));if(a=a.getAttribute("dropdownstate"))this.dropdownValue=
a},changeModeToDom:function(){var a=this.getTitleValue("STATE");return this.changemode.changeModeToDom(a)},domToChangeMode:function(a){"TRUE"==a.getAttribute("changemodestate")&&this.changemode.domToChangeMode(a)},showChangeMode:function(){this.setInputsInline(!1);this.changemode.setChangeMode(!0,"output");this.image.setText(Blockly.pathToBlockly+"media/menu1.png");this.getInput("DROPDOWN")&&(this.removeInput("DROPDOWN"),this.dropdownValue=this.dropdown.getValue(),delete this.dropdown);var a=this.changemode.appendNoneMutationOutput("midlevel_check_wall",
1);a.setTitleValue(this.dropdownValue,"MODE");(new Blockly.ChangeMode(a)).appendNoneMutationOutput("math_number",1).setTitleValue(Blockly.CONFIG_WALL_DISTANCE,"NUM")},disposeChangeMode:function(){this.getInput("DROPDOWN")||(this.dropdown=new Blockly.FieldDropdown(Blockly.CONFIG_WALL),this.dropdownValue&&this.dropdown.setValue(this.dropdownValue),this.appendDummyInput("DROPDOWN").appendTitle("to the").appendTitle(this.dropdown,"MODE"));this.setInputsInline(!0);this.changemode.setChangeMode(!1,"output");
this.image.setText(Blockly.pathToBlockly+"media/menu0.png")}};Blockly.Language.text={helpUrl:Blockly.LANG_TEXT_TEXT_HELPURL,init:function(){this.setColour(160);this.appendDummyInput().appendTitle(new Blockly.FieldImage(Blockly.pathToBlockly+"media/quote0.png",12,12)).appendTitle(new Blockly.FieldTextInput(""),"TEXT").appendTitle(new Blockly.FieldImage(Blockly.pathToBlockly+"media/quote1.png",12,12));this.setOutput(!0,"String");this.setTooltip(Blockly.LANG_TEXT_TEXT_TOOLTIP)}};
Blockly.Language.text_join={helpUrl:Blockly.LANG_TEXT_JOIN_HELPURL,init:function(){this.setColour(160);this.appendValueInput("ADD0").appendTitle(Blockly.LANG_TEXT_JOIN_TITLE_CREATEWITH);this.appendValueInput("ADD1");this.setOutput(!0,"String");this.setMutator(new Blockly.Mutator(["text_create_join_item"]));this.setTooltip(Blockly.LANG_TEXT_JOIN_TOOLTIP);this.itemCount_=2},mutationToDom:function(){var a=document.createElement("mutation");a.setAttribute("items",this.itemCount_);return a},domToMutation:function(a){for(var b=
0;b<this.itemCount_;b++)this.removeInput("ADD"+b);this.itemCount_=window.parseInt(a.getAttribute("items"),10);for(b=0;b<this.itemCount_;b++)a=this.appendValueInput("ADD"+b),0==b&&a.appendTitle(Blockly.LANG_TEXT_JOIN_TITLE_CREATEWITH);0==this.itemCount_&&this.appendDummyInput("EMPTY").appendTitle(new Blockly.FieldImage(Blockly.pathToBlockly+"media/quote0.png",12,12)).appendTitle(new Blockly.FieldImage(Blockly.pathToBlockly+"media/quote1.png",12,12))},decompose:function(a){var b=new Blockly.Block(a,
"text_create_join_container");b.initSvg();for(var c=b.getInput("STACK").connection,d=0;d<this.itemCount_;d++){var e=new Blockly.Block(a,"text_create_join_item");e.initSvg();c.connect(e.previousConnection);c=e.nextConnection}return b},compose:function(a){if(0==this.itemCount_)this.removeInput("EMPTY");else for(var b=this.itemCount_-1;0<=b;b--)this.removeInput("ADD"+b);this.itemCount_=0;for(a=a.getInputTargetBlock("STACK");a;)b=this.appendValueInput("ADD"+this.itemCount_),0==this.itemCount_&&b.appendTitle(Blockly.LANG_TEXT_JOIN_TITLE_CREATEWITH),
a.valueConnection_&&b.connection.connect(a.valueConnection_),this.itemCount_++,a=a.nextConnection&&a.nextConnection.targetBlock();0==this.itemCount_&&this.appendDummyInput("EMPTY").appendTitle(new Blockly.FieldImage(Blockly.pathToBlockly+"media/quote0.png",12,12)).appendTitle(new Blockly.FieldImage(Blockly.pathToBlockly+"media/quote1.png",12,12))},saveConnections:function(a){a=a.getInputTargetBlock("STACK");for(var b=0;a;){var c=this.getInput("ADD"+b);a.valueConnection_=c&&c.connection.targetConnection;
b++;a=a.nextConnection&&a.nextConnection.targetBlock()}}};Blockly.Language.text_create_join_container={init:function(){this.setColour(160);this.appendDummyInput().appendTitle(Blockly.LANG_TEXT_CREATE_JOIN_TITLE_JOIN);this.appendStatementInput("STACK");this.setTooltip(Blockly.LANG_TEXT_CREATE_JOIN_TOOLTIP);this.contextMenu=!1}};
Blockly.Language.text_create_join_item={init:function(){this.setColour(160);this.appendDummyInput().appendTitle(Blockly.LANG_TEXT_CREATE_JOIN_ITEM_TITLE_ITEM);this.setPreviousStatement(!0);this.setNextStatement(!0);this.setTooltip(Blockly.LANG_TEXT_CREATE_JOIN_ITEM_TOOLTIP);this.contextMenu=!1}};
Blockly.Language.text_append={helpUrl:Blockly.LANG_TEXT_APPEND_HELPURL,init:function(){this.setColour(160);this.appendValueInput("TEXT").appendTitle(Blockly.LANG_TEXT_APPEND_TO).appendTitle(new Blockly.FieldVariable(Blockly.LANG_TEXT_APPEND_VARIABLE),"VAR").appendTitle(Blockly.LANG_TEXT_APPEND_APPENDTEXT);this.setPreviousStatement(!0);this.setNextStatement(!0);var a=this;this.setTooltip(function(){return Blockly.LANG_TEXT_APPEND_TOOLTIP.replace("%1",a.getTitleValue("VAR"))})},getVars:function(){return[this.getTitleValue("VAR")]},
renameVar:function(a,b){Blockly.Names.equals(a,this.getTitleValue("VAR"))&&this.setTitleValue(b,"VAR")}};Blockly.Language.text_length={helpUrl:Blockly.LANG_TEXT_LENGTH_HELPURL,init:function(){this.setColour(160);this.appendValueInput("VALUE").setCheck(["String","Array"]).appendTitle(Blockly.LANG_TEXT_LENGTH_INPUT_LENGTH);this.setOutput(!0,"Number");this.setTooltip(Blockly.LANG_TEXT_LENGTH_TOOLTIP)}};
Blockly.Language.text_isEmpty={helpUrl:Blockly.LANG_TEXT_ISEMPTY_HELPURL,init:function(){this.setColour(160);this.appendValueInput("VALUE").setCheck(["String","Array"]);this.appendDummyInput().appendTitle(Blockly.LANG_TEXT_ISEMPTY_INPUT_ISEMPTY);this.setInputsInline(!0);this.setOutput(!0,"Boolean");this.setTooltip(Blockly.LANG_TEXT_ISEMPTY_TOOLTIP)}};
Blockly.Language.text_indexOf={helpUrl:Blockly.LANG_TEXT_INDEXOF_HELPURL,init:function(){this.setColour(160);this.setOutput(!0,"Number");this.appendValueInput("VALUE").setCheck("String").appendTitle(Blockly.LANG_TEXT_INDEXOF_INPUT_INTEXT);this.appendValueInput("FIND").setCheck("String").appendTitle(new Blockly.FieldDropdown(this.OPERATORS),"END");this.setInputsInline(!0);this.setTooltip(Blockly.LANG_TEXT_INDEXOF_TOOLTIP)}};
Blockly.Language.text_indexOf.OPERATORS=[[Blockly.LANG_TEXT_INDEXOF_OPERATOR_FIRST,"FIRST"],[Blockly.LANG_TEXT_INDEXOF_OPERATOR_LAST,"LAST"]];
Blockly.Language.text_charAt={helpUrl:Blockly.LANG_TEXT_CHARAT_HELPURL,init:function(){this.setColour(160);this.setOutput(!0,"String");this.appendValueInput("VALUE").setCheck("String").appendTitle(Blockly.LANG_TEXT_CHARAT_INPUT_INTEXT);this.appendDummyInput("AT");this.setInputsInline(!0);this.updateAt(!0);this.setTooltip(Blockly.LANG_TEXT_CHARAT_TOOLTIP)},mutationToDom:function(){var a=document.createElement("mutation"),b=this.getInput("AT").type==Blockly.INPUT_VALUE;a.setAttribute("at",b);return a},
domToMutation:function(a){a="false"!=a.getAttribute("at");this.updateAt(a)},updateAt:function(a){this.removeInput("AT");a?this.appendValueInput("AT").setCheck("Number"):this.appendDummyInput("AT");var b=new Blockly.FieldDropdown(this.WHERE,function(b){var d="FROM_START"==b||"FROM_END"==b;if(d!=a){var e=this.sourceBlock_;e.updateAt(d);e.setTitleValue(b,"WHERE");return null}});this.getInput("AT").appendTitle(b,"WHERE")}};
Blockly.Language.text_charAt.WHERE=[[Blockly.LANG_TEXT_CHARAT_FROM_START,"FROM_START"],[Blockly.LANG_TEXT_CHARAT_FROM_END,"FROM_END"],[Blockly.LANG_TEXT_CHARAT_FIRST,"FIRST"],[Blockly.LANG_TEXT_CHARAT_LAST,"LAST"],[Blockly.LANG_TEXT_CHARAT_RANDOM,"RANDOM"]];
Blockly.Language.text_getSubstring={helpUrl:Blockly.LANG_TEXT_SUBSTRING_HELPURL,init:function(){this.setColour(160);this.appendValueInput("STRING").setCheck("String").appendTitle(Blockly.LANG_TEXT_SUBSTRING_INPUT_IN_TEXT);this.appendDummyInput("AT1");this.appendDummyInput("AT2");this.setInputsInline(!0);this.setOutput(!0,"String");this.updateAt(1,!0);this.updateAt(2,!0);this.setTooltip(Blockly.LANG_TEXT_SUBSTRING_TOOLTIP)},mutationToDom:function(){var a=document.createElement("mutation"),b=this.getInput("AT1").type==
Blockly.INPUT_VALUE;a.setAttribute("at1",b);b=this.getInput("AT2").type==Blockly.INPUT_VALUE;a.setAttribute("at2",b);return a},domToMutation:function(a){var b="true"==a.getAttribute("at1");a="true"==a.getAttribute("at1");this.updateAt(1,b);this.updateAt(2,a)},updateAt:function(a,b){this.removeInput("AT"+a);b?this.appendValueInput("AT"+a).setCheck("Number"):this.appendDummyInput("AT"+a);var c=new Blockly.FieldDropdown(this["WHERE"+a],function(c){var e="FROM_START"==c||"FROM_END"==c;if(e!=b){var f=
this.sourceBlock_;f.updateAt(a,e);f.setTitleValue(c,"WHERE"+a);return null}});this.getInput("AT"+a).appendTitle(Blockly["LANG_TEXT_SUBSTRING_INPUT_AT"+a]).appendTitle(c,"WHERE"+a);1==a&&this.moveInputBefore("AT1","AT2")}};Blockly.Language.text_getSubstring.WHERE1=[[Blockly.LANG_TEXT_SUBSTRING_FROM_START,"FROM_START"],[Blockly.LANG_TEXT_SUBSTRING_FROM_END,"FROM_END"],[Blockly.LANG_TEXT_SUBSTRING_FIRST,"FIRST"]];
Blockly.Language.text_getSubstring.WHERE2=[[Blockly.LANG_TEXT_SUBSTRING_FROM_START,"FROM_START"],[Blockly.LANG_TEXT_SUBSTRING_FROM_END,"FROM_END"],[Blockly.LANG_TEXT_SUBSTRING_LAST,"LAST"]];Blockly.Language.text_changeCase={helpUrl:Blockly.LANG_TEXT_CHANGECASE_HELPURL,init:function(){this.setColour(160);this.appendValueInput("TEXT").setCheck("String").appendTitle(new Blockly.FieldDropdown(this.OPERATORS),"CASE");this.setOutput(!0,"String");this.setTooltip(Blockly.LANG_TEXT_CHANGECASE_TOOLTIP)}};
Blockly.Language.text_changeCase.OPERATORS=[[Blockly.LANG_TEXT_CHANGECASE_OPERATOR_UPPERCASE,"UPPERCASE"],[Blockly.LANG_TEXT_CHANGECASE_OPERATOR_LOWERCASE,"LOWERCASE"],[Blockly.LANG_TEXT_CHANGECASE_OPERATOR_TITLECASE,"TITLECASE"]];Blockly.Language.text_trim={helpUrl:Blockly.LANG_TEXT_TRIM_HELPURL,init:function(){this.setColour(160);this.appendValueInput("TEXT").setCheck("String").appendTitle(new Blockly.FieldDropdown(this.OPERATORS),"MODE");this.setOutput(!0,"String");this.setTooltip(Blockly.LANG_TEXT_TRIM_TOOLTIP)}};
Blockly.Language.text_trim.OPERATORS=[[Blockly.LANG_TEXT_TRIM_OPERATOR_BOTH,"BOTH"],[Blockly.LANG_TEXT_TRIM_OPERATOR_LEFT,"LEFT"],[Blockly.LANG_TEXT_TRIM_OPERATOR_RIGHT,"RIGHT"]];Blockly.Language.text_print={helpUrl:Blockly.LANG_TEXT_PRINT_HELPURL,init:function(){this.setColour(160);this.appendValueInput("TEXT").appendTitle(Blockly.LANG_TEXT_PRINT_TITLE_PRINT);this.setPreviousStatement(!0);this.setNextStatement(!0);this.setTooltip(Blockly.LANG_TEXT_PRINT_TOOLTIP)}};
Blockly.Language.text_prompt={helpUrl:Blockly.LANG_TEXT_PROMPT_HELPURL,init:function(){var a=this;this.setColour(160);var b=new Blockly.FieldDropdown(this.TYPES,function(b){"NUMBER"==b?a.outputConnection.setCheck("Number"):a.outputConnection.setCheck("String")});this.appendDummyInput().appendTitle(b,"TYPE").appendTitle(new Blockly.FieldImage(Blockly.pathToBlockly+"media/quote0.png",12,12)).appendTitle(new Blockly.FieldTextInput(""),"TEXT").appendTitle(new Blockly.FieldImage(Blockly.pathToBlockly+
"media/quote1.png",12,12));this.setOutput(!0,"String");a=this;this.setTooltip(function(){return"TEXT"==a.getTitleValue("TYPE")?Blockly.LANG_TEXT_PROMPT_TOOLTIP_TEXT:Blockly.LANG_TEXT_PROMPT_TOOLTIP_NUMBER})}};Blockly.Language.text_prompt.TYPES=[[Blockly.LANG_TEXT_PROMPT_TYPE_TEXT,"TEXT"],[Blockly.LANG_TEXT_PROMPT_TYPE_NUMBER,"NUMBER"]];Blockly.Language.ros_string_msg_type={helpUrl:null,init:function(){this.setColour(Blockly.LANG_ROS_MESSAGE_COLOUR);this.appendDummyInput().appendTitle("String (ROS message type)");this.setOutput(!0,Blockly.LANG_CONNECTION_TYPE_ROS_MESSAGE);this.setTooltip("ROS message type to represent a String message")}};
Blockly.Language.ros_twist_msg_type={helpUrl:null,init:function(){this.setColour(Blockly.LANG_ROS_MESSAGE_COLOUR);this.appendDummyInput().appendTitle("Twist (ROS message type)");this.setOutput(!0,Blockly.LANG_CONNECTION_TYPE_ROS_MESSAGE);this.setTooltip("ROS message type to represent a Twist message")}};Blockly.Language.ros_twist_msg={helpUrl:null,init:function(){this.setColour(Blockly.LANG_ROS_MESSAGE_COLOUR);this.appendDummyInput().appendTitle("Twist()");this.setOutput(!0,null);this.setTooltip("")}};
Blockly.Language.ros_jointstate_msg_type={helpUrl:null,init:function(){this.setColour(Blockly.LANG_ROS_MESSAGE_COLOUR);this.appendDummyInput().appendTitle("JointState (ROS message type)");this.setOutput(!0,Blockly.LANG_CONNECTION_TYPE_ROS_MESSAGE);this.setTooltip("ROS message type to represent a JointState message")}};
Blockly.Language.ros_jointstate_msg={helpUrl:null,init:function(){this.setColour(Blockly.LANG_ROS_MESSAGE_COLOUR);this.appendDummyInput().appendTitle("JointState()");this.setOutput(!0,null);this.setTooltip("")}};
Blockly.Language.ros_get_twist_element={helpUrl:null,init:function(){this.setColour(Blockly.LANG_ROS_MESSAGE_COLOUR);this.dropdown1=new Blockly.FieldDropdown(this.OPERATORS1);this.dropdown2=new Blockly.FieldDropdown(this.OPERATORS2);this.appendValueInput("VARIABLE").appendTitle("get element").appendTitle(this.dropdown1,"MODE1").appendTitle(".").appendTitle(this.dropdown2,"MODE2").appendTitle("of Twist variable:");this.setOutput(!0,null);this.setTooltip("")}};Blockly.TWIST_LINEAR="linear";
Blockly.TWIST_ANGULAR="angular";Blockly.TWIST_X="x";Blockly.TWIST_Y="y";Blockly.TWIST_Z="z";Blockly.Language.ros_get_twist_element.OPERATORS1=[[Blockly.TWIST_LINEAR,"TWIST_LINEAR"],[Blockly.TWIST_ANGULAR,"TWIST_ANGULAR"]];Blockly.Language.ros_get_twist_element.OPERATORS2=[[Blockly.TWIST_X,"TWIST_X"],[Blockly.TWIST_Y,"TWIST_Y"],[Blockly.TWIST_Z,"TWIST_Z"]];
Blockly.Language.ros_set_twist_element={helpUrl:null,init:function(){this.setColour(Blockly.LANG_ROS_MESSAGE_COLOUR);this.dropdown1=new Blockly.FieldDropdown(Blockly.Language.ros_get_twist_element.OPERATORS1);this.dropdown2=new Blockly.FieldDropdown(Blockly.Language.ros_get_twist_element.OPERATORS2);this.appendDummyInput().appendTitle("set element").appendTitle(this.dropdown1,"MODE1").appendTitle(".").appendTitle(this.dropdown2,"MODE2");this.appendValueInput("VARIABLE").appendTitle("of twist variable:").setAlign(Blockly.ALIGN_RIGHT);
this.appendValueInput("NEW_VAL").appendTitle("with new value:").setAlign(Blockly.ALIGN_RIGHT);this.setPreviousStatement(!0);this.setNextStatement(!0);this.setTooltip("")}};Blockly.Language.ros_jointpositions_msg_type={helpUrl:null,init:function(){this.setColour(Blockly.LANG_ROS_MESSAGE_COLOUR);this.appendDummyInput().appendTitle("JointPositions (ROS message type)");this.setOutput(!0,Blockly.LANG_CONNECTION_TYPE_ROS_MESSAGE);this.setTooltip("ROS message type to represent a jointPositions message")}};
Blockly.Language.ros_other_msg_type={helpUrl:null,init:function(){this.setColour(Blockly.LANG_ROS_MESSAGE_COLOUR);this.appendDummyInput("T1").appendTitle(new Blockly.FieldTextInput("",null),"MSG_NAME");this.appendDummyInput("T2").appendTitle("(ROS message type)");this.setOutput(!0,Blockly.LANG_CONNECTION_TYPE_ROS_MESSAGE);this.setInputsInline(!0);this.setTooltip("Specify a ROS message name which is not listed\nNode: Do not forget to import appropriate modules to prevent run time errors.")}};
Blockly.Language.rosmessage_base_pose_msg={helpUrl:null,init:function(){this.setColour(Blockly.LANG_ROS_MESSAGE_COLOUR);this.appendDummyInput().appendTitle("base pose message");this.appendValueInput("X").setAlign(Blockly.ALIGN_RIGHT).setCheck("Number").appendTitle("x");this.appendValueInput("Y").setAlign(Blockly.ALIGN_RIGHT).setCheck("Number").appendTitle("y");this.appendValueInput("Z").setAlign(Blockly.ALIGN_RIGHT).setCheck("Number").appendTitle("z");this.appendValueInput("Q").setCheck("Quaternion").setAlign(Blockly.ALIGN_RIGHT).appendTitle("quaternion");
this.setTooltip("TODO");this.setOutput(!0,Blockly.LANG_CONNECTION_TYPE_BASE_POSE_MSG)}};Blockly.Language.rosmessage_gripper_position_msg={helpUrl:null,init:function(){this.setColour(Blockly.LANG_ROS_MESSAGE_COLOUR);this.appendDummyInput().appendTitle("gripper position message");this.appendValueInput("GRIPPER_L").appendTitle("left gripper").setAlign(Blockly.ALIGN_RIGHT);this.appendValueInput("GRIPPER_R").appendTitle("right gripper").setAlign(Blockly.ALIGN_RIGHT);this.setOutput(!0,Blockly.LANG_CONNECTION_TYPE_ARM_JOINT_POSITION)}};
Blockly.Language.rosmessage_joint_state_msg_name={helpUrl:null,init:function(){this.setColour(Blockly.LANG_ROS_MESSAGE_COLOUR);this.appendDummyInput().appendTitle(new Blockly.FieldVariable("jp"),"VAR").appendTitle(".name");this.appendValueInput("PREFIX").appendTitle(" = prefix").setAlign(Blockly.ALIGN_RIGHT).setCheck("String");this.appendValueInput("NUMBER_OF_JOINTS").appendTitle("+ counting number (for all joints until").setAlign(Blockly.ALIGN_RIGHT).setCheck("Number");this.appendDummyInput().appendTitle(")");
this.setInputsInline(!0);this.setPreviousStatement(!0);this.setNextStatement(!0);this.setTooltip("TODO")},getVars:function(){return[this.getTitleValue("VAR")]},renameVar:function(a,b){Blockly.Names.equals(a,this.getTitleValue("VAR"))&&this.setTitleValue(b,"VAR")}};
Blockly.Language.rosmessage_joint_state_msg_position={helpUrl:null,init:function(){this.setColour(Blockly.LANG_ROS_MESSAGE_COLOUR);this.appendDummyInput().appendTitle(new Blockly.FieldVariable("jp"),"VAR").appendTitle(".position");this.appendValueInput("VALUE").appendTitle(" = value in list").setAlign(Blockly.ALIGN_RIGHT).setCheck(null);this.appendValueInput("NUMBER_OF_JOINTS").appendTitle("(for all joints until").setAlign(Blockly.ALIGN_RIGHT).setCheck("Number");this.appendDummyInput().appendTitle(")");
this.setInputsInline(!0);this.setPreviousStatement(!0);this.setNextStatement(!0);this.setTooltip("TODO")},getVars:function(){return[this.getTitleValue("VAR")]},renameVar:function(a,b){Blockly.Names.equals(a,this.getTitleValue("VAR"))&&this.setTitleValue(b,"VAR")}};
Blockly.Language.rosmessage_joint_state_msg_velocity={helpUrl:null,init:function(){this.setColour(Blockly.LANG_ROS_MESSAGE_COLOUR);this.appendDummyInput().appendTitle(new Blockly.FieldVariable("jp"),"VAR").appendTitle(".velocity");this.appendValueInput("INDEX").setCheck("Number").appendTitle("[").setAlign(Blockly.ALIGN_RIGHT);this.appendValueInput("VALUE").appendTitle("] = ").setAlign(Blockly.ALIGN_RIGHT).setCheck("Number");this.setInputsInline(!0);this.setPreviousStatement(!0);this.setNextStatement(!0);
this.setTooltip("TODO")},getVars:function(){return[this.getTitleValue("VAR")]},renameVar:function(a,b){Blockly.Names.equals(a,this.getTitleValue("VAR"))&&this.setTitleValue(b,"VAR")}};
Blockly.Language.rosmessage_joint_state_msg_effort={helpUrl:null,init:function(){this.setColour(Blockly.LANG_ROS_MESSAGE_COLOUR);this.appendDummyInput().appendTitle(new Blockly.FieldVariable("jp"),"VAR").appendTitle(".effort");this.appendValueInput("INDEX").setCheck("Number").appendTitle("[").setAlign(Blockly.ALIGN_RIGHT);this.appendValueInput("VALUE").appendTitle("] = ").setAlign(Blockly.ALIGN_RIGHT).setCheck("Number");this.setInputsInline(!0);this.setPreviousStatement(!0);this.setNextStatement(!0);
this.setTooltip("TODO")},getVars:function(){return[this.getTitleValue("VAR")]},renameVar:function(a,b){Blockly.Names.equals(a,this.getTitleValue("VAR"))&&this.setTitleValue(b,"VAR")}};
Blockly.Language.rosmessage_arm_joint_position_msg={helpUrl:null,init:function(){this.setColour(Blockly.LANG_ROS_MESSAGE_COLOUR);this.appendDummyInput().appendTitle("arm joint position message");this.setOutput(!0,Blockly.LANG_CONNECTION_TYPE_ARM_JOINT_POSITION);this.setMutator(new Blockly.Mutator(["rosmessage_arm_joint_position_msg_jointvalue"]));this.setTooltip("");this.jointCount_=0},mutationToDom:function(){var a=document.createElement("mutation");this.jointCount_&&a.setAttribute("joints",this.jointCount_);
return a},domToMutation:function(a){for(var b=0;b<this.jointCount_;b++)this.getInput("JOINTVALUE"+b)&&this.removeInput("JOINTVALUE"+b);this.jointCount_=window.parseInt(a.getAttribute("joints"),10);for(b=0;b<this.jointCount_;b++)this.appendValueInput("JOINTVALUE"+b).appendTitle("joint name").appendTitle(new Blockly.FieldTextInput("joint_name",null),"JOINTNAME"+b).appendTitle(", joint value")},decompose:function(a){var b=new Blockly.Block(a,"rosmessage_arm_joint_position_msg_container");b.initSvg();
for(var c=b.getInput("STACK").connection,d=0;d<this.jointCount_;d++){var e=new Blockly.Block(a,"rosmessage_arm_joint_position_msg_jointvalue");e.initSvg();c.connect(e.previousConnection);c=e.nextConnection}return b},compose:function(a){for(var b=this.jointCount_-1;0<=b;b--)this.getInput("JOINTVALUE"+b)&&this.removeInput("JOINTVALUE"+b);this.jointCount_=0;for(a=a.getInputTargetBlock("STACK");a;)b=this.appendValueInput("JOINTVALUE"+this.jointCount_).appendTitle("joint name").appendTitle(new Blockly.FieldTextInput("joint_name_"+
(this.jointCount_+1),null),"JOINTNAME"+this.jointCount_).appendTitle(", joint value"),a.valueConnection_&&b.connection.connect(a.valueConnection_),this.jointCount_++,a=a.nextConnection&&a.nextConnection.targetBlock()},saveConnections:function(a){a=a.getInputTargetBlock("STACK");for(var b=0;a;){var c=this.getInput("JOINTVALUE"+b);a.valueConnection_=c&&c.connection.targetConnection;b++;a=a.nextConnection&&a.nextConnection.targetBlock()}}};
Blockly.Language.rosmessage_arm_joint_position_msg_container={init:function(){this.setColour(Blockly.LANG_ROS_MESSAGE_COLOUR);this.appendDummyInput().appendTitle("arm joint position message");this.appendStatementInput("STACK");this.setPreviousStatement(!0);this.setNextStatement(!0);this.setTooltip("")}};
Blockly.Language.rosmessage_arm_joint_position_msg_jointvalue={init:function(){this.setColour(Blockly.LANG_ROS_MESSAGE_COLOUR);this.appendDummyInput().appendTitle("joint value");this.setPreviousStatement(!0);this.setNextStatement(!0);this.setTooltip("")}};Blockly.Language.math_number={helpUrl:Blockly.LANG_MATH_NUMBER_HELPURL,init:function(){this.setColour(230);this.appendDummyInput().appendTitle(new Blockly.FieldTextInput("0",Blockly.FieldTextInput.numberValidator),"NUM");this.setOutput(!0,"Number");this.setTooltip(Blockly.LANG_MATH_NUMBER_TOOLTIP)}};
Blockly.Language.math_arithmetic={helpUrl:Blockly.LANG_MATH_ARITHMETIC_HELPURL,init:function(){this.setColour(230);this.setOutput(!0,"Number");this.appendValueInput("A").setCheck("Number");this.appendValueInput("B").setCheck("Number").appendTitle(new Blockly.FieldDropdown(this.OPERATORS),"OP");this.setInputsInline(!0);var a=this;this.setTooltip(function(){var b=a.getTitleValue("OP");return a.TOOLTIPS[b]})}};
Blockly.Language.math_arithmetic.OPERATORS=[["+","ADD"],["-","MINUS"],["\u00d7","MULTIPLY"],["\u00f7","DIVIDE"],["^","POWER"]];Blockly.Language.math_arithmetic.TOOLTIPS={ADD:Blockly.LANG_MATH_ARITHMETIC_TOOLTIP_ADD,MINUS:Blockly.LANG_MATH_ARITHMETIC_TOOLTIP_MINUS,MULTIPLY:Blockly.LANG_MATH_ARITHMETIC_TOOLTIP_MULTIPLY,DIVIDE:Blockly.LANG_MATH_ARITHMETIC_TOOLTIP_DIVIDE,POWER:Blockly.LANG_MATH_ARITHMETIC_TOOLTIP_POWER};
Blockly.Language.math_single={helpUrl:Blockly.LANG_MATH_SINGLE_HELPURL,init:function(){this.setColour(230);this.setOutput(!0,"Number");this.appendValueInput("NUM").setCheck("Number").appendTitle(new Blockly.FieldDropdown(this.OPERATORS),"OP");var a=this;this.setTooltip(function(){var b=a.getTitleValue("OP");return a.TOOLTIPS[b]})}};
Blockly.Language.math_single.OPERATORS=[[Blockly.LANG_MATH_SINGLE_OP_ROOT,"ROOT"],[Blockly.LANG_MATH_SINGLE_OP_ABSOLUTE,"ABS"],["-","NEG"],["ln","LN"],["log10","LOG10"],["e^","EXP"],["10^","POW10"]];Blockly.Language.math_single.TOOLTIPS={ROOT:Blockly.LANG_MATH_SINGLE_TOOLTIP_ROOT,ABS:Blockly.LANG_MATH_SINGLE_TOOLTIP_ABS,NEG:Blockly.LANG_MATH_SINGLE_TOOLTIP_NEG,LN:Blockly.LANG_MATH_SINGLE_TOOLTIP_LN,LOG10:Blockly.LANG_MATH_SINGLE_TOOLTIP_LOG10,EXP:Blockly.LANG_MATH_SINGLE_TOOLTIP_EXP,POW10:Blockly.LANG_MATH_SINGLE_TOOLTIP_POW10};
Blockly.Language.math_trig={helpUrl:Blockly.LANG_MATH_TRIG_HELPURL,init:function(){this.setColour(230);this.setOutput(!0,"Number");this.appendValueInput("NUM").setCheck("Number").appendTitle(new Blockly.FieldDropdown(this.OPERATORS),"OP");var a=this;this.setTooltip(function(){var b=a.getTitleValue("OP");return a.TOOLTIPS[b]})}};Blockly.Language.math_trig.OPERATORS=[["sin","SIN"],["cos","COS"],["tan","TAN"],["asin","ASIN"],["acos","ACOS"],["atan","ATAN"]];
Blockly.Language.math_trig.TOOLTIPS={SIN:Blockly.LANG_MATH_TRIG_TOOLTIP_SIN,COS:Blockly.LANG_MATH_TRIG_TOOLTIP_COS,TAN:Blockly.LANG_MATH_TRIG_TOOLTIP_TAN,ASIN:Blockly.LANG_MATH_TRIG_TOOLTIP_ASIN,ACOS:Blockly.LANG_MATH_TRIG_TOOLTIP_ACOS,ATAN:Blockly.LANG_MATH_TRIG_TOOLTIP_ATAN};
Blockly.Language.math_constant={helpUrl:Blockly.LANG_MATH_CONSTANT_HELPURL,init:function(){this.setColour(230);this.setOutput(!0,"Number");this.appendDummyInput().appendTitle(new Blockly.FieldDropdown(this.CONSTANTS),"CONSTANT");this.setTooltip(Blockly.LANG_MATH_CONSTANT_TOOLTIP)}};Blockly.Language.math_constant.CONSTANTS=[["\u03c0","PI"],["e","E"],["\u03c6","GOLDEN_RATIO"],["sqrt(2)","SQRT2"],["sqrt(\u00bd)","SQRT1_2"],["\u221e","INFINITY"]];
Blockly.Language.math_number_property={helpUrl:"",init:function(){this.setColour(230);this.appendValueInput("NUMBER_TO_CHECK").setCheck("Number");var a=new Blockly.FieldDropdown(this.PROPERTIES,function(a){this.sourceBlock_.updateShape("DIVISIBLE_BY"==a)});this.appendDummyInput().appendTitle(a,"PROPERTY");this.setInputsInline(!0);this.setOutput(!0,"Boolean");this.setTooltip(Blockly.LANG_MATH_IS_TOOLTIP)},mutationToDom:function(){var a=document.createElement("mutation"),b="DIVISIBLE_BY"==this.getTitleValue("PROPERTY");
a.setAttribute("divisor_input",b);return a},domToMutation:function(a){a="true"==a.getAttribute("divisor_input");this.updateShape(a)},updateShape:function(a){var b=this.getInput("DIVISOR");a?b||this.appendValueInput("DIVISOR").setCheck("Number"):b&&this.removeInput("DIVISOR")}};
Blockly.Language.math_number_property.PROPERTIES=[[Blockly.LANG_MATH_IS_EVEN,"EVEN"],[Blockly.LANG_MATH_IS_ODD,"ODD"],[Blockly.LANG_MATH_IS_PRIME,"PRIME"],[Blockly.LANG_MATH_IS_WHOLE,"WHOLE"],[Blockly.LANG_MATH_IS_POSITIVE,"POSITIVE"],[Blockly.LANG_MATH_IS_NEGATIVE,"NEGATIVE"],[Blockly.LANG_MATH_IS_DIVISIBLE_BY,"DIVISIBLE_BY"]];
Blockly.Language.math_change={helpUrl:Blockly.LANG_MATH_CHANGE_HELPURL,init:function(){this.setColour(230);this.appendValueInput("DELTA").setCheck("Number").appendTitle(Blockly.LANG_MATH_CHANGE_TITLE_CHANGE).appendTitle(new Blockly.FieldVariable(Blockly.LANG_MATH_CHANGE_TITLE_ITEM),"VAR").appendTitle(Blockly.LANG_MATH_CHANGE_INPUT_BY);this.setPreviousStatement(!0);this.setNextStatement(!0);var a=this;this.setTooltip(function(){return Blockly.LANG_MATH_CHANGE_TOOLTIP.replace("%1",a.getTitleValue("VAR"))})},
getVars:function(){return[this.getTitleValue("VAR")]},renameVar:function(a,b){Blockly.Names.equals(a,this.getTitleValue("VAR"))&&this.setTitleValue(b,"VAR")}};Blockly.Language.math_round={helpUrl:Blockly.LANG_MATH_ROUND_HELPURL,init:function(){this.setColour(230);this.setOutput(!0,"Number");this.appendValueInput("NUM").setCheck("Number").appendTitle(new Blockly.FieldDropdown(this.OPERATORS),"OP");this.setTooltip(Blockly.LANG_MATH_ROUND_TOOLTIP)}};
Blockly.Language.math_round.OPERATORS=[[Blockly.LANG_MATH_ROUND_OPERATOR_ROUND,"ROUND"],[Blockly.LANG_MATH_ROUND_OPERATOR_ROUNDUP,"ROUNDUP"],[Blockly.LANG_MATH_ROUND_OPERATOR_ROUNDDOWN,"ROUNDDOWN"]];
Blockly.Language.math_on_list={helpUrl:Blockly.LANG_MATH_ONLIST_HELPURL,init:function(){var a=this;this.setColour(230);this.setOutput(!0,"Number");var b=new Blockly.FieldDropdown(this.OPERATORS,function(b){"MODE"==b?a.outputConnection.setCheck("Array"):a.outputConnection.setCheck("Number")});this.appendValueInput("LIST").setCheck("Array").appendTitle(b,"OP");this.setTooltip(function(){var b=a.getTitleValue("OP");return a.TOOLTIPS[b]})}};
Blockly.Language.math_on_list.OPERATORS=[[Blockly.LANG_MATH_ONLIST_OPERATOR_SUM,"SUM"],[Blockly.LANG_MATH_ONLIST_OPERATOR_MIN,"MIN"],[Blockly.LANG_MATH_ONLIST_OPERATOR_MAX,"MAX"],[Blockly.LANG_MATH_ONLIST_OPERATOR_AVERAGE,"AVERAGE"],[Blockly.LANG_MATH_ONLIST_OPERATOR_MEDIAN,"MEDIAN"],[Blockly.LANG_MATH_ONLIST_OPERATOR_MODE,"MODE"],[Blockly.LANG_MATH_ONLIST_OPERATOR_STD_DEV,"STD_DEV"],[Blockly.LANG_MATH_ONLIST_OPERATOR_RANDOM,"RANDOM"]];
Blockly.Language.math_on_list.TOOLTIPS={SUM:Blockly.LANG_MATH_ONLIST_TOOLTIP_SUM,MIN:Blockly.LANG_MATH_ONLIST_TOOLTIP_MIN,MAX:Blockly.LANG_MATH_ONLIST_TOOLTIP_MAX,AVERAGE:Blockly.LANG_MATH_ONLIST_TOOLTIP_AVERAGE,MEDIAN:Blockly.LANG_MATH_ONLIST_TOOLTIP_MEDIAN,MODE:Blockly.LANG_MATH_ONLIST_TOOLTIP_MODE,STD_DEV:Blockly.LANG_MATH_ONLIST_TOOLTIP_STD_DEV,RANDOM:Blockly.LANG_MATH_ONLIST_TOOLTIP_RANDOM};
Blockly.Language.math_modulo={helpUrl:Blockly.LANG_MATH_MODULO_HELPURL,init:function(){this.setColour(230);this.setOutput(!0,"Number");this.appendValueInput("DIVIDEND").setCheck("Number").appendTitle(Blockly.LANG_MATH_MODULO_INPUT_DIVIDEND);this.appendValueInput("DIVISOR").setCheck("Number").setAlign(Blockly.ALIGN_RIGHT).appendTitle("\u00f7");this.setInputsInline(!0);this.setTooltip(Blockly.LANG_MATH_MODULO_TOOLTIP)}};
Blockly.Language.math_constrain={helpUrl:Blockly.LANG_MATH_CONSTRAIN_HELPURL,init:function(){this.setColour(230);this.setOutput(!0,"Number");this.appendValueInput("VALUE").setCheck("Number").appendTitle(Blockly.LANG_MATH_CONSTRAIN_INPUT_CONSTRAIN);this.appendValueInput("LOW").setCheck("Number").appendTitle(Blockly.LANG_MATH_CONSTRAIN_INPUT_LOW);this.appendValueInput("HIGH").setCheck("Number").appendTitle(Blockly.LANG_MATH_CONSTRAIN_INPUT_HIGH);this.setInputsInline(!0);this.setTooltip(Blockly.LANG_MATH_CONSTRAIN_TOOLTIP)}};
Blockly.Language.math_random_int={helpUrl:Blockly.LANG_MATH_RANDOM_INT_HELPURL,init:function(){this.setColour(230);this.setOutput(!0,"Number");this.appendValueInput("FROM").setCheck("Number").appendTitle(Blockly.LANG_MATH_RANDOM_INT_INPUT_FROM);this.appendValueInput("TO").setCheck("Number").setAlign(Blockly.ALIGN_RIGHT).appendTitle(Blockly.LANG_MATH_RANDOM_INT_INPUT_TO);this.setInputsInline(!0);this.setTooltip(Blockly.LANG_MATH_RANDOM_INT_TOOLTIP)}};
Blockly.Language.math_random_float={helpUrl:Blockly.LANG_MATH_RANDOM_FLOAT_HELPURL,init:function(){this.setColour(230);this.setOutput(!0,"Number");this.appendDummyInput().appendTitle(Blockly.LANG_MATH_RANDOM_FLOAT_TITLE_RANDOM);this.setTooltip(Blockly.LANG_MATH_RANDOM_FLOAT_TOOLTIP)}};