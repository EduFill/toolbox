// Do not edit this file; automatically generated by build.py.
"use strict";

Blockly.Python=Blockly.Generator.get("Python");Blockly.Python.addReservedWords("and,as,assert,break,class,continue,def,del,elif,else,except,exec,finally,for,from,global,if,import,in,is,lambda,not,or,pass,print,raise,return,try,while,with,yield,True,False,None,NotImplemented,Ellipsis,__debug__,quit,exit,copyright,license,credits,abs,divmod,input,open,staticmethod,all,enumerate,int,ord,str,any,eval,isinstance,pow,sum,basestring,execfile,issubclass,print,super,bin,file,iter,property,tuple,bool,filter,len,range,type,bytearray,float,list,raw_input,unichr,callable,format,locals,reduce,unicode,chr,frozenset,long,reload,vars,classmethod,getattr,map,repr,xrange,cmp,globals,max,reversed,zip,compile,hasattr,memoryview,round,__import__,complex,hash,min,set,apply,delattr,help,next,setattr,buffer,dict,hex,object,slice,coerce,dir,id,oct,sorted,intern");
Blockly.Python.ORDER_ATOMIC=0;Blockly.Python.ORDER_COLLECTION=1;Blockly.Python.ORDER_STRING_CONVERSION=1;Blockly.Python.ORDER_MEMBER=2;Blockly.Python.ORDER_FUNCTION_CALL=2;Blockly.Python.ORDER_EXPONENTIATION=3;Blockly.Python.ORDER_UNARY_SIGN=4;Blockly.Python.ORDER_BITWISE_NOT=4;Blockly.Python.ORDER_MULTIPLICATIVE=5;Blockly.Python.ORDER_ADDITIVE=6;Blockly.Python.ORDER_BITWISE_SHIFT=7;Blockly.Python.ORDER_BITWISE_AND=8;Blockly.Python.ORDER_BITWISE_XOR=9;Blockly.Python.ORDER_BITWISE_OR=10;
Blockly.Python.ORDER_RELATIONAL=11;Blockly.Python.ORDER_LOGICAL_NOT=12;Blockly.Python.ORDER_LOGICAL_AND=13;Blockly.Python.ORDER_LOGICAL_OR=14;Blockly.Python.ORDER_CONDITIONAL=15;Blockly.Python.ORDER_LAMBDA=16;Blockly.Python.ORDER_NONE=99;Blockly.Python.INFINITE_LOOP_TRAP=null;Blockly.Python.FUNCTION_NAME_PLACEHOLDER_="{{{}}}";Blockly.Python.FUNCTION_NAME_PLACEHOLDER_REGEXP_=RegExp(Blockly.Python.FUNCTION_NAME_PLACEHOLDER_,"g");
Blockly.Python.init=function(){Blockly.Python.definitions_={};Blockly.Python.functionNames_={};if(Blockly.Variables){Blockly.Python.variableDB_?Blockly.Python.variableDB_.reset():Blockly.Python.variableDB_=new Blockly.Names(Blockly.Python.RESERVED_WORDS_);for(var a=[],b=Blockly.Variables.allVariables(),c=0;c<b.length;c++)a[c]=Blockly.Python.variableDB_.getName(b[c],Blockly.Variables.NAME_TYPE)+" = None";Blockly.Python.definitions_.variables=a.join("\n")}};
Blockly.Python.finish=function(a){var b=[],c=[],d;for(d in Blockly.Python.definitions_){var e=Blockly.Python.definitions_[d];e.match(/^(from\s+\S+\s+)?import\s+\S+/)?b.push(e):c.push(e)}b.unshift("#!/usr/bin/env python\n");return(b.join("\n")+"\n\n"+c.join("\n\n")).replace(/\n\n+/g,"\n\n").replace(/\n*$/,"\n\n\n")+a};Blockly.Python.scrubNakedValue=function(a){return a+"\n"};
Blockly.Python.quote_=function(a){a=a.replace(/\\/g,"\\\\").replace(/\n/g,"\\\n").replace(/\%/g,"\\%").replace(/'/g,"\\'");return"'"+a+"'"};
Blockly.Python.scrub_=function(a,b){if(null===b)return"";var c="";if(!a.outputConnection||!a.outputConnection.targetConnection){var d=a.getCommentText();d&&(c+=Blockly.Generator.prefixLines(d,"# ")+"\n");for(var e=0;e<a.inputList.length;e++)a.inputList[e].type==Blockly.INPUT_VALUE&&(d=a.inputList[e].connection.targetBlock())&&(d=Blockly.Generator.allNestedComments(d))&&(c+=Blockly.Generator.prefixLines(d,"# "))}e=a.nextConnection&&a.nextConnection.targetBlock();e=this.blockToCode(e);return c+b+e};
Blockly.Python.provideFunction_=function(a,b){if(!Blockly.Python.definitions_[a]){var c=Blockly.Python.variableDB_.getDistinctName(a,Blockly.Generator.NAME_TYPE);Blockly.Python.functionNames_[a]=c;Blockly.Python.definitions_[a]=b.join("\n").replace(Blockly.Python.FUNCTION_NAME_PLACEHOLDER_REGEXP_,c)}return Blockly.Python.functionNames_[a]};Blockly.Python=Blockly.Generator.get("Python");Blockly.Python.RESERVED_WORDS_||(Blockly.Python.RESERVED_WORDS_="");Blockly.Python.action_simple_action_client=function(){Blockly.Python.definitions_.import_actionlib="import actionlib";Blockly.Python.RESERVED_WORDS_+="actionlib,";var a=this.getTitleValue("ACTION_SERVER_NAME"),b=Blockly.Python.valueToCode(this,"ACTION",Blockly.Python.ORDER_NONE)||"None";return['actionlib.SimpleActionClient("'+a+'", '+b+")",Blockly.Python.ORDER_ATOMIC]};
Blockly.Python.action_client_wait_for_server=function(){return Blockly.Python.valueToCode(this,"CLIENT",Blockly.Python.ORDER_NONE)+".wait_for_server()\n"};Blockly.Python.action_client_wait_for_result=function(){return Blockly.Python.valueToCode(this,"CLIENT",Blockly.Python.ORDER_NONE)+".wait_for_result()\n"};
Blockly.Python.action_client_send_goal=function(){var a=Blockly.Python.valueToCode(this,"CLIENT",Blockly.Python.ORDER_NONE),b=Blockly.Python.valueToCode(this,"GOAL",Blockly.Python.ORDER_NONE);return a+".send_goal("+b+")\n"};Blockly.Python.action_move_base_action=function(){Blockly.Python.definitions_["from_move_base_msgs.msg_import_*"]="from move_base_msgs.msg import *";Blockly.Python.RESERVED_WORDS_+="move_base_msgs.msg,";return["MoveBaseAction",Blockly.Python.ORDER_ATOMIC]};Blockly.Python.procedures={};
Blockly.Python.procedures_defreturn=function(){for(var a=Blockly.Variables.allVariables(this),b=a.length-1;0<=b;b--){var c=a[b];-1==this.arguments_.indexOf(c)?a[b]=Blockly.Python.variableDB_.getName(c,Blockly.Variables.NAME_TYPE):a.splice(b,1)}a=a.length?"  global "+a.join(", ")+"\n":"";b=Blockly.Python.variableDB_.getName(this.getTitleValue("NAME"),Blockly.Procedures.NAME_TYPE);c=Blockly.Python.statementToCode(this,"STACK");Blockly.Python.INFINITE_LOOP_TRAP&&(c=Blockly.Python.INFINITE_LOOP_TRAP.replace(/%1/g,'"'+
this.id+'"')+c);var d=Blockly.Python.valueToCode(this,"RETURN",Blockly.Python.ORDER_NONE)||"";d?d="  return "+d+"\n":c||(c="  pass");for(var e=[],f=0;f<this.arguments_.length;f++)e[f]=Blockly.Python.variableDB_.getName(this.arguments_[f],Blockly.Variables.NAME_TYPE);a="def "+b+"("+e.join(", ")+"):\n"+a+c+d;a=Blockly.Python.scrub_(this,a);Blockly.Python.definitions_[b]=a;return null};Blockly.Python.procedures_defnoreturn=Blockly.Python.procedures_defreturn;
Blockly.Python.procedures_callreturn=function(){for(var a=Blockly.Python.variableDB_.getName(this.getTitleValue("NAME"),Blockly.Procedures.NAME_TYPE),b=[],c=0;c<this.arguments_.length;c++)b[c]=Blockly.Python.valueToCode(this,"ARG"+c,Blockly.Python.ORDER_NONE)||"None";return[a+"("+b.join(", ")+")",Blockly.Python.ORDER_FUNCTION_CALL]};
Blockly.Python.procedures_callnoreturn=function(){for(var a=Blockly.Python.variableDB_.getName(this.getTitleValue("NAME"),Blockly.Procedures.NAME_TYPE),b=[],c=0;c<this.arguments_.length;c++)b[c]=Blockly.Python.valueToCode(this,"ARG"+c,Blockly.Python.ORDER_NONE)||"None";return a+"("+b.join(", ")+")\n"};
Blockly.Python.procedures_ifreturn=function(){var a="if "+(Blockly.Python.valueToCode(this,"CONDITION",Blockly.Python.ORDER_NONE)||"False")+":\n";if(this.hasReturnValue_)var b=Blockly.Python.valueToCode(this,"VALUE",Blockly.Python.ORDER_NONE)||"None",a=a+("  return "+b+"\n");else a+="  return\n";return a};Blockly.Python.colour={};Blockly.Python.colour_picker=function(){return["'"+this.getTitleValue("COLOUR")+"'",Blockly.Python.ORDER_ATOMIC]};Blockly.Python.colour_random=function(){Blockly.Python.definitions_.import_random="import random";return["'#%06x' % random.randint(0, 2**24 - 1)",Blockly.Python.ORDER_FUNCTION_CALL]};
Blockly.Python.colour_rgb=function(){var a=Blockly.Python.provideFunction_("colour_rgb",["def "+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(r, g, b):","  r = round(min(100, max(0, r)) * 2.55)","  g = round(min(100, max(0, g)) * 2.55)","  b = round(min(100, max(0, b)) * 2.55)","  return '#%02x%02x%02x' % (r, g, b)"]),b=Blockly.Python.valueToCode(this,"RED",Blockly.Python.ORDER_NONE)||0,c=Blockly.Python.valueToCode(this,"GREEN",Blockly.Python.ORDER_NONE)||0,d=Blockly.Python.valueToCode(this,"BLUE",
Blockly.Python.ORDER_NONE)||0;return[a+"("+b+", "+c+", "+d+")",Blockly.Python.ORDER_FUNCTION_CALL]};
Blockly.Python.colour_blend=function(){var a=Blockly.Python.provideFunction_("colour_blend",["def "+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(colour1, colour2, ratio):","  r1, r2 = int(colour1[1:3], 16), int(colour2[1:3], 16)","  g1, g2 = int(colour1[3:5], 16), int(colour2[3:5], 16)","  b1, b2 = int(colour1[5:7], 16), int(colour2[5:7], 16)","  ratio = min(1, max(0, ratio))","  r = round(r1 * (1 - ratio) + r2 * ratio)","  g = round(g1 * (1 - ratio) + g2 * ratio)","  b = round(b1 * (1 - ratio) + b2 * ratio)",
"  return '#%02x%02x%02x' % (r, g, b)"]),b=Blockly.Python.valueToCode(this,"COLOUR1",Blockly.Python.ORDER_NONE)||"'#000000'",c=Blockly.Python.valueToCode(this,"COLOUR2",Blockly.Python.ORDER_NONE)||"'#000000'",d=Blockly.Python.valueToCode(this,"RATIO",Blockly.Python.ORDER_NONE)||0;return[a+"("+b+", "+c+", "+d+")",Blockly.Python.ORDER_FUNCTION_CALL]};Blockly.Python.control={};
Blockly.Python.controls_if=function(){for(var a=0,b=Blockly.Python.valueToCode(this,"IF"+a,Blockly.Python.ORDER_NONE)||"False",c=Blockly.Python.statementToCode(this,"DO"+a)||"  pass\n",d="if "+b+":\n"+c,a=1;a<=this.elseifCount_;a++)b=Blockly.Python.valueToCode(this,"IF"+a,Blockly.Python.ORDER_NONE)||"False",c=Blockly.Python.statementToCode(this,"DO"+a)||"  pass\n",d+="elif "+b+":\n"+c;this.elseCount_&&(c=Blockly.Python.statementToCode(this,"ELSE")||"  pass\n",d+="else:\n"+c);return d};
Blockly.Python.controls_repeat=function(){var a=parseInt(this.getTitleValue("TIMES"),10),b=Blockly.Python.statementToCode(this,"DO")||"  pass\n";Blockly.Python.INFINITE_LOOP_TRAP&&(b=Blockly.Python.INFINITE_LOOP_TRAP.replace(/%1/g,"'"+this.id+"'")+b);return"for "+Blockly.Python.variableDB_.getDistinctName("count",Blockly.Variables.NAME_TYPE)+" in range("+a+"):\n"+b};
Blockly.Python.controls_repeat_ext=function(){var a=Blockly.Python.valueToCode(this,"TIMES",Blockly.Python.ORDER_NONE)||"0",a=Blockly.isNumber(a)?parseInt(a,10):"int("+a+")",b=Blockly.Python.statementToCode(this,"DO")||"  pass\n";Blockly.Python.INFINITE_LOOP_TRAP&&(b=Blockly.Python.INFINITE_LOOP_TRAP.replace(/%1/g,"'"+this.id+"'")+b);return"for "+Blockly.Python.variableDB_.getDistinctName("count",Blockly.Variables.NAME_TYPE)+" in range("+a+"):\n"+b};
Blockly.Python.controls_whileUntil=function(){var a="UNTIL"==this.getTitleValue("MODE"),a=Blockly.Python.valueToCode(this,"BOOL",a?Blockly.Python.ORDER_LOGICAL_NOT:Blockly.Python.ORDER_NONE)||"False",b=Blockly.Python.statementToCode(this,"DO")||"  pass\n";Blockly.Python.INFINITE_LOOP_TRAP&&(b=Blockly.Python.INFINITE_LOOP_TRAP.replace(/%1/g,'"'+this.id+'"')+b);"UNTIL"==this.getTitleValue("MODE")&&(a.match(/^\w+$/)||(a="("+a+")"),a="not "+a);return"while "+a+":\n"+b};
Blockly.Python.controls_for=function(){var a=Blockly.Python.variableDB_.getName(this.getTitleValue("VAR"),Blockly.Variables.NAME_TYPE),b=Blockly.Python.valueToCode(this,"FROM",Blockly.Python.ORDER_NONE)||"0",c=Blockly.Python.valueToCode(this,"TO",Blockly.Python.ORDER_NONE)||"0",d=Blockly.Python.valueToCode(this,"BY",Blockly.Python.ORDER_NONE)||"1",e=Blockly.Python.statementToCode(this,"DO")||"  pass\n";Blockly.Python.INFINITE_LOOP_TRAP&&(e=Blockly.Python.INFINITE_LOOP_TRAP.replace(/%1/g,'"'+this.id+
'"')+e);var f="",g;g=function(){return Blockly.Python.provideFunction_("upRange",["def "+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(start, stop, step):","  while start <= stop:","    yield start","    start += abs(step)"])};var h=function(){return Blockly.Python.provideFunction_("downRange",["def "+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(start, stop, step):","  while start >= stop:","    yield start","    start -= abs(step)"])};if(Blockly.isNumber(b)&&Blockly.isNumber(c)&&Blockly.isNumber(d))b=
parseFloat(b),c=parseFloat(c),d=Math.abs(parseFloat(d)),0===b%1&&0===c%1&&0===d%1?(b<=c?(c++,g=0==b&&1==d?c:b+", "+c,1!=d&&(g+=", "+d)):(c--,g=b+", "+c+", -"+d),g="range("+g+")"):(g=b<c?g():h(),g+="("+b+", "+c+", "+d+")");else{var k=function(b,c){if(Blockly.isNumber(b))b=parseFloat(b);else if(b.match(/^\w+$/))b="float("+b+")";else{var d=Blockly.Python.variableDB_.getDistinctName(a+c,Blockly.Variables.NAME_TYPE);f+=d+" = float("+b+")\n";b=d}return b},b=k(b,"_start"),c=k(c,"_end");k(d,"_inc");g="number"==
typeof b&&"number"==typeof c?b<c?g(b,c,d):h(b,c,d):"("+b+" <= "+c+") and "+g()+"("+b+", "+c+", "+d+") or "+h()+"("+b+", "+c+", "+d+")"}return f+="for "+a+" in "+g+":\n"+e};
Blockly.Python.controls_forEach=function(){var a=Blockly.Python.variableDB_.getName(this.getTitleValue("VAR"),Blockly.Variables.NAME_TYPE),b=Blockly.Python.valueToCode(this,"LIST",Blockly.Python.ORDER_RELATIONAL)||"[]",c=Blockly.Python.statementToCode(this,"DO")||"  pass\n";Blockly.Python.INFINITE_LOOP_TRAP&&(c=Blockly.Python.INFINITE_LOOP_TRAP.replace(/%1/g,'"'+this.id+'"')+c);return"for "+a+" in "+b+":\n"+c};
Blockly.Python.controls_flow_statements=function(){switch(this.getTitleValue("FLOW")){case "BREAK":return"break\n";case "CONTINUE":return"continue\n"}throw"Unknown flow statement.";};Blockly.Python=Blockly.Generator.get("Python");Blockly.Python.RESERVED_WORDS_||(Blockly.Python.RESERVED_WORDS_="");
Blockly.Python.lowlevel_package_main=function(){for(var a=0;a<this.importCount_;a++){var b=0,c=Blockly.Python.valueToCode(this,"IMPORT"+a,Blockly.Python.ORDER_NONE)||(b=1);0==b&&2<c.length&&(c=c.replace(/[']/g,""),Blockly.Python.definitions_["import_"+c]="import "+c,Blockly.Python.RESERVED_WORDS_+=c+",")}for(a=0;a<this.from_importCount_;a++)b=0,c=Blockly.Python.valueToCode(this,"FROM_IMPORT"+a,Blockly.Python.ORDER_NONE)||(b=1),0==b&&(Blockly.Python.definitions_[c]=c);a=this.getTitleValue("ROSPaName");
Blockly.Python.definitions_.import_roslib='import roslib; roslib.load_manifest("'+a+'")';Blockly.Python.definitions_.import_rospy="import rospy";Blockly.Python.RESERVED_WORDS_+="roslib,rospy,";return'if __name__=="__main__":\n'+(Blockly.Python.statementToCode(this,"MAINSTACK")||"  pass\n")};Blockly.Python.lowlevel_from_x_import=function(){var a=this.getTitleValue("FROM"),b=this.getTitleValue("IMPORT")||"*",c="";a&&(Blockly.Python.RESERVED_WORDS_+=a+","+b+",",c="from "+a+" import "+b);return[c,Blockly.Python.ORDER_MEMBER]};
Blockly.Python.lowlevel_create_publisher=function(){var a=Blockly.Python.valueToCode(this,"NODE",Blockly.Python.ORDER_NONE)||"",a=a.replace(/[']/g,""),b=this.getTitleValue("VAR")||"pub",c=Blockly.Python.valueToCode(this,"TYPE",Blockly.Python.ORDER_NONE)||"",c=c.replace(/['"]/g,"");return b+" = rospy.Publisher('"+a+"', "+c+") \n"};
Blockly.Python.lowlevel_publish=function(){var a=this.getTitleValue("VAR")||void 0,b=Blockly.Python.valueToCode(this,"MSG",Blockly.Python.ORDER_NONE)||"";return a+".publish("+b+")\n"};Blockly.Python.lowlevel_subscriber=function(){var a=Blockly.Python.valueToCode(this,"NODE",Blockly.Python.ORDER_NONE)||"",b=Blockly.Python.valueToCode(this,"TYPE",Blockly.Python.ORDER_NONE)||"",c=this.getTitleValue("PROC_NAME")||"";return"rospy.Subscriber("+a+", "+b+", "+c+")\n"};
Blockly.Python.lowlevel_ros_init_node=function(){var a=Blockly.Python.valueToCode(this,"NAME",Blockly.Python.ORDER_NONE)||"'edufill_blockly_node'",b="TRUE"==this.getTitleValue("TOGGLE_ANONYM")?"True":"False",c=this.getTitleValue("MODE_LOG"),d="TRUE"==this.getTitleValue("TOGGLE_SIG")?"True":"False",a="rospy.init_node("+a;"EMPTY"!=b&&(a+=", anonymous="+b);"EMPTY"!=c&&(a+=", log_level=rospy."+c);"EMPTY"!=d&&(a+=", disable_signals="+d);return a+") \n"};Blockly.Python.lowlevel_ros_spin=function(){return"rospy.spin() \n"};
Blockly.Python.lowlevel_ros_cancelled=function(){return["rospy.is_shutdown()",Blockly.Python.ORDER_ATOMIC]};Blockly.Python.lowlevel_ros_log=function(){var a="LANG_LOW_LEVEL_ROS_LOG_"+this.getTitleValue("MODE"),b=Blockly.Python.valueToCode(this,"LOG_MSG",Blockly.Python.ORDER_NONE)||"";return"rospy.log"+Blockly[a]+"("+b+")\n"};Blockly.Python.lowlevel_ros_sleep=function(){return"rospy.sleep("+(Blockly.Python.valueToCode(this,"TIME",Blockly.Python.ORDER_NONE)||0.1)+") \n"};
Blockly.Python.lowlevel_move_base_goal=function(){Blockly.Python.definitions_["from_move_base_msgs.msg_import_*"]="from move_base_msgs.msg import *";Blockly.Python.RESERVED_WORDS_+="move_base_msgs.msg,";Blockly.Python.definitions_.def_move_base_goal="def move_base_goal(pose):\n  goal = MoveBaseGoal()\n  goal.target_pose = pose\n\n  return goal\n";return["move_base_goal("+Blockly.Python.valueToCode(this,"POSE",Blockly.Python.ORDER_NONE)+")",Blockly.Python.ORDER_ATOMIC]};
Blockly.Python.lowlevel_get_ros_time=function(){Blockly.Python.definitions_.import_rospy="import rospy";Blockly.Python.RESERVED_WORDS_+="rospy,";return["rospy.get_time()",Blockly.Python.ORDER_ATOMIC]};Blockly.Python.lowlevel_get_ros_time_in_unit=function(){return[(Blockly.Python.valueToCode(this,"TIME",Blockly.Python.ORDER_NONE)||"None")+".secs",Blockly.Python.ORDER_ATOMIC]};
Blockly.Python.lowlevel_laserscan_ranges_and_angles=function(){Blockly.Python.definitions_.import_read_laser_scan_component="import read_laser_scan_component";Blockly.Python.RESERVED_WORDS_+="read_laser_scan_component,";return["read_laser_scan_component.ranges_and_angles()",Blockly.Python.ORDER_ATOMIC]};
Blockly.Python.lowlevel_laserscan_inrange=function(){Blockly.Python.definitions_.import_read_laser_scan_component="import read_laser_scan_component";Blockly.Python.RESERVED_WORDS_+="read_laser_scan_component,";var a=Blockly.Python.valueToCode(this,"FROM",Blockly.Python.ORDER_NONE),b=Blockly.Python.valueToCode(this,"TO",Blockly.Python.ORDER_NONE);return["read_laser_scan_component.distances(["+a+", "+b+"])",Blockly.Python.ORDER_ATOMIC]};
Blockly.Python.lowlevel_laserscan_closest_distance=function(){Blockly.Python.definitions_.import_read_laser_scan_component="import read_laser_scan_component";Blockly.Python.RESERVED_WORDS_+="read_laser_scan_component,";return["read_laser_scan_component.angle_of_closest_distance()",Blockly.Python.ORDER_ATOMIC]};
Blockly.Python.lowlevel_read_arm_joint_positions=function(){Blockly.Python.definitions_.import_read_arm_component="import read_arm_component";Blockly.Python.RESERVED_WORDS_+="read_arm_component,";return["read_arm_component.arm_joint_positions()",Blockly.Python.ORDER_ATOMIC]};
Blockly.Python.lowlevel_read_finger_positions=function(){Blockly.Python.definitions_.import_read_arm_component="import read_arm_component";Blockly.Python.RESERVED_WORDS_+="read_arm_component,";return["read_arm_component.gripper_joint_positions()",Blockly.Python.ORDER_ATOMIC]};
Blockly.Python.lowlevel_read_ultrasonic=function(){Blockly.Python.definitions_.import_read_ultrasonic_range_component="import read_ultrasonic_range_component";Blockly.Python.RESERVED_WORDS_+="read_ultrasonic_range_component,";return["read_ultrasonic_range_component.distance()",Blockly.Python.ORDER_ATOMIC]};
Blockly.Python.lowlevel_odometry=function(){Blockly.Python.definitions_.import_read_base_component="import read_base_component";Blockly.Python.RESERVED_WORDS_+="read_base_component,";return["read_base_component.odometry()",Blockly.Python.ORDER_ATOMIC]};
Blockly.Python.lowlevel_quaternion_from_euler=function(){Blockly.Python.definitions_.import_tf="import tf";Blockly.Python.RESERVED_WORDS_+="tf,";var a=Blockly.Python.valueToCode(this,"ROLL",Blockly.Python.ORDER_NONE)||"0",b=Blockly.Python.valueToCode(this,"PITCH",Blockly.Python.ORDER_NONE)||"0",c=Blockly.Python.valueToCode(this,"YAW",Blockly.Python.ORDER_NONE)||"0";return["tf.transformations.quaternion_from_euler("+a+","+b+","+c+")",Blockly.Python.ORDER_ATOMIC]};
Blockly.Python.lowlevel_is_wall=function(){Blockly.Python.definitions_.import_read_laser_scan_component="import read_laser_scan_component";Blockly.Python.RESERVED_WORDS_+="read_laser_scan_component,";var a=Blockly.Python.valueToCode(this,"ANGLE",Blockly.Python.ORDER_NONE)||"0",b=Blockly.Python.valueToCode(this,"DISTANCE",Blockly.Python.ORDER_NONE);return["read_laser_scan_component.is_wall("+a+", "+b+")",Blockly.Python.ORDER_ATOMIC]};
Blockly.Python.lowlevel_get_param=function(){Blockly.Python.definitions_.import_rospy="import rospy";Blockly.Python.RESERVED_WORDS_+="rospy,";var a="CONFIG_PARAMETER_"+this.getTitleValue("MODE");return["rospy.get_param("+Blockly[a]+")",Blockly.Python.ORDER_ATOMIC]};Blockly.Python.ros_other_node=function(){return[this.getTitleValue("NODE")||"",Blockly.Python.ORDER_ATOMIC]};
Blockly.Python.try_catch=function(){var a=Blockly.Python.statementToCode(this,"TRY")||"  pass\n",b=Blockly.Python.variableDB_.getName(this.getTitleValue("VAR"),Blockly.Variables.NAME_TYPE),c=Blockly.Python.statementToCode(this,"CATCH")||"  pass\n";return"try: \n"+a+"except Exception, "+b+":\n"+c};Blockly.Python=Blockly.Generator.get("Python");Blockly.Python.RESERVED_WORDS_||(Blockly.Python.RESERVED_WORDS_="");Blockly.Python.vector=function(){Blockly.Python.definitions_.import_numpy_as_np="import numpy as np";Blockly.Python.RESERVED_WORDS_+="numpy,np,";for(var a="[",a=[],b=0;b<this.valueCount_;b++){var c=Blockly.Python.valueToCode(this,"VALUE"+b,Blockly.Python.ORDER_NONE)||"0";a.push("["+c+"]")}a="np.array(["+a.join(",")+"])";return[a,Blockly.Python.ORDER_MEMBER]};
Blockly.Python.matrix=function(){Blockly.Python.definitions_.import_numpy_as_np="import numpy as np";Blockly.Python.RESERVED_WORDS_+="numpy,np,";for(var a="[",a=[],b=0;b<this.rowCount_;b++){var c=Blockly.Python.valueToCode(this,"ROW"+b,Blockly.Python.ORDER_NONE)||"[0]";a.push(c)}a="np.array(["+a.join(",")+"])";return[a,Blockly.Python.ORDER_MEMBER]};
Blockly.Python.row=function(){Blockly.Python.definitions_.import_numpy_as_np="import numpy as np";Blockly.Python.RESERVED_WORDS_+="numpy,np,";for(var a="[",a=[],b=0;b<this.columnCount_;b++){var c=Blockly.Python.valueToCode(this,"COL"+b,Blockly.Python.ORDER_NONE)||"0";a.push(c)}a="["+a.join(",")+"]";return[a,Blockly.Python.ORDER_MEMBER]};
Blockly.Python.axis_rotation=function(){Blockly.Python.definitions_.import_numpy_as_np="import numpy as np";Blockly.Python.definitions_.import_math="import math";Blockly.Python.RESERVED_WORDS_+="numpy,np,math,";var a=this.getTitleValue("MODE"),b=Blockly.Python.valueToCode(this,"DEG",Blockly.Python.ORDER_NONE)||"0",c="";"X"==a?c="np.array([\\\n[1,0,0],\\\n[0,math.cos("+b+" / 180.0 * math.pi),-math.sin("+b+" / 180.0 * math.pi)],\\\n[0,math.sin("+b+" / 180.0 * math.pi),math.cos("+b+" / 180.0 * math.pi)]\\\n])":
"Y"==a?c="np.array([\\\n[math.cos("+b+" / 180.0 * math.pi), 0 ,math.sin("+b+" / 180.0 * math.pi)],\\\n[0,1,0],\\\n[-math.sin("+b+" / 180.0 * math.pi),0,math.cos("+b+" / 180.0 * math.pi)]\\\n])":"Z"==a&&(c="np.array([\\\n[math.cos("+b+" / 180.0 * math.pi),-math.sin("+b+" / 180.0 * math.pi),0],\\\n[math.sin("+b+" / 180.0 * math.pi),math.cos("+b+" / 180.0 * math.pi),0],\\\n[0,0,1]\\\n])");return[c,Blockly.Python.ORDER_ATOMIC]};
Blockly.Python.matrix_multiplication=function(){Blockly.Python.definitions_.import_numpy_as_np="import numpy as np";Blockly.Python.RESERVED_WORDS_+="numpy,np,";var a=Blockly.Python.valueToCode(this,"A",Blockly.Python.ORDER_NONE),b=Blockly.Python.valueToCode(this,"B",Blockly.Python.ORDER_NONE);return[a+".dot("+b+")",Blockly.Python.ORDER_ATOMIC]};
Blockly.Python.matrix_add_and_sub=function(){Blockly.Python.definitions_.import_numpy_as_np="import numpy as np";Blockly.Python.RESERVED_WORDS_+="numpy,np,";var a=Blockly.Python.valueToCode(this,"A",Blockly.Python.ORDER_NONE),b=Blockly.Python.valueToCode(this,"B",Blockly.Python.ORDER_NONE),c=Blockly.Python.matrix_add_and_sub_operators[this.getTitleValue("MODE")];return[a+c+b,Blockly.Python.ORDER_ATOMIC]};Blockly.Python.matrix_add_and_sub_operators={ADD:"+",SUB:"-"};
Blockly.Python.matrix_create_frame=function(){Blockly.Python.definitions_.import_numpy_as_np="import numpy as np";Blockly.Python.RESERVED_WORDS_+="numpy,np,";var a=Blockly.Python.valueToCode(this,"TRANSLATION",Blockly.Python.ORDER_NONE)||"[[0],[0],[0]]",b=Blockly.Python.valueToCode(this,"ROTATION",Blockly.Python.ORDER_NONE)||"[[1,0,0],[0,1,0],[0,0,1]]";this.getTitleValue("NAME");return["np.concatenate((np.concatenate(("+b+","+a+"),axis=1),[[0,0,0,1]]),axis=0)",Blockly.Python.ORDER_ATOMIC]};Blockly.GEN_HIGH_LEVEL_MOVE_ROBOT_TO_CUBE_DEF='def move_robot_to_cube(cube_color): \n  print "Search for cube." \n  var cube_pos = find_cube(cube_color, 1, "base_link") \n  print "IF found: Move base near cube. \\n ELSE: Turn on the spot OR move randomly and search again." \n';Blockly.GEN_HIGH_LEVEL_GRASP_CUBE_DEF='def grasp_cube(cube_color): \n  var cube_pos = find_cube(cube_color, 1, "arm_link_0") \n  print "Search for cube."  print "IF found: Move arm to cube. ELSE: error" \n  print "Close gripper" \n  move_gripper_component.move("CLOSE") \n';
Blockly.GEN_HIGH_LEVEL_BASE_PLACEMENT_DEF="def base_placement(): \n  rospy.init_node('raw_base_placement_test_script') \n\n  ### tf listener \n  tf_listener = tf.TransformListener() \n\n  # BASE PLACEMENT \n  shiftbase_srv = rospy.ServiceProxy('/raw_relative_movements/shiftbase', raw_srvs.srv.SetPoseStamped) \n\n  print \"wait for service: /raw_relative_movements/shiftbase\"   \n  rospy.wait_for_service('/raw_relative_movements/shiftbase', 30) \n\n  goalpose = geometry_msgs.msg.PoseStamped() \n  goalpose.pose.position.x = 0.1 \n  goalpose.pose.position.y = 0.1 \n  goalpose.pose.position.z = 0.1 \n  quat = tf.transformations.quaternion_from_euler(0,0,0) \n  goalpose.pose.orientation.x = quat[0] \n  goalpose.pose.orientation.y = quat[1] \n  goalpose.pose.orientation.z = quat[2] \n  goalpose.pose.orientation.w = quat[3] \n\n  print \"GOAL POSE TRANSFORMED: \", goalpose \n  # call base placement service \n  base_pose = moveoptimalbase_srv(goalpose) \n\n  goalpose = geometry_msgs.msg.PoseStamped() \n  goalpose.pose.position.x = -0.1 \n  goalpose.pose.position.y = -0.1 \n  goalpose.pose.position.z = 0.1 \n  quat = tf.transformations.quaternion_from_euler(0,0,0) \n  goalpose.pose.orientation.x = quat[0] \n  goalpose.pose.orientation.y = quat[1] \n  goalpose.pose.orientation.z = quat[2] \n  goalpose.pose.orientation.w = quat[3] \n\n  print \"GOAL POSE TRANSFORMED: \", goalpose \n  # call relative movment service \n  base_pose = shiftbase_srv (goalpose)  \n";
Blockly.GEN_HIGH_LEVEL_SIMPLE_ARM_MOVEMENT_DEF='def simple_arm_movement: \n  pub = rospy.Publisher(\'arm_1/arm_controller/position_command\', JointPositions) \n  rospy.init_node(\'simple_arm_gripper_position\') \n  rospy.sleep(0.5) \n\n  try: \n    jp = JointPositions() \n\n    jv1 = JointValue() \n    jv1.joint_uri = "arm_joint_1" \n    jv1.value = 0.1 \n    jv1.unit = "rad" \n\n    jv2 = JointValue() \n    jv2.joint_uri = "arm_joint_2" \n    jv2.value = 0.1 \n    jv2.unit = "rad" \n\n    jv3 = JointValue() \n    jv3.joint_uri = "arm_joint_3" \n    jv3.value = -0.1 \n    jv3.unit = "rad" \n\n    jv4 = JointValue() \n    jv4.joint_uri = "arm_joint_4" \n    jv4.value = 0.1 \n    jv4.unit = "rad" \n\n    jv5 = JointValue() \n    jv5.joint_uri = "arm_joint_5" \n    jv5.value = 0.1 \n    jv5.unit = "rad" \n\n    p = Poison() \n    print p  \n    jp.poisonStamp = p \n    jp.positions = [jv1, jv2, jv3, jv4, jv5] \n\n    pub.publish(jp) \n    pub.publish(jp) \n\n  except Exception, e: \n    print e';
Blockly.GEN_MID_LEVEL_FIND_CUBE_DEF='def find_cube (cube_color, reference_frame):\n  #Dummy body with a dummy list and a print command \n  print "Search for " + cube_color + " colored cube related to " + reference_frame + "." \n  list_of_transforms = [[0, 0, 0],[1,0,1]] \n  return list_of_transforms \n';Blockly.GEN_MID_LEVEL_ROS_MOVE_BASE_TWIST_DEF='def ros_move_base_twist (lx, ly, lz, ax, ay, az):\n  pub = rospy.Publisher("cmd_vel", Twist) \n\n  twist = Twist() \n  # set velocities \n  twist.linear.x = lx \n  twist.linear.y = ly \n  twist.linear.z = lz \n  twist.angular.x = ax \n  twist.angular.y = ay \n  twist.angular.z = az \n  # publish the topic \n  pub.publish(twist) \n\n';Blockly.Python.logic={};Blockly.Python.logic_compare=function(){var a=this.getTitleValue("OP"),a=Blockly.Python.logic_compare.OPERATORS[a],b=Blockly.Python.ORDER_RELATIONAL,c=Blockly.Python.valueToCode(this,"A",b)||"0",d=Blockly.Python.valueToCode(this,"B",b)||"0";return[c+" "+a+" "+d,b]};Blockly.Python.logic_compare.OPERATORS={EQ:"==",NEQ:"!=",LT:"<",LTE:"<=",GT:">",GTE:">="};
Blockly.Python.logic_operation=function(){var a="AND"==this.getTitleValue("OP")?"and":"or",b="and"==a?Blockly.Python.ORDER_LOGICAL_AND:Blockly.Python.ORDER_LOGICAL_OR,c=Blockly.Python.valueToCode(this,"A",b)||"False",d=Blockly.Python.valueToCode(this,"B",b)||"False";return[c+" "+a+" "+d,b]};Blockly.Python.logic_negate=function(){return["not "+(Blockly.Python.valueToCode(this,"BOOL",Blockly.Python.ORDER_LOGICAL_NOT)||"False"),Blockly.Python.ORDER_LOGICAL_NOT]};
Blockly.Python.logic_boolean=function(){return["TRUE"==this.getTitleValue("BOOL")?"True":"False",Blockly.Python.ORDER_ATOMIC]};Blockly.Python.logic_null=function(){return["None",Blockly.Python.ORDER_ATOMIC]};
Blockly.Python.logic_ternary=function(){var a=Blockly.Python.valueToCode(this,"IF",Blockly.Python.ORDER_CONDITIONAL)||"False",b=Blockly.Python.valueToCode(this,"THEN",Blockly.Python.ORDER_CONDITIONAL)||"None",c=Blockly.Python.valueToCode(this,"ELSE",Blockly.Python.ORDER_CONDITIONAL)||"None";return[b+" if "+a+" else "+c,Blockly.Python.ORDER_CONDITIONAL]};Blockly.Python.lists={};Blockly.Python.lists_create_empty=function(){return["[]",Blockly.Python.ORDER_ATOMIC]};Blockly.Python.lists_create_with=function(){for(var a=Array(this.itemCount_),b=0;b<this.itemCount_;b++)a[b]=Blockly.Python.valueToCode(this,"ADD"+b,Blockly.Python.ORDER_NONE)||"None";a="["+a.join(", ")+"]";return[a,Blockly.Python.ORDER_ATOMIC]};
Blockly.Python.lists_repeat=function(){var a=Blockly.Python.valueToCode(this,"ITEM",Blockly.Python.ORDER_NONE)||"None",b=Blockly.Python.valueToCode(this,"NUM",Blockly.Python.ORDER_MULTIPLICATIVE)||"0";return["["+a+"] * "+b,Blockly.Python.ORDER_MULTIPLICATIVE]};Blockly.Python.lists_length=function(){return["len("+(Blockly.Python.valueToCode(this,"VALUE",Blockly.Python.ORDER_NONE)||"[]")+")",Blockly.Python.ORDER_FUNCTION_CALL]};
Blockly.Python.lists_isEmpty=function(){return["not len("+(Blockly.Python.valueToCode(this,"VALUE",Blockly.Python.ORDER_NONE)||"[]")+")",Blockly.Python.ORDER_LOGICAL_NOT]};
Blockly.Python.lists_indexOf=function(){var a=Blockly.Python.valueToCode(this,"FIND",Blockly.Python.ORDER_NONE)||"[]",b=Blockly.Python.valueToCode(this,"VALUE",Blockly.Python.ORDER_MEMBER)||"''";return[("FIRST"==this.getTitleValue("END")?Blockly.Python.provideFunction_("first_index",["def "+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(myList, elem):","  try: theIndex = myList.index(elem) + 1","  except: theIndex = 0","  return theIndex"]):Blockly.Python.provideFunction_("last_index",["def "+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+
"(myList, elem):","  try: theIndex = len(myList) - myList[::-1].index(elem)","  except: theIndex = 0","  return theIndex"]))+"("+b+", "+a+")",Blockly.Python.ORDER_MEMBER]};
Blockly.Python.lists_getIndex=function(){var a=this.getTitleValue("MODE")||"GET",b=this.getTitleValue("WHERE")||"FROM_START",c=Blockly.Python.valueToCode(this,"AT",Blockly.Python.ORDER_UNARY_SIGN)||"1",d=Blockly.Python.valueToCode(this,"VALUE",Blockly.Python.ORDER_MEMBER)||"[]";if("FIRST"==b){if("GET"==a)return[d+"[0]",Blockly.Python.ORDER_MEMBER];b=d+".pop(0)";if("GET_REMOVE"==a)return[b,Blockly.Python.ORDER_FUNCTION_CALL];if("REMOVE"==a)return b+"\n"}else if("LAST"==b){if("GET"==a)return[d+"[-1]",
Blockly.Python.ORDER_MEMBER];b=d+".pop()";if("GET_REMOVE"==a)return[b,Blockly.Python.ORDER_FUNCTION_CALL];if("REMOVE"==a)return b+"\n"}else if("FROM_START"==b){c=Blockly.isNumber(c)?parseInt(c,10)-1:"int("+c+" - 1)";if("GET"==a)return[d+"["+c+"]",Blockly.Python.ORDER_MEMBER];b=d+".pop("+c+")";if("GET_REMOVE"==a)return[b,Blockly.Python.ORDER_FUNCTION_CALL];if("REMOVE"==a)return b+"\n"}else if("FROM_END"==b){if("GET"==a)return[d+"[-"+c+"]",Blockly.Python.ORDER_MEMBER];b=d+".pop(-"+c+")";if("GET_REMOVE"==
a)return[b,Blockly.Python.ORDER_FUNCTION_CALL];if("REMOVE"==a)return b+"\n"}else if("RANDOM"==b){Blockly.Python.definitions_.import_random="import random";if("GET"==a)return["random.choice("+d+")",Blockly.Python.ORDER_FUNCTION_CALL];b=Blockly.Python.provideFunction_("lists_remove_random_item",["def "+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(myList):","  x = int(random.random() * len(myList))","  return myList.pop(x)"])+"("+d+")";if("GET"==a||"GET_REMOVE"==a)return[b,Blockly.Python.ORDER_FUNCTION_CALL];
if("REMOVE"==a)return b+"\n"}throw"Unhandled combination (lists_getIndex).";};
Blockly.Python.lists_setIndex=function(){var a=Blockly.Python.valueToCode(this,"LIST",Blockly.Python.ORDER_MEMBER)||"[]",b=this.getTitleValue("MODE")||"GET",c=this.getTitleValue("WHERE")||"FROM_START",d=Blockly.Python.valueToCode(this,"AT",Blockly.Python.ORDER_NONE)||"1",e=Blockly.Python.valueToCode(this,"TO",Blockly.Python.ORDER_NONE)||"None";if("FIRST"==c){if("SET"==b)return a+"[0] = "+e+"\n";if("INSERT"==b)return a+".insert(0, "+e+")\n"}else if("LAST"==c){if("SET"==b)return a+"[-1] = "+e+"\n";
if("INSERT"==b)return a+".append("+e+")\n"}else if("FROM_START"==c){d=Blockly.isNumber(d)?parseInt(d,10)-1:"int("+d+" - 1)";if("SET"==b)return a+"["+d+"] = "+e+"\n";if("INSERT"==b)return a+".insert("+d+", "+e+")\n"}else if("FROM_END"==c){if("SET"==b)return a+"[-"+d+"] = "+e+"\n";if("INSERT"==b)return a+".insert(-"+d+", "+e+")\n"}else if("RANDOM"==c){Blockly.Python.definitions_.import_random="import random";a.match(/^\w+$/)?c="":(c=Blockly.Python.variableDB_.getDistinctName("tmp_list",Blockly.Variables.NAME_TYPE),
d=c+" = "+a+"\n",a=c,c=d);d=Blockly.Python.variableDB_.getDistinctName("tmp_x",Blockly.Variables.NAME_TYPE);c+=d+" = int(random.random() * len("+a+"))\n";if("SET"==b)return c+(a+"["+d+"] = "+e+"\n");if("INSERT"==b)return c+=a+".insert("+d+", "+e+")\n"}throw"Unhandled combination (lists_setIndex).";};
Blockly.Python.lists_getSublist=function(){var a=Blockly.Python.valueToCode(this,"LIST",Blockly.Python.ORDER_MEMBER)||"[]",b=this.getTitleValue("WHERE1"),c=this.getTitleValue("WHERE2"),d=Blockly.Python.valueToCode(this,"AT1",Blockly.Python.ORDER_ADDITIVE)||"1",e=Blockly.Python.valueToCode(this,"AT2",Blockly.Python.ORDER_ADDITIVE)||"1";"FIRST"==b||"FROM_START"==b&&"1"==d?d="":"FROM_START"==b?d=Blockly.isNumber(d)?parseInt(d,10)-1:"int("+d+" - 1)":"FROM_END"==b&&(d=Blockly.isNumber(d)?-parseInt(d,10):
"-int("+d+")");"LAST"==c||"FROM_END"==c&&"1"==e?e="":"FROM_START"==b?e=Blockly.isNumber(e)?parseInt(e,10):"int("+e+")":"FROM_END"==b&&(Blockly.isNumber(e)?(e=1-parseInt(e,10),0==e&&(e="")):(Blockly.Python.definitions_.import_sys="import sys",e="int(1 - "+e+") or sys.maxsize"));return[a+"["+d+" : "+e+"]",Blockly.Python.ORDER_MEMBER]};Blockly.Python=Blockly.Generator.get("Python");Blockly.Python.RESERVED_WORDS_||(Blockly.Python.RESERVED_WORDS_="");Blockly.Python.units_duration=function(){return[Blockly.Python.valueToCode(this,"VALUE",Blockly.Python.ORDER_NONE)||0,Blockly.Python.ORDER_ATOMIC]};Blockly.Python.units_distance=function(){return[Blockly.Python.valueToCode(this,"VALUE",Blockly.Python.ORDER_NONE)||0,Blockly.Python.ORDER_ATOMIC]};
Blockly.Python.units_velocity=function(){return[Blockly.Python.valueToCode(this,"VALUE",Blockly.Python.ORDER_NONE)||0,Blockly.Python.ORDER_ATOMIC]};
Blockly.Python.units_6dPose=function(){var a=Blockly.Python.valueToCode(this,"LIN_X",Blockly.Python.ORDER_NONE)||0,b=Blockly.Python.valueToCode(this,"LIN_Y",Blockly.Python.ORDER_NONE)||0,c=Blockly.Python.valueToCode(this,"LIN_Z",Blockly.Python.ORDER_NONE)||0,d=Blockly.Python.valueToCode(this,"ROLL",Blockly.Python.ORDER_NONE)||0,e=Blockly.Python.valueToCode(this,"PITCH",Blockly.Python.ORDER_NONE)||0,f=Blockly.Python.valueToCode(this,"YAW",Blockly.Python.ORDER_NONE)||0;return["["+a+","+b+","+c+","+
d+","+e+","+f+"]",Blockly.Python.ORDER_ATOMIC]};Blockly.Python.units_get_6dpose_element=function(){var a=Blockly.Python.valueToCode(this,"POSE6D",Blockly.Python.ORDER_NONE)||"None",b=Blockly.Python.units_6dpose_element_operators[this.getTitleValue("MODE")];return[a+b,Blockly.Python.ORDER_ATOMIC]};Blockly.Python.units_6dpose_element_operators={LIN_X:"[0]",LIN_Y:"[1]",LIN_Z:"[2]",ROLL:"[3]",PITCH:"[4]",YAW:"[5]"};
Blockly.Python.units_set_6dpose_element=function(){var a=Blockly.Python.valueToCode(this,"POSE6D",Blockly.Python.ORDER_NONE)||"None",b=Blockly.Python.valueToCode(this,"VALUE",Blockly.Python.ORDER_NONE)||"0",c=Blockly.Python.units_6dpose_element_operators[this.getTitleValue("MODE")];return a+c+" = "+b+"\n"};
Blockly.Python.units_base_pose=function(){var a=Blockly.Python.valueToCode(this,"X",Blockly.Python.ORDER_NONE)||0,b=Blockly.Python.valueToCode(this,"Y",Blockly.Python.ORDER_NONE)||0,c=Blockly.Python.valueToCode(this,"THETA",Blockly.Python.ORDER_NONE)||0;return["["+a+","+b+","+c+"]",Blockly.Python.ORDER_ATOMIC]};
Blockly.Python.units_joints=function(){for(var a=this.jointCount_,b="",b=[],c=0;c<a;c++)b[c]=Blockly.Python.valueToCode(this,"JOINTVALUE"+c,Blockly.Python.ORDER_NONE)||"None";b="["+b.join(", ")+"]";return[b,Blockly.Python.ORDER_ATOMIC]};Blockly.Python.units_get_joints_element=function(){var a=Blockly.Python.valueToCode(this,"VALUE_POS",Blockly.Python.ORDER_NONE)||"1",a=parseInt(a);return[(Blockly.Python.valueToCode(this,"JOINTS",Blockly.Python.ORDER_NONE)||"[]")+"["+(a-1)+"]",Blockly.Python.ORDER_ATOMIC]};
Blockly.Python.units_set_joints=function(){var a=Blockly.Python.valueToCode(this,"VALUE_POS",Blockly.Python.ORDER_NONE)||"1",a=parseInt(a),b=Blockly.Python.valueToCode(this,"JOINTS",Blockly.Python.ORDER_NONE)||"[]",c=Blockly.Python.valueToCode(this,"NEW_VALUE",Blockly.Python.ORDER_NONE)||"None";return b+"["+(a-1)+"] = "+c+"\n"};
Blockly.Python.units_degToRad=function(){Blockly.Python.definitions_.import_math="import math";Blockly.Python.RESERVED_WORDS_+="math,";return["math.radians("+(Blockly.Python.valueToCode(this,"VALUE",Blockly.Python.ORDER_NONE)||0)+")",Blockly.Python.ORDER_ATOMIC]};Blockly.Python.units_radToDeg=function(){Blockly.Python.definitions_.import_math="import math";Blockly.Python.RESERVED_WORDS_+="math,";return["math.degrees("+(Blockly.Python.valueToCode(this,"VALUE",Blockly.Python.ORDER_NONE)||0)+")",Blockly.Python.ORDER_ATOMIC]};
Blockly.Python.units_eulerToQuaternion=function(){Blockly.Python.definitions_.import_math="import math";Blockly.Python.RESERVED_WORDS_+="math,";var a=Blockly.Python.valueToCode(this,"ROLL",Blockly.Python.ORDER_NONE)||0,b=Blockly.Python.valueToCode(this,"PITCH",Blockly.Python.ORDER_NONE)||0,c=Blockly.Python.valueToCode(this,"YAW",Blockly.Python.ORDER_NONE)||0;return["["+("math.sin("+a+"/2) * math.cos("+b+"/2) * math.cos("+c+"/2) + math.cos("+a+"/2) * math.sin("+b+"/2) * math.sin("+c+"/2)")+", \\\n"+
("math.cos("+a+"/2) * math.sin("+b+"/2) * math.cos("+c+"/2) - math.sin("+a+"/2) * math.cos("+b+"/2) * math.sin("+c+"/2)")+", \\\n"+("math.cos("+a+"/2) * math.cos("+b+"/2) * math.sin("+c+"/2) + math.sin("+a+"/2) * math.sin("+b+"/2) * math.cos("+c+"/2)")+", \\\n"+("math.cos("+a+"/2) * math.cos("+b+"/2) * math.cos("+c+"/2) - math.sin("+a+"/2) * math.sin("+b+"/2) * math.sin("+c+"/2)")+"]",Blockly.Python.ORDER_MEMBER]};
Blockly.Python.units_quaternionToEuler=function(){Blockly.Python.definitions_.import_math="import math";Blockly.Python.RESERVED_WORDS_+="math,";var a=Blockly.Python.valueToCode(this,"X",Blockly.Python.ORDER_NONE)||0,b=Blockly.Python.valueToCode(this,"Y",Blockly.Python.ORDER_NONE)||0,c=Blockly.Python.valueToCode(this,"Z",Blockly.Python.ORDER_NONE)||0,d=Blockly.Python.valueToCode(this,"W",Blockly.Python.ORDER_NONE)||0;return["["+("math.atan2(-2 * ("+b+" * "+c+" - "+d+" * "+a+"), "+d+" * "+d+" - "+a+
" * "+a+" - "+b+" * "+b+" + "+c+" * "+c+")")+", \\\n"+("math.asin(2 * ("+a+" * "+c+" + "+d+" * "+b+")")+", \\\n"+("math.atan2(-2 * ("+a+" * "+b+" - "+d+" * "+c+"), "+d+" * "+d+" + "+a+" * "+a+" - "+b+" * "+b+" - "+c+" * "+c+")")+"]",Blockly.Python.ORDER_MEMBER]};Blockly.Python=Blockly.Generator.get("Python");Blockly.Python.RESERVED_WORDS_||(Blockly.Python.RESERVED_WORDS_="");Blockly.Python.test=function(){var a=this.getTitleValue("STATE");if("TRUE"==a)a=Blockly.Python.statementToCode(this,this.changemode.appendInput1),a="if True: # '"+this.type+"' block is open and the underlying blocks are visible/used. \n"+a;else if("FALSE"==a)a="dummyFunction(closesBlock) \n";else throw"user changed value to an undefined state "+a;return a};
Blockly.Python.output_test=function(){return["no code required",Blockly.Python.ORDER_ATOMIC]};Blockly.Python.store_in_db=function(){return'print "store: '+(Blockly.Python.valueToCode(this,"STORE_VALUE",Blockly.Python.ORDER_NONE)||"nothing")+'" \n'};Blockly.Python.load_from_db=function(){return["load value",Blockly.Python.ORDER_NONE]};
Blockly.Python.move_robot_to_cube=function(){Blockly.Python.definitions_.list_of_transforms="list_of_transforms = None";Blockly.Python.definitions_.def_find_cube=Blockly.GEN_MID_LEVEL_FIND_CUBE_DEF;Blockly.Python.definitions_.def_move_robot_to_cube=Blockly.GEN_HIGH_LEVEL_MOVE_ROBOT_TO_CUBE_DEF;return'move_robot_to_cube("'+this.getTitleValue("MODE")+'") \n'};
Blockly.Python.move_robot_to_position=function(){var a="LANG_HIGH_LEVEL_PLACE_CUBE_"+this.getTitleValue("MODE");return'print "Move robot to '+Blockly[a]+'" \n'};Blockly.Python.turn_robot=function(){return'print "Turn robot around " + '+(Blockly.Python.valueToCode(this,"DEGREE",Blockly.Python.ORDER_NONE)||0)+' + " degree." \n'};
Blockly.Python.grasp_cube=function(){Blockly.Python.definitions_.list_of_transforms="list_of_transforms = None";Blockly.Python.definitions_.import_brics_actuator_msg="import brics_actuator.msg";Blockly.Python.definitions_["from_brics_actuator.msg_import_JointPosition_JointValue_Poison"]="from brics_actuator.msg import JointPositions, JointValue, Poison";Blockly.Python.RESERVED_WORDS_+="brics_actuator,brics,JointPositions,JointValue,Poison,";return'grasp_cube("'+this.getTitleValue("MODE")+'") \n'};
Blockly.Python.place_cube=function(){var a="LANG_HIGH_LEVEL_PLACE_CUBE_"+this.getTitleValue("MODE_DEST"),b="LANG_HIGH_LEVEL_PLACE_CUBE_"+this.getTitleValue("MODE_REF");return'print "Place grasped cube '+Blockly[a]+" "+Blockly[b]+'" \n'};Blockly.Python.wall_follower=function(){var a="LANG_HIGH_LEVEL_WALL_FOLLOWER_"+this.getTitleValue("MODE");return'print "Follow the '+Blockly[a]+' wall until ..." \n'};
Blockly.Python.fetch_and_carry=function(){var a="LANG_FIND_CUBE_"+this.getTitleValue("MODE_COL"),b="LANG_HIGH_LEVEL_PLACE_CUBE_"+this.getTitleValue("MODE_DEST"),c="LANG_HIGH_LEVEL_PLACE_CUBE_"+this.getTitleValue("MODE_REF");return'print "Move robot to init position." \nprint "Search for a '+Blockly[a]+' cube." \nprint "Move to the '+Blockly[a]+' cube and grasp it." \nprint "Put it '+Blockly[b]+" "+Blockly[c]+'." \n'};
Blockly.Python.tftransform=function(){var a=Blockly.Python.valueToCode(this,"OBJ_FRAME",Blockly.Python.ORDER_NONE)||"/undefined_string",b=Blockly.Python.valueToCode(this,"REF_FRAME",Blockly.Python.ORDER_NONE)||"/undefined_string",c=Blockly.Python.valueToCode(this,"DURATION",Blockly.Python.ORDER_NONE)||2;return['print "Get the transformation from object frame " + '+a+' + " to reference frame " + '+b+'+ " and search for maximal " + '+c+' + " seconds" \n',Blockly.Python.ORDER_ATOMIC]};
Blockly.Python.base_placement=function(){Blockly.Python.definitions_.import_rospy="import rospy";Blockly.Python.definitions_.import_geometry_msgs_msg="import geometry_msgs.msg";Blockly.Python.definitions_.import_raw_srvs_srv="import raw_srvs.srv";Blockly.Python.definitions_.import_std_srvs_srv="import std_srvs.srv";Blockly.Python.definitions_.import_tf="import tf";Blockly.Python.definitions_["from_simple_script_server_import_*"]="from simple_script_server import *";Blockly.Python.RESERVED_WORDS_+=
"rospy,geometry_msgs,raw_srvs,std_srvs,tf,simple_script_server,";Blockly.Python.definitions_.def_base_placement=Blockly.GEN_HIGH_LEVEL_BASE_PLACEMENT_DEF;return"base_placement() \n"};Blockly.Python.find_and_grasp_object=function(){Blockly.Python.definitions_.import_find_and_grasp_component="import find_and_grasp_component  #/edufill_scenario/src/find_and_grasp_component.py";Blockly.Python.RESERVED_WORDS_+="find_and_grasp_component,";return"find_and_grasp_component() \n"};
Blockly.Python.detect_and_reach_object=function(){var a="LANG_HIGH_LEVEL_FIND_AND_GRASP_OBJECT_"+this.getTitleValue("MODE");return'print "detect and reach '+Blockly[a]+'"\n'};Blockly.Python=Blockly.Generator.get("Python");Blockly.Python.RESERVED_WORDS_||(Blockly.Python.RESERVED_WORDS_="");
Blockly.Python.midlevel_move_gripper=function(){var a=this.getTitleValue("STATE"),b;"TRUE"==a?(a=Blockly.Python.statementToCode(this,this.changemode.appendInput),b="if True: # '"+this.type+"' block is open and the underlying blocks are visible/used. \n"+a):"FALSE"==a&&(Blockly.Python.definitions_.import_move_gripper_component="import move_gripper_component #/edufill_manipulation/edufill_arm_cmds/src/move_gripper_component.py",Blockly.Python.RESERVED_WORDS_+="geometry_msg,Twist,",a=Blockly.Python.valueToCode(this,
"GRIPPER_LEFT",Blockly.Python.ORDER_NONE)||"None",b=Blockly.Python.valueToCode(this,"GRIPPER_RIGHT",Blockly.Python.ORDER_NONE)||"None",b="move_gripper_component.to_joint_positions(["+a+", "+b+"])\n");return b};Blockly.Python.midlevel_reference_frame=function(){var a=this.getTitleValue("MODE");return["GRIPPER"==a?'"/arm_link_5"':"ARM"==a?'"/arm_link_0"':'"/base_link"',Blockly.Python.ORDER_ATOMIC]};
Blockly.Python.midlevel_ros_move_base_twist=function(){Blockly.Python.definitions_.import_twist="from geometry_msgs.msg import Twist";Blockly.Python.RESERVED_WORDS_+="geometry_msg,Twist,";var a=Blockly.Python.valueToCode(this,"L_X",Blockly.Python.ORDER_NONE)||0,b=Blockly.Python.valueToCode(this,"L_Y",Blockly.Python.ORDER_NONE)||0,c=Blockly.Python.valueToCode(this,"L_Z",Blockly.Python.ORDER_NONE)||0,d=Blockly.Python.valueToCode(this,"A_X",Blockly.Python.ORDER_NONE)||0,e=Blockly.Python.valueToCode(this,
"A_Y",Blockly.Python.ORDER_NONE)||0,f=Blockly.Python.valueToCode(this,"A_Z",Blockly.Python.ORDER_NONE)||0;Blockly.Python.definitions_.ros_move_base_twist=Blockly.GEN_MID_LEVEL_ROS_MOVE_BASE_TWIST_DEF;return"ros_move_base_twist("+a+", "+b+", "+c+", "+d+", "+e+", "+f+") \n"};
Blockly.Python.midlevel_move_arm_joint_position=function(){var a=this.getTitleValue("STATE");if("TRUE"==a)a=Blockly.Python.statementToCode(this,this.changemode.appendInput),a="if True: # '"+this.type+"' block is open and the underlying blocks are visible/used. \n"+a;else if("FALSE"==a)a=Blockly.Python.valueToCode(this,this.getInputJnt,Blockly.Python.ORDER_MEMBER)||["None"],Blockly.Python.definitions_.import_move_arm_component="import move_arm_component  #/edufill_manipulation/edufill_arm_cmds/src/move_arm_component.py",
Blockly.Python.RESERVED_WORDS_+="move_arm_component,",a="move_arm_component.to_joint_positions("+a+") \n";else throw"user changed value to an undefined state "+a;return a};
Blockly.Python.midlevel_move_base_to_pose=function(){var a=this.getTitleValue("STATE"),b;"TRUE"==a?(a=Blockly.Python.statementToCode(this,this.changemode.appendInput),b="if True: # '"+this.type+"' block is open and the underlying blocks are visible/used. \n"+a):"FALSE"==a&&(Blockly.Python.definitions_.import_move_base_component="import move_base_component #/edufill_navigation/edufill_base_cmds/src/move_base_component.py",Blockly.Python.RESERVED_WORDS_+="move_base_component",b="move_base_component.to_pose("+
(Blockly.Python.valueToCode(this,this.getInputPose,Blockly.Python.ORDER_NONE)||"[None]")+")\n");return b};Blockly.Python.midlevel_move_base_relative=function(){Blockly.Python.definitions_.import_move_base_component="import move_base_component #/edufill_navigation/edufill_base_cmds/src/move_base_component.py";Blockly.Python.RESERVED_WORDS_+="move_base_component";return"move_base_component.relative("+(Blockly.Python.valueToCode(this,"POSE",Blockly.Python.ORDER_NONE)||"[None]")+")\n"};
Blockly.Python.midlevel_ik_checker=function(){Blockly.Python.definitions_["from_arm_kinematics_import_*"]="from arm_kinematics import *  #/edufill_manipulation/edufill_arm_cmds/src/arm_kinematics.py";Blockly.Python.RESERVED_WORDS_+="arm_kinematics,";var a=Blockly.Python.valueToCode(this,"POSE6D",Blockly.Python.ORDER_MEMBER)||["None"],b=Blockly.Python.valueToCode(this,"REF",Blockly.Python.ORDER_NONE)||"";return["KinematicsSolver('"+Blockly["LANG_MID_LEVEL_IK_SOLVER_"+this.getTitleValue("MODE")]+"').check_ik_solver_has_solution("+
a+", str("+b+"))",Blockly.Python.ORDER_ATOMIC]};
Blockly.Python.midlevel_ik_solver=function(){Blockly.Python.definitions_["from_arm_kinematics_import_*"]="from arm_kinematics import *  #/edufill_manipulation/edufill_arm_cmds/src/arm_kinematics.py";Blockly.Python.RESERVED_WORDS_+="arm_kinematics,";var a=Blockly.Python.valueToCode(this,"POSE6D",Blockly.Python.ORDER_MEMBER)||["None"],b=Blockly.Python.valueToCode(this,"REF",Blockly.Python.ORDER_NONE)||"";return["KinematicsSolver('"+Blockly["LANG_MID_LEVEL_IK_SOLVER_"+this.getTitleValue("MODE")]+"').get_ik_solution("+
a+", str("+b+"))",Blockly.Python.ORDER_ATOMIC]};
Blockly.Python.midlevel_fk_solver=function(){Blockly.Python.definitions_.from_arm_kinematics_import_KinematicsSolver="from arm_kinematics import KinematicsSolver #/edufill_manipulation/edufill_arm_cmds/src/arm_kinematics.py";Blockly.Python.definitions_["'"+this.variableName+"'"]=this.variableName+" = KinematicsSolver()";var a=Blockly.Python.valueToCode(this,"JOINTS",Blockly.Python.ORDER_MEMBER)||["None"];return[this.variableName+".get_fk_solution("+a+")",Blockly.Python.ORDER_ATOMIC]};
Blockly.Python.midlevel_mapping=function(){Blockly.Python.definitions_.import_mapping_component="import mapping_component";Blockly.Python.RESERVED_WORDS_+="mapping_component,";var a="",b=this.getTitleValue("MODE");"START"==b?a="mapping_component.start()\n":"STOP"==b?a="mapping_component.stop()\n":"STORE"==b&&(a="mapping_component.store("+(Blockly.Python.valueToCode(this,"FILE",Blockly.Python.ORDER_NONE)||"''")+")\n");return a};
Blockly.Python.midlevel_read_map_location=function(){Blockly.Python.definitions_.import_read_base_component="import read_base_component";Blockly.Python.RESERVED_WORDS_+="read_base_component,";return["read_base_component.location()",Blockly.Python.ORDER_ATOMIC]};
Blockly.Python.midlevel_check_wall=function(){Blockly.Python.definitions_.import_read_laser_scan_component="import read_laser_scan_component";Blockly.Python.RESERVED_WORDS_+="read_laser_scan_component,";var a=this.getTitleValue("STATE");if("TRUE"==a)a=Blockly.Python.valueToCode(this,this.changemode.appendInput,Blockly.Python.ORDER_NONE);else if("FALSE"==a)var a="CONFIG_WALL_"+this.getTitleValue("MODE"),b=Blockly.Python.valueToCode(this,"DISTANCE",Blockly.Python.ORDER_NONE),a='read_laser_scan_component.check_wall_with_distance("'+
Blockly[a]+'", '+b+")";else throw"user changed value to an undefined state "+a;return[a,Blockly.Python.ORDER_ATOMIC]};Blockly.Python.variables={};Blockly.Python.variables_get=function(){return[Blockly.Python.variableDB_.getName(this.getTitleValue("VAR"),Blockly.Variables.NAME_TYPE),Blockly.Python.ORDER_ATOMIC]};Blockly.Python.variables_set=function(){var a=Blockly.Python.valueToCode(this,"VALUE",Blockly.Python.ORDER_NONE)||"0";return Blockly.Python.variableDB_.getName(this.getTitleValue("VAR"),Blockly.Variables.NAME_TYPE)+" = "+a+"\n"};Blockly.Python=Blockly.Generator.get("Python");Blockly.Python.RESERVED_WORDS_||(Blockly.Python.RESERVED_WORDS_="");
Blockly.Python.highlevel_application=function(){var a='roslib; roslib.load_manifest("'+this.pkg_name+'")',a=a.replace(/[']/g,"");Blockly.Python.definitions_["import_"+a]="import "+a;Blockly.Python.definitions_.import_rospy="import rospy";Blockly.Python.RESERVED_WORDS_+="roslib,rospy,";return"if __name__==\"__main__\":\n  rospy.init_node('edufill_blockly_node') \n\n"+(Blockly.Python.statementToCode(this,"APP_STACK")||"  pass\n")};
Blockly.Python.highlevel_move_base_to_goal=function(){var a=this.getTitleValue("STATE");if("TRUE"==a)a=Blockly.Python.statementToCode(this,this.changemode.appendInput),a="if True: # '"+this.type+"' block is open and the underlying blocks are visible/used. \n"+a;else if("FALSE"==a)a="CONFIG_PRE_DEF_POSITIONS_"+this.getTitleValue("MODE"),Blockly.Python.definitions_.import_move_base_component="import move_base_component #/edufill_navigation/edufill_base_cmds/src/move_base_component.py",Blockly.Python.RESERVED_WORDS_+=
"move_base_component",a='move_base_component.to_goal("'+Blockly[a]+'")\n';else throw"user changed value to an undefined state "+a;return a};
Blockly.Python.highlevel_move_gripper_string=function(){var a=this.getTitleValue("STATE");if("TRUE"==a)a=Blockly.Python.statementToCode(this,this.changemode.appendInput),a="if True: # '"+this.type+"' block is open and the underlying blocks are visible/used. \n"+a;else if("FALSE"==a)a="CONFIG_FINGER_"+this.getTitleValue("MODE"),Blockly.Python.definitions_.import_move_gripper_component="import move_gripper_component  #/edufill_manipulation/edufill_arm_cmds/src/move_gripper_component.py",Blockly.Python.RESERVED_WORDS_+=
"move_gripper_component,",a='move_gripper_component.to_pose("'+Blockly[a]+'")\n';else throw"user changed value to an undefined state "+a;return a};
Blockly.Python.highlevel_move_arm_joint_string=function(){var a=this.getTitleValue("STATE");if("TRUE"==a)a=Blockly.Python.statementToCode(this,this.changemode.appendInput),a="if True: # '"+this.type+"' block is open and the underlying blocks are visible/used. \n"+a;else if("FALSE"==a)a="CONFIG_PRE_DEF_ARM_POS_"+this.getTitleValue("MODE"),Blockly.Python.definitions_.import_move_arm_component="import move_arm_component  #/edufill_manipulation/edufill_arm_cmds/src/move_arm_component.py",Blockly.Python.RESERVED_WORDS_+=
"move_arm_component,",a='move_arm_component.to_pose("'+Blockly[a]+'") \n';else throw"user changed value to an undefined state "+a;return a};Blockly.Python.highlevel_move_base_distance=function(){var a="CONFIG_BASE_DIRECTION_"+this.getTitleValue("MODE"),b=Blockly.Python.valueToCode(this,"DISTANCE",Blockly.Python.ORDER_NONE)||"0.1";return"TODO "+Blockly[a]+" "+b};
Blockly.Python.highlevel_move_base_to_direction=function(){var a=this.getTitleValue("STATE");if("TRUE"==a)a=Blockly.Python.statementToCode(this,this.changemode.appendInput),a="if True: # '"+this.type+"' block is open and the underlying blocks are visible/used. \n"+a;else if("FALSE"==a){Blockly.Python.definitions_.import_move_base_component="import move_base_component #edufill_navigation/edufill_base_cmds/src/move_base_component.py";Blockly.Python.RESERVED_WORDS_+="move_base_component,";var a="CONFIG_BASE_DIRECTION_"+
this.getTitleValue("MODE"),b=Blockly.Python.valueToCode(this,"DURATION",Blockly.Python.ORDER_NONE)||"2",a='move_base_component.command("'+Blockly[a]+'", '+b+")\n"}else throw"user changed value to an undefined state "+a;return a};
Blockly.Python.highlevel_move_arm_through_ik=function(){var a=Blockly.Python.valueToCode(this,"POSE6D",Blockly.Python.ORDER_NONE)||"NONE";this.getTitleValue("VAR");var b=this.getTitleValue("STATE");if("TRUE"==b)a=Blockly.Python.valueToCode(this,this.changemode.appendInput,Blockly.Python.ORDER_NONE);else if("FALSE"==b)Blockly.Python.definitions_.import_move_arm_component="import move_arm_component  #/edufill_manipulation/edufill_arm_cmds/src/move_arm_component.py",Blockly.Python.RESERVED_WORDS_+="arm_kinematics,",
a="move_arm_component.to_cartesian_pose("+a+', "/arm_link_0") \n';else throw"user changed value to an undefined state "+b;return[a,Blockly.Python.ORDER_ATOMIC]};Blockly.Python.highlevel_find_cube=function(){Blockly.Python.definitions_.import_detect_objects="import detect_objects";Blockly.Python.RESERVED_WORDS_+="detect_objects,";var a="CONFIG_CUBE_"+this.getTitleValue("MODE");return["detect_objects.cube('"+Blockly[a]+"')",Blockly.Python.ORDER_MEMBER]};
Blockly.Python.highlevel_check_wall=function(){Blockly.Python.definitions_.import_read_laser_scan_component="import read_laser_scan_component";Blockly.Python.RESERVED_WORDS_+="read_laser_scan_component,";var a=this.getTitleValue("STATE");if("TRUE"==a)a=Blockly.Python.valueToCode(this,this.changemode.appendInput,Blockly.Python.ORDER_NONE);else if("FALSE"==a)a="CONFIG_WALL_"+this.getTitleValue("MODE"),a='read_laser_scan_component.check_wall("'+Blockly[a]+'")';else throw"user changed value to an undefined state "+
a;return[a,Blockly.Python.ORDER_ATOMIC]};Blockly.Python.text={};Blockly.Python.text=function(){return[Blockly.Python.quote_(this.getTitleValue("TEXT")),Blockly.Python.ORDER_ATOMIC]};
Blockly.Python.text_join=function(){var a;if(0==this.itemCount_)return["''",Blockly.Python.ORDER_ATOMIC];if(1==this.itemCount_)return a=Blockly.Python.valueToCode(this,"ADD0",Blockly.Python.ORDER_NONE)||"''",["str("+a+")",Blockly.Python.ORDER_FUNCTION_CALL];if(2==this.itemCount_){a=Blockly.Python.valueToCode(this,"ADD0",Blockly.Python.ORDER_NONE)||"''";var b=Blockly.Python.valueToCode(this,"ADD1",Blockly.Python.ORDER_NONE)||"''";return["str("+a+") + str("+b+")",Blockly.Python.ORDER_UNARY_SIGN]}a=
[];for(b=0;b<this.itemCount_;b++)a[b]=Blockly.Python.valueToCode(this,"ADD"+b,Blockly.Python.ORDER_NONE)||"''";b=Blockly.Python.variableDB_.getDistinctName("temp_value",Blockly.Variables.NAME_TYPE);a="''.join([str("+b+") for "+b+" in ["+a.join(", ")+"]])";return[a,Blockly.Python.ORDER_FUNCTION_CALL]};
Blockly.Python.text_append=function(){var a=Blockly.Python.variableDB_.getName(this.getTitleValue("VAR"),Blockly.Variables.NAME_TYPE),b=Blockly.Python.valueToCode(this,"TEXT",Blockly.Python.ORDER_NONE)||"''";return a+" = str("+a+") + str("+b+")\n"};Blockly.Python.text_length=function(){return["len("+(Blockly.Python.valueToCode(this,"VALUE",Blockly.Python.ORDER_NONE)||"''")+")",Blockly.Python.ORDER_FUNCTION_CALL]};
Blockly.Python.text_isEmpty=function(){return["not len("+(Blockly.Python.valueToCode(this,"VALUE",Blockly.Python.ORDER_NONE)||"''")+")",Blockly.Python.ORDER_LOGICAL_NOT]};Blockly.Python.text_indexOf=function(){var a="FIRST"==this.getTitleValue("END")?"find":"rfind",b=Blockly.Python.valueToCode(this,"FIND",Blockly.Python.ORDER_NONE)||"''";return[(Blockly.Python.valueToCode(this,"VALUE",Blockly.Python.ORDER_MEMBER)||"''")+"."+a+"("+b+") + 1",Blockly.Python.ORDER_MEMBER]};
Blockly.Python.text_charAt=function(){var a=this.getTitleValue("WHERE")||"FROM_START",b=Blockly.Python.valueToCode(this,"AT",Blockly.Python.ORDER_UNARY_SIGN)||"1",c=Blockly.Python.valueToCode(this,"VALUE",Blockly.Python.ORDER_MEMBER)||"''";switch(a){case "FIRST":return[c+"[0]",Blockly.Python.ORDER_MEMBER];case "LAST":return[c+"[-1]",Blockly.Python.ORDER_MEMBER];case "FROM_START":return b=Blockly.isNumber(b)?parseInt(b,10)-1:"int("+b+" - 1)",[c+"["+b+"]",Blockly.Python.ORDER_MEMBER];case "FROM_END":return[c+
"[-"+b+"]",Blockly.Python.ORDER_MEMBER];case "RANDOM":return Blockly.Python.definitions_.import_random="import random",a=Blockly.Python.provideFunction_("text_random_letter",["def "+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(text):","  x = int(random.random() * len(text))","  return text[x];"])+"("+c+")",[a,Blockly.Python.ORDER_FUNCTION_CALL]}throw"Unhandled option (text_charAt).";};
Blockly.Python.text_getSubstring=function(){var a=Blockly.Python.valueToCode(this,"STRING",Blockly.Python.ORDER_MEMBER)||"''",b=this.getTitleValue("WHERE1"),c=this.getTitleValue("WHERE2"),d=Blockly.Python.valueToCode(this,"AT1",Blockly.Python.ORDER_ADDITIVE)||"1",e=Blockly.Python.valueToCode(this,"AT2",Blockly.Python.ORDER_ADDITIVE)||"1";"FIRST"==b||"FROM_START"==b&&"1"==d?d="":"FROM_START"==b?d=Blockly.isNumber(d)?parseInt(d,10)-1:"int("+d+" - 1)":"FROM_END"==b&&(d=Blockly.isNumber(d)?-parseInt(d,
10):"-int("+d+")");"LAST"==c||"FROM_END"==c&&"1"==e?e="":"FROM_START"==b?e=Blockly.isNumber(e)?parseInt(e,10):"int("+e+")":"FROM_END"==b&&(Blockly.isNumber(e)?(e=1-parseInt(e,10),0==e&&(e="")):(Blockly.Python.definitions_.import_sys="import sys",e="int(1 - "+e+") or sys.maxsize"));return[a+"["+d+" : "+e+"]",Blockly.Python.ORDER_MEMBER]};
Blockly.Python.text_changeCase=function(){var a=this.getTitleValue("CASE"),a=Blockly.Python.text_changeCase.OPERATORS[a];return[(Blockly.Python.valueToCode(this,"TEXT",Blockly.Python.ORDER_MEMBER)||"''")+a,Blockly.Python.ORDER_MEMBER]};Blockly.Python.text_changeCase.OPERATORS={UPPERCASE:".upper()",LOWERCASE:".lower()",TITLECASE:".title()"};
Blockly.Python.text_trim=function(){var a=this.getTitleValue("MODE"),a=Blockly.Python.text_trim.OPERATORS[a];return[(Blockly.Python.valueToCode(this,"TEXT",Blockly.Python.ORDER_MEMBER)||"''")+a,Blockly.Python.ORDER_MEMBER]};Blockly.Python.text_trim.OPERATORS={LEFT:".lstrip()",RIGHT:".rstrip()",BOTH:".strip()"};Blockly.Python.text_print=function(){return"print("+(Blockly.Python.valueToCode(this,"TEXT",Blockly.Python.ORDER_NONE)||"''")+")\n"};
Blockly.Python.text_prompt=function(){var a=Blockly.Python.provideFunction_("text_prompt",["def "+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(msg):","  try:","    return raw_input(msg)","  except NameError:","    return input(msg)"]),b=Blockly.Python.quote_(this.getTitleValue("TEXT")),a=a+"("+b+")";"NUMBER"==this.getTitleValue("TYPE")&&(a="float("+a+")");return[a,Blockly.Python.ORDER_FUNCTION_CALL]};Blockly.Python=Blockly.Generator.get("Python");Blockly.Python.RESERVED_WORDS_||(Blockly.Python.RESERVED_WORDS_="");Blockly.Python.ros_string_msg_type=function(){Blockly.Python.definitions_["from_std_msgs.msg_import_String"]="from std_msgs.msg import String";Blockly.Python.RESERVED_WORDS_+="std_msgs.std,String,";return["String",Blockly.Python.ORDER_ATOMIC]};
Blockly.Python.ros_twist_msg_type=function(){Blockly.Python.definitions_["from_geometry_msgs.msg_import_Twist"]="from geometry_msgs.msg import Twist";Blockly.Python.RESERVED_WORDS_+="geometry_msgs.msg,Twist,";return["Twist",Blockly.Python.ORDER_ATOMIC]};Blockly.Python.ros_twist_msg=function(){Blockly.Python.definitions_["from_geometry_msgs.msg_import_Twist"]="from geometry_msgs.msg import Twist";Blockly.Python.RESERVED_WORDS_+="geometry_msgs.msg,Twist,";return["Twist()",Blockly.Python.ORDER_ATOMIC]};
Blockly.Python.ros_jointstate_msg_type=function(){Blockly.Python.definitions_["from_sensor_msgs.msg_import_JointState"]="from sensor_msgs.msg import JointState";Blockly.Python.RESERVED_WORDS_+="sensor_msgs,msg,JointState,";return["JointState",Blockly.Python.ORDER_ATOMIC]};
Blockly.Python.ros_jointstate_msg=function(){Blockly.Python.definitions_["from_sensor_msgs.msg_import_JointState"]="from sensor_msgs.msg import JointState";Blockly.Python.RESERVED_WORDS_+="sensor_msgs,msg,JointState,";return["JointState()",Blockly.Python.ORDER_ATOMIC]};
Blockly.Python.ros_get_twist_element=function(){var a=Blockly.Python.valueToCode(this,"VARIABLE",Blockly.Python.ORDER_NONE)||"None",b=this.getTitleValue("MODE1"),c=this.getTitleValue("MODE2");return[a+"."+Blockly[b]+"."+Blockly[c],Blockly.Python.ORDER_ATOMIC]};
Blockly.Python.ros_set_twist_element=function(){var a=Blockly.Python.valueToCode(this,"VARIABLE",Blockly.Python.ORDER_NONE)||"None",b=Blockly.Python.valueToCode(this,"NEW_VAL",Blockly.Python.ORDER_NONE)||"None",c=this.getTitleValue("MODE1"),d=this.getTitleValue("MODE2");return a+"."+Blockly[c]+"."+Blockly[d]+" = "+b+"\n"};Blockly.Python.ros_jointpositions_msg_type=function(){return["JointPositions",Blockly.Python.ORDER_ATOMIC]};
Blockly.Python.ros_other_msg_type=function(){return[this.getTitleValue("MSG_NAME"),Blockly.Python.ORDER_ATOMIC]};
Blockly.Python.rosmessage_base_pose_msg=function(){Blockly.Python.definitions_["from_geometry_msgs.msg_import_*"]="from geometry_msgs.msg import *";Blockly.Python.RESERVED_WORDS_+="geometry_msgs.msg,";Blockly.Python.definitions_.base_pose_msg='def base_pose_msg(x, y, z, q):\n  pose = PoseStamped()\n  pose.header.stamp = rospy.Time.now()\n  pose.header.frame_id = "/map"\n  pose.pose.position.x = x \n  pose.pose.position.y = y\n  pose.pose.position.z = 0.0\n  pose.pose.orientation.x = q[0]\n  pose.pose.orientation.y = q[1]\n  pose.pose.orientation.z = q[2]\n  pose.pose.orientation.w = q[3]\n\n  return pose\n';var a=
Blockly.Python.valueToCode(this,"X",Blockly.Python.ORDER_NONE)||"0",b=Blockly.Python.valueToCode(this,"Y",Blockly.Python.ORDER_NONE)||"0",c=Blockly.Python.valueToCode(this,"Z",Blockly.Python.ORDER_NONE)||"0",d=Blockly.Python.valueToCode(this,"Q",Blockly.Python.ORDER_NONE);return["base_pose_msg("+a+", "+b+", "+c+", "+d+")",Blockly.Python.ORDER_ATOMIC]};
Blockly.Python.rosmessage_gripper_position_msg=function(){Blockly.Python.definitions_.import_rospy="import rospy";Blockly.Python.definitions_["import_brics_actuator.msg"]="import brics_actuator.msg";Blockly.Python.definitions_["from_brics_actuator.msg_import_JointPositions_JointValue_Poison"]="from brics_actuator.msg import JointPositions, JointValue, Poison";Blockly.Python.RESERVED_WORDS_+="rospy,brics_actuator.msg,JointPositions,JointValue,Poison,";Blockly.Python.definitions_.def_create_gripper_msg=
'def create_gripper_msg (left_gripper, right_gripper): \n  jp = JointPositions() \n  jv1 = JointValue()\n  jv1.joint_uri = "gripper_finger_joint_l"\n  jv1.value = left_gripper\n  jv1.unit = "m"\n  jv2 = JointValue()\n  jv2.joint_uri = "gripper_finger_joint_r"\n  jv2.value = right_gripper\n  jv2.unit = "m"\n  p = Poison()\n  jp.poisonStamp = p\n\n  jp.positions = [jv1, jv2]\n\n  return jp\n';var a=Blockly.Python.valueToCode(this,"GRIPPER_L",Blockly.Python.ORDER_NONE),b=Blockly.Python.valueToCode(this,
"GRIPPER_R",Blockly.Python.ORDER_NONE);return["create_gripper_msg("+a+", "+b+")",Blockly.Python.ORDER_ATOMIC]};Blockly.Python.rosmessage_joint_state_msg_name=function(){var a=Blockly.Python.valueToCode(this,"PREFIX",Blockly.Python.ORDER_NONE)||"''",b=Blockly.Python.valueToCode(this,"NUMBER_OF_JOINTS",Blockly.Python.ORDER_NONE);return this.getTitleValue("VAR")+".name = ["+a+"+str(i+1) for i in range("+b+")]\n"};
Blockly.Python.rosmessage_joint_state_msg_position=function(){var a=Blockly.Python.valueToCode(this,"VALUE",Blockly.Python.ORDER_NONE),b=Blockly.Python.valueToCode(this,"NUMBER_OF_JOINTS",Blockly.Python.ORDER_NONE);return this.getTitleValue("VAR")+".position = ["+a+"[i] for i in range("+b+")]\n"};
Blockly.Python.rosmessage_joint_state_msg_velocity=function(){var a=Blockly.Python.valueToCode(this,"INDEX",Blockly.Python.ORDER_NONE),b=Blockly.Python.valueToCode(this,"VALUE",Blockly.Python.ORDER_NONE);return this.getTitleValue("VAR")+".velocity["+a+"] = "+b+"\n"};
Blockly.Python.rosmessage_joint_state_msg_effort=function(){var a=Blockly.Python.valueToCode(this,"INDEX",Blockly.Python.ORDER_NONE),b=Blockly.Python.valueToCode(this,"VALUE",Blockly.Python.ORDER_NONE);return this.getTitleValue("VAR")+".effort["+a+"] = "+b+"\n"};
Blockly.Python.rosmessage_arm_joint_position_msg=function(){var a=this.jointCount_;Blockly.Python.definitions_.import_rospy="import rospy";Blockly.Python.definitions_["import_brics_actuator.msg"]="import brics_actuator.msg";Blockly.Python.definitions_["from_brics_actuator.msg_import_JointPositions_JointValue_Poison"]="from brics_actuator.msg import JointPositions, JointValue, Poison";Blockly.Python.RESERVED_WORDS_+="rospy,brics_actuator.msg,JointPositions,JointValue,Poison,";for(var b=0;b<a;b++);
Blockly.Python.definitions_.def_create_joint_position_msg='def create_joint_position_msg (jointNameList, jointValueList):\n  jp = JointPositions()\n\n  for i in jointNameList:\n    jv[i] = JointValue()\n    jv[i].joint_uri = jointNameList[i]\n    jv[i].value = jointValueList[i]\n    jv[i].unit = "rad"\n\n  \n  p = Poison() \n  jp.poisonStamp = p\n  jp.positions = jv\n\n  return jp.positions\n';for(var c=[],d=[],b=0;b<a;b++){var e=this.getTitleValue("JOINTNAME"+b),f=Blockly.Python.valueToCode(this,
"JOINTVALUE"+b,Blockly.Python.ORDER_NONE)||"None";c.push("'"+e+"'");d.push(f)}return["create_joint_position_msg(["+c+"],["+d+"])",Blockly.Python.ORDER_ATOMIC]};Blockly.Python.math={};Blockly.Python.addReservedWords("math,random");Blockly.Python.math_number=function(){var a=window.parseFloat(this.getTitleValue("NUM"));return[a,0>a?Blockly.Python.ORDER_UNARY_SIGN:Blockly.Python.ORDER_ATOMIC]};Blockly.Python.math_arithmetic=function(){var a=this.getTitleValue("OP"),b=Blockly.Python.math_arithmetic.OPERATORS[a],a=b[0],b=b[1],c=Blockly.Python.valueToCode(this,"A",b)||"0",d=Blockly.Python.valueToCode(this,"B",b)||"0";return[c+a+d,b]};
Blockly.Python.math_arithmetic.OPERATORS={ADD:[" + ",Blockly.Python.ORDER_ADDITIVE],MINUS:[" - ",Blockly.Python.ORDER_ADDITIVE],MULTIPLY:[" * ",Blockly.Python.ORDER_MULTIPLICATIVE],DIVIDE:[" / ",Blockly.Python.ORDER_MULTIPLICATIVE],POWER:[" ** ",Blockly.Python.ORDER_EXPONENTIATION]};
Blockly.Python.math_single=function(){var a=this.getTitleValue("OP"),b,c;if("NEG"==a)return b=Blockly.Python.valueToCode(this,"NUM",Blockly.Python.ORDER_UNARY_SIGN)||"0",["-"+b,Blockly.Python.ORDER_UNARY_SIGN];Blockly.Python.definitions_.import_math="import math";c="SIN"==a||"COS"==a||"TAN"==a?Blockly.Python.valueToCode(this,"NUM",Blockly.Python.ORDER_MULTIPLICATIVE)||"0":Blockly.Python.valueToCode(this,"NUM",Blockly.Python.ORDER_NONE)||"0";switch(a){case "ABS":b="math.fabs("+c+")";break;case "ROOT":b=
"math.sqrt("+c+")";break;case "LN":b="math.log("+c+")";break;case "LOG10":b="math.log10("+c+")";break;case "EXP":b="math.exp("+c+")";break;case "POW10":b="math.pow(10,"+c+")";break;case "ROUND":b="round("+c+")";break;case "ROUNDUP":b="math.ceil("+c+")";break;case "ROUNDDOWN":b="math.floor("+c+")";break;case "SIN":b="math.sin("+c+" / 180.0 * math.pi)";break;case "COS":b="math.cos("+c+" / 180.0 * math.pi)";break;case "TAN":b="math.tan("+c+" / 180.0 * math.pi)"}if(b)return[b,Blockly.Python.ORDER_FUNCTION_CALL];
switch(a){case "ASIN":b="math.asin("+c+") / math.pi * 180";break;case "ACOS":b="math.acos("+c+") / math.pi * 180";break;case "ATAN":b="math.atan("+c+") / math.pi * 180";break;default:throw"Unknown math operator: "+a;}return[b,Blockly.Python.ORDER_MULTIPLICATIVE]};Blockly.Python.math_constant=function(){var a=this.getTitleValue("CONSTANT");"INFINITY"!=a&&(Blockly.Python.definitions_.import_math="import math");return Blockly.Python.math_constant.CONSTANTS[a]};
Blockly.Python.math_constant.CONSTANTS={PI:["math.pi",Blockly.Python.ORDER_MEMBER],E:["math.e",Blockly.Python.ORDER_MEMBER],GOLDEN_RATIO:["(1 + math.sqrt(5)) / 2",Blockly.Python.ORDER_MULTIPLICATIVE],SQRT2:["math.sqrt(2)",Blockly.Python.ORDER_MEMBER],SQRT1_2:["math.sqrt(1.0 / 2)",Blockly.Python.ORDER_MEMBER],INFINITY:["float('inf')",Blockly.Python.ORDER_ATOMIC]};
Blockly.Python.math_number_property=function(){var a=Blockly.Python.valueToCode(this,"NUMBER_TO_CHECK",Blockly.Python.ORDER_MULTIPLICATIVE);if(!a)return["False",Blockly.Python.ORDER_ATOMIC];var b=this.getTitleValue("PROPERTY"),c;if("PRIME"==b)return Blockly.Python.definitions_.import_math="import math",c=Blockly.Python.provideFunction_("isPrime",["def "+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(n):","  # http://en.wikipedia.org/wiki/Primality_test#Naive_methods","  # If n is not a number but a string, try parsing it.",
"  if type(n) not in (int, float, long):","    try:","      n = float(n)","    except:","      return False","  if n == 2 or n == 3:","    return True","  # False if n is negative, is 1, or not whole, or if n is divisible by 2 or 3.","  if n <= 1 or n % 1 != 0 or n % 2 == 0 or n % 3 == 0:","    return False","  # Check all the numbers of form 6k +/- 1, up to sqrt(n).","  for x in range(6, int(math.sqrt(n)) + 2, 6):","    if n % (x - 1) == 0 or n % (x + 1) == 0:","      return False","  return True"])+
"("+a+")",[c,Blockly.Python.ORDER_FUNCTION_CALL];switch(b){case "EVEN":c=a+" % 2 == 0";break;case "ODD":c=a+" % 2 == 1";break;case "WHOLE":c=a+" % 1 == 0";break;case "POSITIVE":c=a+" > 0";break;case "NEGATIVE":c=a+" < 0";break;case "DIVISIBLE_BY":b=Blockly.Python.valueToCode(this,"DIVISOR",Blockly.Python.ORDER_MULTIPLICATIVE);if(!b||"0"==b)return["False",Blockly.Python.ORDER_ATOMIC];c=a+" % "+b+" == 0"}return[c,Blockly.Python.ORDER_RELATIONAL]};
Blockly.Python.math_change=function(){var a=Blockly.Python.valueToCode(this,"DELTA",Blockly.Python.ORDER_ADDITIVE)||"0",b=Blockly.Python.variableDB_.getName(this.getTitleValue("VAR"),Blockly.Variables.NAME_TYPE);return b+" = ("+b+" if type("+b+") in (int, float, long) else 0) + "+a+"\n"};Blockly.Python.math_round=Blockly.Python.math_single;Blockly.Python.math_trig=Blockly.Python.math_single;
Blockly.Python.math_on_list=function(){var a=this.getTitleValue("OP"),b=Blockly.Python.valueToCode(this,"LIST",Blockly.Python.ORDER_NONE)||"[]";switch(a){case "SUM":b="sum("+b+")";break;case "MIN":b="min("+b+")";break;case "MAX":b="max("+b+")";break;case "AVERAGE":a=Blockly.Python.provideFunction_("math_mean",["def "+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(myList):","  localList = [e for e in myList if type(e) in (int, float, long)]","  if not localList: return","  return float(sum(localList)) / len(localList)"]);
b=a+"("+b+")";break;case "MEDIAN":a=Blockly.Python.provideFunction_("math_median",["def "+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(myList):","  localList = sorted([e for e in myList if type(e) in (int, float, long)])","  if not localList: return","  if len(localList) % 2 == 0:","    return (localList[len(localList) / 2 - 1] + localList[len(localList) / 2]) / 2.0","  else:","    return localList[(len(localList) - 1) / 2]"]);b=a+"("+b+")";break;case "MODE":a=Blockly.Python.provideFunction_("math_modes",
["def "+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(some_list):","  modes = []","  # Using a lists of [item, count] to keep count rather than dict",'  # to avoid "unhashable" errors when the counted item is itself a list or dict.',"  counts = []","  maxCount = 1","  for item in some_list:","    found = False","    for count in counts:","      if count[0] == item:","        count[1] += 1","        maxCount = max(maxCount, count[1])","        found = True","    if not found:","      counts.append([item, 1])",
"  for counted_item, item_count in counts:","    if item_count == maxCount:","      modes.append(counted_item)","  return modes"]);b=a+"("+b+")";break;case "STD_DEV":Blockly.Python.definitions_.import_math="import math";a=Blockly.Python.provideFunction_("math_standard_deviation",["def "+Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(numbers):","  n = len(numbers)","  if n == 0: return","  mean = float(sum(numbers)) / n","  variance = sum((x - mean) ** 2 for x in numbers) / n","  return math.sqrt(variance)"]);
b=a+"("+b+")";break;case "RANDOM":Blockly.Python.definitions_.import_random="import random";b="random.choice("+b+")";break;default:throw"Unknown operator: "+a;}return[b,Blockly.Python.ORDER_FUNCTION_CALL]};Blockly.Python.math_modulo=function(){var a=Blockly.Python.valueToCode(this,"DIVIDEND",Blockly.Python.ORDER_MULTIPLICATIVE)||"0",b=Blockly.Python.valueToCode(this,"DIVISOR",Blockly.Python.ORDER_MULTIPLICATIVE)||"0";return[a+" % "+b,Blockly.Python.ORDER_MULTIPLICATIVE]};
Blockly.Python.math_constrain=function(){var a=Blockly.Python.valueToCode(this,"VALUE",Blockly.Python.ORDER_NONE)||"0",b=Blockly.Python.valueToCode(this,"LOW",Blockly.Python.ORDER_NONE)||"0",c=Blockly.Python.valueToCode(this,"HIGH",Blockly.Python.ORDER_NONE)||"float('inf')";return["min(max("+a+", "+b+"), "+c+")",Blockly.Python.ORDER_FUNCTION_CALL]};
Blockly.Python.math_random_int=function(){Blockly.Python.definitions_.import_random="import random";var a=Blockly.Python.valueToCode(this,"FROM",Blockly.Python.ORDER_NONE)||"0",b=Blockly.Python.valueToCode(this,"TO",Blockly.Python.ORDER_NONE)||"0";return["random.randint("+a+", "+b+")",Blockly.Python.ORDER_FUNCTION_CALL]};Blockly.Python.math_random_float=function(){Blockly.Python.definitions_.import_random="import random";return["random.random()",Blockly.Python.ORDER_FUNCTION_CALL]};